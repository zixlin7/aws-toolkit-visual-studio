<commonui:BaseAWSControl x:Class="Amazon.AWSToolkit.Lambda.View.UploadFunctionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:commonui="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
             xmlns:toolkitcomponents="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"            
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="450"
             Width="550"
             >

    <commonui:BaseAWSControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/DefaultTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="0" />
            </Style>       
        </ResourceDictionary>
    </commonui:BaseAWSControl.Resources>

    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0" Visibility="Collapsed" Name="_ctlAccountPanel" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Label Style="{DynamicResource awsWizardGroupHeaderStyle}"
                   Grid.Row="0"
                   Margin="0"
                   >
                Profile
            </Label>
            
            <toolkitcomponents:AccountAndRegionPicker
                Margin="10,5,5,5"
                Grid.Row="1"
                Name="_ctlAccountAndRegion"/>
        </Grid>

        <Grid Grid.Row="0" Visibility="Collapsed" Name="_ctlSourcePanel" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Label Style="{DynamicResource awsWizardGroupHeaderStyle}"
                   Grid.Row="0"
                   Margin="0"
                   >
                Function Source
            </Label>            
            
            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="1" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   >Source Location:</TextBlock>

            <TextBox Margin="5,5,5,5" 
                     Grid.Row="1" 
                     Grid.Column="1" 
                     Name="_ctlSource"
                     Style="{DynamicResource awsTextBoxStyle}"/>

            <Button Grid.Row="1" Grid.Column="2"
                        Margin="5,5,5,5" Padding="5,0,5,0"
                        Click="BrowseDirectory_Click">
                Browse Directory
            </Button>

            <Button Grid.Row="1" Grid.Column="3"
                        Margin="5,5,5,5" Padding="5,0,5,0"
                        Click="BrowseFile_Click">
                Browse File
            </Button>

            <TextBlock 
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Grid.Row="2"   
                           FontStyle="Italic"
                           TextWrapping="Wrap"
                           Margin="12,4,4,0" 
                           Style="{DynamicResource awsFieldHintTextStyle}">
                The source location can either be a zip file, a single javascript file or a directory which will be zipped up before being uploaded.
            </TextBlock>
        </Grid>

        <Grid Grid.Row="1" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Label Style="{DynamicResource awsWizardGroupHeaderStyle}"
                   Grid.Row="0" Grid.ColumnSpan="2">
                Function Description
            </Label>

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="1" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   >Function Name:</TextBlock>
            <ComboBox Margin="5"
                  Grid.Row="1"
                  Grid.Column="1"
                  Name="_ctlFunctionNamePicker"
                  SelectionChanged="_ctlFunctionName_SelectionChanged"
                  Style="{DynamicResource awsComboBoxStyle}"
                  SelectedIndex="0"
                  IsEditable="True"
                  Visibility="Collapsed"
                  />
            <TextBox Margin="5,5,5,5" 
                     Name="_ctlFunctionNameText"
                     Grid.Row="1" 
                     Grid.Column="1"
                     Style="{DynamicResource awsTextBoxStyle}"
                     Visibility="Collapsed"
                     />

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="2" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   >Description:</TextBlock>            
            <TextBox Margin="5,5,5,5" 
                     Grid.Row="2" 
                     Grid.Column="1" 
                     Name="_ctlDescription"
                     Style="{DynamicResource awsTextBoxStyle}"/>

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="3" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}"
                   ToolTip="Enter the file name within your .zip that contains the code for the Lambda function. This must be a valid .js file."
                   >File Name:</TextBlock>
            <TextBox Margin="5,5,5,5" 
                     Name="_ctlFileName"
                     Grid.Row="3" 
                     Grid.Column="1"
                     Style="{DynamicResource awsTextBoxStyle}"
                     ToolTip="Enter the file name within your .zip that contains the code for the Lambda function. This must be a valid .js file."
                     />

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="4" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}"
                   ToolTip="Specify which handler needs to run by entering your handler name from the code supplied above. The handler name can be found at &quot;exports.&lt;handlername&gt; = function(..&quot; in your code body."
                   >Handler:</TextBlock>
            <TextBox Margin="5,5,5,5" 
                     Grid.Row="4" 
                     Grid.Column="1" 
                     Name="_ctlHandler"
                     Style="{DynamicResource awsTextBoxStyle}"
                     ToolTip="Specify which handler needs to run by entering your handler name from the code supplied above. The handler name can be found at &quot;exports.&lt;handlername&gt; = function(..&quot; in your code body."
                     />
            <TextBlock 
                    Grid.Column="1"
                    Grid.Row="5"   
                           FontStyle="Italic"
                           TextWrapping="Wrap"
                           Margin="12,4,4,0" 
                           Style="{DynamicResource awsFieldHintTextStyle}">
                The handler name can be found at &quot;exports.&lt;handlername&gt; = function(..&quot; in your code body.
            </TextBlock>

            <Label Style="{DynamicResource awsWizardGroupHeaderStyle}"
                   Grid.Row="6" Grid.ColumnSpan="2">
                Advanced Settings
            </Label>

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="7" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   ToolTip="Provide an IAM role for your code with appropriate permissions. For example, if your code needs to write to S3, the role you provide must have write permissions to S3. If you want Lambda to automatically write your logs to CloudWatch logs and generate CloudWatch metrics for you, make sure the role has permissions to write to CloudWatch logs and CloudWatch metrics."
                   >Role Name:</TextBlock>
            <toolkitcomponents:IAMCapabilityPicker 
                   Name="_ctlIAMPicker" 
                   Grid.Row="7"
                   Grid.Column="1"
                   ToolTip="Provide an IAM role for your code with appropriate permissions. For example, if your code needs to write to S3, the role you provide must have write permissions to S3. If you want Lambda to automatically write your logs to CloudWatch logs and generate CloudWatch metrics for you, make sure the role has permissions to write to CloudWatch logs and CloudWatch metrics."
                />
            <TextBlock 
                    Grid.Column="1"
                    Grid.Row="8"   
                           FontStyle="Italic"
                           TextWrapping="Wrap"
                           Margin="12,4,4,0" 
                           Style="{DynamicResource awsFieldHintTextStyle}">
                Provide an IAM role for your code with appropriate permissions. For example, if your code needs to write to S3, the role you provide must have write permissions to S3.
            </TextBlock>


            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="9" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   ToolTip="Choose the memory available to your Lambda function. CPU will be assigned proportional to memory. The higher the setting, the more compute resources your code will have, which can improve its execution performance. You can specify memory in 64-MB increments up to 1024 MB. Changing this setting will impact your duration cost."
                   >Memory (MB):</TextBlock>
            <ComboBox Margin="5"
                  Grid.Row="9"
                  Grid.Column="1"
                  Name="_ctlMemory"
                  Style="{DynamicResource awsComboBoxStyle}"
                  SelectedIndex="0"
                  MinWidth="50"
                  HorizontalAlignment="Left"                  
                  ToolTip="Choose the memory available to your Lambda function. CPU will be assigned proportional to memory. The higher the setting, the more compute resources your code will have, which can improve its execution performance. You can specify memory in 64-MB increments up to 1024 MB. Changing this setting will impact your duration cost."
                  />

            <TextBlock Margin="15,5,5,5" 
                   Grid.Row="10" 
                   Grid.Column="0" 
                   VerticalAlignment="Center" 
                   Style="{DynamicResource awsTextBlockBaseStyle}" 
                   ToolTip="Choose a duration limit for your Lambda function. Lambda will terminate your Lambda function once it executes up to the duration limit. Changing this setting can potentially help you control duration costs."
                   >Timeout (S):</TextBlock>
            <ComboBox Margin="5"
                  Grid.Row="10"
                  Grid.Column="1"
                  Name="_ctlTimeout"
                  Style="{DynamicResource awsComboBoxStyle}"
                  SelectedIndex="2"
                  MinWidth="50"
                  HorizontalAlignment="Left"
                  ToolTip="Choose a duration limit for your Lambda function. Lambda will terminate your Lambda function once it executes up to the duration limit. Changing this setting can potentially help you control duration costs."
                  />
            
            <CheckBox Margin="5,8,5,5"
                 Grid.Row="11"
                 Grid.Column="0"
                 Grid.ColumnSpan="2"
                 Name="_ctlOpenView"
                 IsChecked="True"
                 Style="{DynamicResource awsCheckboxButtonBaseStyle}"                   
            >
                Open Lambda Function view after upload complete.
            </CheckBox>

        </Grid>
    </Grid>
</commonui:BaseAWSControl>
