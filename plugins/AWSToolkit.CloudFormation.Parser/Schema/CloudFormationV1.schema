{
    "root-schema-object": {
        "type": "Object",
        "required": true,
        "properties": {
            "AWSTemplateFormatVersion": {
                "allowed-values": ["2010-09-09"],
                "description": "The template format version is an optional declaration that identifies the capabilities of the template format. Because the AWS CloudFormation template format has not changed, there is currently only one value supported.",
                "type": "String",
                "required": false,
                "disable-refs": true
            },
            "Description": {
                "disable-functions": true,
                "description": "The template Description section is optional. When it is present, it must follow the AWSTemplateFormatVersion section.",
                "type": "String",
                "required": false,
                "disable-refs": true
            },
            "Parameters": {
                "default-child-schema": {
                    "type": "Object",
                    "required": false,
                    "properties": {
                        "NoEcho": {
                            "description": "If TRUE, the value of the parameter is masked with asterisks (*****) with cfn-describe-stacks.",
                            "type": "String",
                            "required": false
                        },
                        "Type": {
                            "allowed-values": [
                                "String",
                                "Number",
                                "CommaDelimitedList",
                                "AWS::EC2::KeyPair::KeyName",
                                "AWS::EC2::SecurityGroup::Id",
                                "List<AWS::EC2::SecurityGroup::Id>",
                                "AWS::EC2::Subnet::Id",
                                "List<AWS::EC2::Subnet::Id>",
                                "AWS::EC2::VPC::Id",
                                "List<AWS::EC2::VPC::Id>"
                            ],
                            "description": "The type of parameter to create.",
                            "type": "String",
                            "required": true
                        },
                        "AllowedValues": {
                            "array-type": "String",
                            "description": "An array containing the list of values allowed for the parameter.",
                            "type": "Array",
                            "required": false
                        },
                        "Description": {
                            "description": "A String type up to 4000 characters describing the parameter.",
                            "type": "String",
                            "required": false
                        },
                        "AllowedPattern": {
                            "description": " A regular expression that represents the patterns allowed in the parameter's string value.",
                            "type": "String",
                            "required": false
                        },
                        "MinValue": {
                            "description": "A numeric value that determines the smallest numeric value allowed for the parameter.",
                            "type": "Number",
                            "required": false
                        },
                        "MinLength": {
                            "description": "A integer value that determines the minimum number of characters in the parameter's string value.",
                            "type": "String",
                            "required": false
                        },
                        "ConstraintDescription": {
                            "description": "A String type that describes the constraint requirements when the user specifies a parameter value that does not match the constraints defined for the parameter.",
                            "type": "String",
                            "required": false
                        },
                        "MaxValue": {
                            "description": "A numeric value that determines the largest numeric value allowed for the parameter.",
                            "type": "Number",
                            "required": false
                        },
                        "MaxLength": {
                            "description": "A integer value that determines the maximum number of characters in the parameter's string value.",
                            "type": "String",
                            "required": false
                        },
                        "Default": {
                            "description": "A value of the appropriate type for the template to use if no value is specified at stack creation.",
                            "type": "String",
                            "required": false
                        }
                    }
                },
                "description": "The optional Parameters section enables you to pass values into your template at stack creation time. Parameters allow you to create templates that can be customized for each stack deployment. When a user creates a stack from a template containing parameters, the user can specify values for those parameters. Within the template, you can use the \"Ref\" intrinsic function to specify those parameter values in properties values for resources.",
                "type": "Named-Array",
                "required": false
            },
            "Mappings": {
                "default-child-schema": {
                    "type": "Json",
                    "required": true
                },
                "description": "Mappings match a key to a corresponding set of named values. For example, if you want to set values based on a region, you can create a mapping that uses the region name as a key and contains the values you want to specify for each specific region.",
                "type": "Named-Array",
                "required": false
            },
            "Outputs": {
                "default-child-schema": {
                    "type": "Object",
                    "required": false,
                    "properties": {
                        "Condition": {
                            "description": "Associated condition that if true will allow the output to be returned.",
                            "type": "ConditionDeclaration",
                            "required": false
                        },
                        "Description": {
                            "description": "A String type up to 4K in length describing the output value.",
                            "type": "String",
                            "required": false
                        },
                        "Value": {
                            "description": "The value of the property that is returned.",
                            "type": "String",
                            "required": true
                        }
                    }
                },
                "description": "The optional Outputs section enables you to return one or more values to the user.",
                "type": "Named-Array",
                "required": false
            },
            "Resources": {
                "child-schemas": {
                    "AWS::EC2::RouteTable": {
                        "description": "Creates a new route table within a VPC. After you create a new route table, you can add routes and associate the table with a subnet.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new route table within a VPC. After you create a new route table, you can add routes and associate the table with a subnet.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC where the route table will be created.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::SecurityGroupIngress": {
                        "description": "The AWS::EC2::SecurityGroupIngress type adds an ingress rule to an Amazon EC2 or VPC security group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::SecurityGroupIngress type adds an ingress rule to an Amazon EC2 or VPC security group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "GroupName": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Name of the EC2 security group to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource or the name of an existing EC2 security group. Required: Can be used instead of GroupId for EC2 security groups.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CidrIp": {
                                        "description": "The CIDR range. If you specify SourceSecurityGroupName, do not specify CidrIp.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "FromPort": {
                                        "allowed-values": [
                                            "*",
                                            {
                                                "display-label": "SSH (22)",
                                                "value": "22"
                                            },
                                            {
                                                "display-label": "SMTP (25)",
                                                "value": "25"
                                            },
                                            {
                                                "display-label": "HTTP (80)",
                                                "value": "80"
                                            },
                                            {
                                                "display-label": "POP3 (110)",
                                                "value": "110"
                                            },
                                            {
                                                "display-label": "HTTPS (443)",
                                                "value": "443"
                                            },
                                            {
                                                "display-label": "MS_SQL (1433)",
                                                "value": "1433"
                                            },
                                            {
                                                "display-label": "RDP (3389)",
                                                "value": "3389"
                                            }
                                        ],
                                        "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. An ICMP type number of -1 indicates a wildcard.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SourceSecurityGroupName": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Specifies the name of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupName.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ToPort": {
                                        "allowed-values": [
                                            "*",
                                            {
                                                "display-label": "SSH (22)",
                                                "value": "22"
                                            },
                                            {
                                                "display-label": "SMTP (25)",
                                                "value": "25"
                                            },
                                            {
                                                "display-label": "HTTP (80)",
                                                "value": "80"
                                            },
                                            {
                                                "display-label": "POP3 (110)",
                                                "value": "110"
                                            },
                                            {
                                                "display-label": "HTTPS (443)",
                                                "value": "443"
                                            },
                                            {
                                                "display-label": "MS_SQL (1433)",
                                                "value": "1433"
                                            },
                                            {
                                                "display-label": "RDP (3389)",
                                                "value": "3389"
                                            }
                                        ],
                                        "description": "End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP code of -1 indicates a wildcard.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SourceSecurityGroupOwnerId": {
                                        "description": "Specifies the AWS Account ID of the owner of the Amazon EC2 Security Group specified in the SourceSecurityGroupName property.\n\nIf you specify SourceSecurityGroupName and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "IpProtocol": {
                                        "allowed-values": [
                                            "*",
                                            "tcp",
                                            "udp",
                                            "icmp"
                                        ],
                                        "description": "IP protocol name or number.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SourceSecurityGroupId": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "For VPC security groups only. Specifies the ID of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupId.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "GroupId": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Name of the EC2 security group to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource or the name of an existing EC2 security group. Required: Yes, for VPC security groups; can be used instead of GroupName for EC2 security groups.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::IAM::Group": {
                        "return-values": [{
                            "name": "Arn",
                            "description": "Returns the Amazon Resource Name (ARN) for the AWS::IAM::Group resource. For example: arn:aws:iam::123456789012:group/mystack-mygroup-1DZETITOWEKVO."
                        }],
                        "description": "The AWS::IAM::Group type creates an Identity and Access Management (IAM) group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::IAM::Group type creates an Identity and Access Management (IAM) group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Path": {
                                        "description": "The path for the group. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Policies": {
                                        "array-type": "Policy",
                                        "resource-ref-type": "AWS::IAM::Policy",
                                        "description": "Applies specified policies to the role.",
                                        "type": "Array",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::IAM::UserToGroupAddition": {
                        "description": "The AWS::IAM::UserToGroupAddition type adds Identity and Access Management (IAM) users to a group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::IAM::UserToGroupAddition type adds Identity and Access Management (IAM) users to a group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "GroupName": {
                                        "resource-ref-type": "AWS::IAM::Group",
                                        "description": "List of groups",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Users": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::User",
                                        "description": "List of users",
                                        "type": "Array",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::DBSubnetGroup": {
                        "description": "The AWS::RDS::DBSubnetGroup type creates DB subnet group. DB subnet groups must contain at least one subnet in each AZ in the region.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::RDS::DBSubnetGroup type creates DB subnet group. DB subnet groups must contain at least one subnet in each AZ in the region.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "DBSubnetGroupDescription": {
                                        "description": "The description for the DB Subnet Group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SubnetIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The EC2 Subnet IDs for the DB Subnet Group.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Route53::HostedZone": {
                        "description": "The AWS::Route53::HostedZone resource creates a hosted zone, which can contain a collection of record sets for a domain.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::Route53::HostedZone resource creates a hosted zone, which can contain a collection of record sets for a domain.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "HostedZoneTags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "VPCs": {
                                        "array-type": "Object",
                                        "description": "One or more VPCs that you want to associate with this hosted zone. When you specify this property, AWS CloudFormation creates a private hosted zone.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "VPCRegion": {
                                                "description": "The region in which the Amazon VPC was created as specified in the VPCId property.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "VPCId": {
                                                "resource-ref-type": "AWS::EC2::VPC",
                                                "description": "The ID of the Amazon VPC that you want to associate with the hosted zone.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "HostedZoneConfig": {
                                        "description": "A complex type that contains an optional comment about your hosted zone.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"Comment": {
                                            "description": "Any comments that you want to include about the hosted zone.",
                                            "type": "String",
                                            "required": false
                                        }}
                                    },
                                    "Name": {
                                        "description": "The name of the domain. For resource record types that include a domain name, specify a fully qualified domain name.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::Subnet": {
                        "return-values": [{
                            "name": "AvailabilityZone",
                            "description": "Returns the availability zone (for example, \"us-east-1a\") of this subnet."
                        }],
                        "description": "Creates a subnet in an existing VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a subnet in an existing VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "A Ref structure containing the ID of the VPC where you want to create the subnet. The VPC ID is provided as the value of the \"Ref\" property, as: { \"Ref\": \"VPCID\" }.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AvailabilityZone": {
                                        "description": "The availability zone you want the subnet in. Default: AWS selects a zone for you (recommended).",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CidrBlock": {
                                        "description": "The CIDR block you want the subnet to cover (for example, \"10.0.0.0/24\").",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElasticLoadBalancing::LoadBalancer": {
                        "return-values": [
                            {
                                "name": "CanonicalHostedZoneName",
                                "description": "The name of the Route 53 hosted zone that is associated with the LoadBalancer."
                            },
                            {
                                "name": "CanonicalHostedZoneNameID",
                                "description": "The ID of the Route 53 hosted zone name that is associated with the LoadBalancer."
                            },
                            {
                                "name": "DNSName",
                                "description": "The DNS name for the LoadBalancer."
                            },
                            {
                                "name": "SourceSecurityGroup.GroupName",
                                "description": "The security group that you can use as part of your inbound rules for your LoadBalancer's back-end Amazon EC2 application instances."
                            },
                            {
                                "name": "SourceSecurityGroup.OwnerAlias",
                                "description": "Owner of the source security group."
                            }
                        ],
                        "description": "The AWS::ElasticLoadBalancing::LoadBalancer type creates a LoadBalancer.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SNS::TopicPolicy type applies a policy to SNS topics.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "SecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Security groups assigned to your load balancer within your virtual private cloud (VPC).",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "ConnectionDrainingPolicy": {
                                        "description": "Whether deregistered or unhealthy instances can complete all in-flight requests.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Timeout": {
                                                "description": "The time in seconds after the load balancer closes all connections to a deregistered or unhealthy instance.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "Enabled": {
                                                "description": "Whether or not connection draining is enabled for the load balancer.",
                                                "type": "Boolean",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Policies": {
                                        "array-type": "Object",
                                        "description": "A list of elastic load balancing policies to apply to this elastic load balancer.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "PolicyType": {
                                                "description": "The name of the policy type for this policy.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "PolicyName": {
                                                "description": "A name for this policy that is unique to the load balancer.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Attributes": {
                                                "array-type": "Json",
                                                "description": "A list of arbitrary attributes for this policy.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "LoadBalancerPorts": {
                                                "array-type": "String",
                                                "description": "A list of external load balancer ports for the policy.",
                                                "type": "Array",
                                                "required": true
                                            },
                                            "InstancePorts": {
                                                "array-type": "String",
                                                "description": "A list of instance ports for the policy. These are the ports associated with the back-end server.",
                                                "type": "Array",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Scheme": {
                                        "description": "For LoadBalancers attached to an Apazon VPC, this parameter can be used to specify the type of LoadBalancer to use. Specify \"internal\" to create an internal LoadBalancer with a DNS name that resolves to private IP addresses.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AvailabilityZones": {
                                        "array-type": "String",
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "The Availability Zones in which to create the load balancer. You can specify either AvailabilityZones or Subnets, but not both.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "HealthCheck": {
                                        "description": "When specified, declares an application health check for the instances.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Target": {
                                                "description": "Specifies the instance being checked. The protocol is either TCP or HTTP. The range of valid ports is 1 through 65535.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "UnhealthyThreshold": {
                                                "description": "Specifies the number of consecutive health probe failures required before moving the instance to the Unhealthy state.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Timeout": {
                                                "description": "Specifies the amount of time, in seconds, during which no response means a failed health probe. This value must be less than the value for Interval.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "HealthyThreshold": {
                                                "description": "Specifies the number of consecutive health probe successes required before moving the instance to the Healthy state.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Interval": {
                                                "description": "Specifies the approximate interval, in seconds, between health checks of an individual instance.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "AccessLoggingPolicy": {
                                        "description": "Captures detailed information for all requests made to your load balancer, such as the time a request was received, client�s IP address, latencies, request path, and server responses.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "EmitInterval": {
                                                "description": "The interval for publishing access logs in minutes. You can specify an interval of either 5 minutes or 60 minutes.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "S3BucketPrefix": {
                                                "description": "A prefix for the all log object keys, such as my-load-balancer-logs/prod. If you store log files from multiple sources in a single bucket, you can use a prefix to distinguish each log file and its source.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Enabled": {
                                                "description": "Whether logging is enabled for the load balancer.",
                                                "type": "Boolean",
                                                "required": true
                                            },
                                            "S3BucketName": {
                                                "description": "The name of an Amazon S3 bucket where access log files are stored.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Instances": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "Provides a list of EC2 instance IDs for the LoadBalancer.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "LoadBalancerName": {
                                        "description": "A name for the load balancer. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the load balancer. The name must be unique within your set of load balancers.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Listeners": {
                                        "array-type": "Object",
                                        "description": "One or more listeners for this load balancer. Each listener must be registered for a specific port, and you can not have more than one listener for a given port.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "PolicyNames": {
                                                "array-type": "String",
                                                "description": "A list of ElasticLoadBalancing policy names to associate with the listener.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "InstancePort": {
                                                "description": "Specifies the TCP port on which the instance server is listening. This property cannot be modified for the life of the LoadBalancer.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "LoadBalancerPort": {
                                                "description": "Specifies the external LoadBalancer port number. This property cannot be modified for the life of the LoadBalancer.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Protocol": {
                                                "allowed-values": [
                                                    "HTTP",
                                                    "HTTPS",
                                                    "TCP",
                                                    "SSL"
                                                ],
                                                "description": "Specifies the LoadBalancer transport protocol to use for routing � TCP or HTTP. This property cannot be modified for the life of the LoadBalancer.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SSLCertificateId": {
                                                "description": "The ARN of the SSL certificate to use.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "InstanceProtocol": {
                                                "allowed-values": [
                                                    "HTTP",
                                                    "HTTPS",
                                                    "TCP",
                                                    "SSL"
                                                ],
                                                "description": "Specifies the protocol to use for routing traffic to back-end instances�HTTP, HTTPS, TCP, or SSL. This property cannot be modified for the life of the load balancer.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Subnets": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "A list of subnet IDs in your virtual private cloud (VPC) to attach to your load balancer. You can specify either AvailabilityZones or Subnets, but not both.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "CrossZone": {
                                        "description": "Specifies whether cross-zone load balancing is enabled for the load balancer. With cross-zone load balancing, your load balancer nodes route traffic to the back-end instances across all Availability Zones. By default the CrossZone property is false.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "AppCookieStickinessPolicy": {
                                        "array-type": "Object",
                                        "description": "Generates one or more stickiness policies with sticky session lifetimes that follow that of an application-generated cookie. These policies can be associated only with HTTP/HTTPS listeners.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "ApplicationName": {
                                                "description": "The name of the policy being created. The name must be unique within the set of policies for this Load Balancer.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "CookieName": {
                                                "description": "Name of the application cookie used for stickiness.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "LBCookieStickinessPolicy": {
                                        "array-type": "Object",
                                        "description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent), or by a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "CookieExpirationPeriod": {
                                                "description": "The time period, in seconds, after which the cookie should be considered stale. If this parameter isn't specified, the sticky session will last for the duration of the browser session.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "PolicyName": {
                                                "description": "The name of the policy being created. The name must be unique within the set of policies for this load balancer.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::OpsWorks::Layer": {
                        "description": "Creates an AWS OpsWorks layer. A layer defines, for example, which packages and applications are installed and how they are configured.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an AWS OpsWorks layer. A layer defines, for example, which packages and applications are installed and how they are configured.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "EnableAutoHealing": {
                                        "description": "Whether to automatically heal Amazon EC2 instances that have become disconnected or timed out.",
                                        "type": "Boolean",
                                        "required": true
                                    },
                                    "LoadBasedAutoScaling": {
                                        "description": "The load-based scaling configuration for the AWS OpsWorks layer.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "DownScaling": {
                                                "array-type": "Object",
                                                "description": "AutoScalingThresholds for OpsWorks Layer.",
                                                "type": "Array",
                                                "required": false,
                                                "properties": {
                                                    "InstanceCount": {
                                                        "description": "The number of instances to add or remove when the load exceeds a threshold.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "CpuThreshold": {
                                                        "description": "The percentage of CPU utilization that triggers the starting or stopping of instances (scaling).",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "ThresholdsWaitTime": {
                                                        "description": "The amount of time, in minutes, that the load must exceed a threshold before instances are added or removed.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "MemoryThreshold": {
                                                        "description": "The percentage of memory consumption that triggers the starting or stopping of instances (scaling).",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "IgnoreMetricsTime": {
                                                        "description": "The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not start any additional scaling events.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "LoadThreshold": {
                                                        "description": "The degree of system load that triggers the starting or stopping of instances (scaling). ",
                                                        "type": "Number",
                                                        "required": false
                                                    }
                                                }
                                            },
                                            "UpScaling": {
                                                "array-type": "Object",
                                                "description": "AutoScalingThresholds for OpsWorks Layer.",
                                                "type": "Array",
                                                "required": false,
                                                "properties": {
                                                    "InstanceCount": {
                                                        "description": "The number of instances to add or remove when the load exceeds a threshold.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "CpuThreshold": {
                                                        "description": "The percentage of CPU utilization that triggers the starting or stopping of instances (scaling).",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "ThresholdsWaitTime": {
                                                        "description": "The amount of time, in minutes, that the load must exceed a threshold before instances are added or removed.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "MemoryThreshold": {
                                                        "description": "The percentage of memory consumption that triggers the starting or stopping of instances (scaling).",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "IgnoreMetricsTime": {
                                                        "description": "The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not start any additional scaling events.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "LoadThreshold": {
                                                        "description": "The degree of system load that triggers the starting or stopping of instances (scaling). ",
                                                        "type": "Number",
                                                        "required": false
                                                    }
                                                }
                                            },
                                            "Enable": {
                                                "description": "Whether to enable automatic load-based scaling for the layer.",
                                                "type": "Boolean",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Attributes": {
                                        "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
                                        "type": "Json",
                                        "required": false
                                    },
                                    "CustomInstanceProfileArn": {
                                        "resource-ref-type": "AWS::IAM::InstanceProfile",
                                        "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is to be used for the Amazon EC2 instances in this layer.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstallUpdatesOnBoot": {
                                        "description": "Whether to install operating system and package updates when the instance boots.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "VolumeConfigurations": {
                                        "description": "Describes the Amazon EBS volumes for this layer.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "MountPoint": {
                                                "description": "The volume mount point, such as /dev/sdh.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "RaidLevel": {
                                                "description": "he number of disks in the volume.",
                                                "type": "Number",
                                                "required": true
                                            },
                                            "Size": {
                                                "description": "The volume size.",
                                                "type": "Number",
                                                "required": true
                                            },
                                            "NumberOfDisks": {
                                                "description": "The number of disks in the volume.",
                                                "type": "Number",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Name": {
                                        "description": "The AWS OpsWorks layer name.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "CustomSecurityGroupIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Custom security group IDs for this layer.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "Type": {
                                        "description": "The layer type. A stack cannot have more than one layer of the same type.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoAssignElasticIps": {
                                        "description": "Whether to automatically assign an Elastic IP address to Amazon EC2 instances in this layer.",
                                        "type": "Boolean",
                                        "required": true
                                    },
                                    "Packages": {
                                        "array-type": "String",
                                        "description": "The packages for this layer.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "Shortname": {
                                        "description": "The layer short name, which is used internally by AWS OpsWorks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AutoAssignPublicIps": {
                                        "description": "For AWS OpsWorks stacks that are running in a VPC, whether to automatically assign a public IP address to Amazon EC2 instances in this layer.",
                                        "type": "Boolean",
                                        "required": true
                                    },
                                    "CustomRecipes": {
                                        "description": "Custom event recipes for this layer.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Shutdown": {
                                                "array-type": "String",
                                                "description": "Custom recipe names to be run following a Shutdown event. This event occurs after you direct AWS OpsWorks to shut an instance down before the associated Amazon EC2 instance is actually terminated.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "Configure": {
                                                "array-type": "String",
                                                "description": "Custom recipe names to be run following a Configure event. The event occurs on all of the stack's instances when an instance enters or leaves the online state.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "Undeploy": {
                                                "array-type": "String",
                                                "description": "Custom recipe names to be run following a Undeploy event. This event occurs when you delete an app or run an undeploy command to remove an app from a set of application server instances.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "Deploy": {
                                                "array-type": "String",
                                                "description": "Custom recipe names to be run following a Deploy event. The event occurs when you run a deploy command, typically to deploy an application to a set of application server instances.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "Setup": {
                                                "array-type": "String",
                                                "description": "Custom recipe names to be run following a Setup event. This event occurs on a new instance after it successfully boots.",
                                                "type": "Array",
                                                "required": false
                                            }
                                        }
                                    },
                                    "StackId": {
                                        "resource-ref-type": "AWS::OpsWorks::Stack",
                                        "description": "The ID of the AWS OpsWorks stack that this layer will be associated with.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPCPeeringConnection": {
                        "description": "A VPC peering connection enables a network connection between two virtual private clouds (VPCs) so that you can route traffic between them by means of a private IP addresses.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "A VPC peering connection enables a network connection between two virtual private clouds (VPCs) so that you can route traffic between them by means of a private IP addresses.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC that is requesting a peering connection.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "PeerVpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC with which you are creating the peering connection.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VolumeAttachment": {
                        "description": "Attaches a volume to an EC2 instance.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new route table within a VPC. After you create a new route table, you can add routes and associate the table with a subnet.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VolumeId": {
                                        "resource-ref-type": "AWS::EC2::Volume",
                                        "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an AWS::EC2::Volume resource, or it can be the volume ID of an existing Amazon EBS volume.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "InstanceId": {
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "The ID of the instance to which the volume attaches. This value can be a reference to an AWS::EC2::Instance resource, or it can be the instance ID of an existing EC2 instance.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Device": {
                                        "description": "How the device is exposed to the instance (e.g., /dev/sdh, or xvdh).",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPC": {
                        "return-values": [
                            {
                                "name": "DefaultNetworkAcl",
                                "description": "The default network ACL ID that is associated with the VPC, which AWS creates when you create a VPC."
                            },
                            {
                                "name": "DefaultSecurityGroup",
                                "description": "The default security group ID that is associated with the VPC, which AWS creates when you create a VPC."
                            }
                        ],
                        "description": "Creates a Virtual Private Cloud (VPC) with the CIDR block that you specify.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a Virtual Private Cloud (VPC) with the CIDR block that you specify.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "InstanceTenancy": {
                                        "allowed-values": [
                                            "default",
                                            "dedicated"
                                        ],
                                        "description": "The allowed tenancy of instances launched into the VPC. A value of \"default\" means instances can be launched with any tenancy; a value of \"dedicated\" means instances must be launched with tenancy as dedicated.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "CidrBlock": {
                                        "description": "The CIDR block you want the VPC to cover. For example: \"10.0.0.0/16\".",
                                        "type": "String",
                                        "required": true
                                    },
                                    "EnableDnsSupport": {
                                        "description": "Specifies whether DNS resolution is supported for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not. By default the value is set to true.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "EnableDnsHostnames": {
                                        "description": "Specifies whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not. You can only set EnableDnsHostnames to true if you also set the EnableDnsSupport attribute to true. By default, the value is set to false.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::SubnetRouteTableAssociation": {
                        "description": "Associates a subnet with a route table.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Associates a subnet with a route table.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "RouteTableId": {
                                        "resource-ref-type": "AWS::EC2::RouteTable",
                                        "description": "The ID of the route table. This is commonly written as a reference to a route table declared elsewhere in the template. For example:",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The ID of the subnet. This is commonly written as a reference to a subnet declared elsewhere in the template.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElastiCache::SecurityGroup": {
                        "description": "The AWS::ElastiCache::SecurityGroup type creates a cache security group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::ElastiCache::SecurityGroup type creates a cache security group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"Description": {
                                    "description": "The description property of the new cache security group.",
                                    "type": "String",
                                    "required": true
                                }}
                            }
                        }
                    },
                    "AWS::IAM::InstanceProfile": {
                        "return-values": [{
                            "name": "Arn",
                            "description": "Returns the Amazon Resource Name (ARN) for the instance profile. For example: arn:aws:iam::1234567890:instance-profile/MyProfile-ASDNSDLKJ."
                        }],
                        "description": "Creates an AWS Identity and Access Management (IAM) Instance Profile that can be used with IAM Roles for EC2 Instances.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an AWS Identity and Access Management (IAM) Instance Profile that can be used with IAM Roles for EC2 Instances.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Path": {
                                        "description": "The path associated with this IAM instance profile. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Roles": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::Role",
                                        "description": "The roles associated with this IAM instance profile.",
                                        "type": "Array",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::DBSecurityGroupIngress": {
                        "description": "The AWS::RDS::DBSecurityGroupIngress type enables ingress to a DBSecurityGroup using one of two forms of authorization.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::RDS::DBSecurityGroupIngress type enables ingress to a DBSecurityGroup using one of two forms of authorization.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "CIDRIP": {
                                        "description": "The IP range to authorize.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EC2SecurityGroupName": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Name of the EC2 Security Group to authorize.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EC2SecurityGroupOwnerId": {
                                        "description": "AWS Account Number of the owner of the EC2 Security Group specified in the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EC2SecurityGroupId": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Id of the VPC or EC2 Security Group to authorize.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::DBSecurityGroup": {
                        "description": "The AWS::RDS::DBSecurityGroup type is used to create or update an Amazon RDS DB Security Group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::RDS::DBSecurityGroup type is used to create or update an Amazon RDS DB Security Group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "GroupDescription": {
                                        "description": "Description of the security group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "EC2VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The Id of VPC. Indicates which VPC this DB Security Group should belong to. Required: Conditional. Must be specified to create a DB Security Group for a VPC; may not be specified otherwise.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DBSecurityGroupIngress": {
                                        "array-type": "Object",
                                        "description": "Network ingress authorization for an Amazon EC2 security group or an IP address range.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "CIDRIP": {
                                                "description": "The IP range to authorize.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "EC2SecurityGroupName": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "Name of the EC2 Security Group to authorize.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "EC2SecurityGroupOwnerId": {
                                                "description": "AWS Account Number of the owner of the EC2 Security Group specified in the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "EC2SecurityGroupId": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "Id of the VPC or EC2 Security Group to authorize.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::Route": {
                        "description": "Creates a new route in a route table within a VPC. The route's target can be either a gateway attached to the VPC or a NAT instance in the VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new route in a route table within a VPC. The route's target can be either a gateway attached to the VPC or a NAT instance in the VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcPeeringConnectionId": {
                                        "resource-ref-type": "AWS::EC2::VPCPeeringConnection",
                                        "description": "The ID of a VPC peering connection.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "RouteTableId": {
                                        "resource-ref-type": "AWS::EC2::RouteTable",
                                        "description": "The ID of the route table where the route will be added.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "InstanceId": {
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "The ID of a NAT instance in your VPC. For example, \"i-1a2b3c4d\". Required: Conditional. You must provide only one of the following: a GatewayID, InstanceID, or NetworkInterfaceId.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DestinationCidrBlock": {
                                        "description": "The CIDR address block used for the destination match. For example, \"0.0.0.0/0\". Routing decisions are based on the most specific match.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "GatewayId": {
                                        "resource-ref-type": [
                                            "AWS::EC2::InternetGateway",
                                            "AWS::EC2::VPNGateway"
                                        ],
                                        "description": "The ID of a gateway attached to your VPC. For example: \"igw-eaad4883\". Required: Conditional. You must provide only one of the following: a GatewayID, InstanceID, or NetworkInterfaceId.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NetworkInterfaceId": {
                                        "resource-ref-type": "AWS::EC2::NetworkInterface",
                                        "description": "Allows the routing of network interface IDs. Required: Conditional. You must provide only one of the following: a GatewayID, InstanceID, or NetworkInterfaceId.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::Instance": {
                        "return-values": [
                            {
                                "name": "AvailabilityZone",
                                "description": "The availability zone where the specified instance is launched. For example: us-east-1b."
                            },
                            {
                                "name": "PrivateDnsName",
                                "description": "The private DNS name of the specified instance. For example: ip-10-24-34-0.ec2.internal"
                            },
                            {
                                "name": "PublicDnsName",
                                "description": "The public DNS name of the specified instance. For example: ec2-107-20-50-45.compute-1.amazonaws.com"
                            },
                            {
                                "name": "PrivateIp",
                                "description": "The private IP address of the specified instance. For example: 10.24.34.0"
                            },
                            {
                                "name": "PublicIp",
                                "description": "The public IP address of the specified instance. For example: 192.0.2.0"
                            }
                        ],
                        "description": "The AWS::EC2::Instance type creates an Amazon EC2 instance.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::Instance type creates an Amazon EC2 instance.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "CreationPolicy": {
                                "description": "The CreationPolicy prevents the resource's status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.",
                                "type": "Object",
                                "required": false,
                                "properties": {"ResourceSignal": {
                                    "description": "Signal configuration.",
                                    "type": "Object",
                                    "required": true,
                                    "properties": {
                                        "Timeout": {
                                            "description": "The length of time that AWS CloudFormation waits for the number of signals that was specified in the Count property. The value must be in ISO8601 duration format, in the form: PT#H#M#S, where each # is the number of hours, minutes, and seconds, respectively. Default: PT5M (5 minutes)",
                                            "type": "String",
                                            "required": false
                                        },
                                        "Count": {
                                            "description": "The number of success signals AWS CloudFormation must receive before it sets the resource status as CREATE_COMPLETE.",
                                            "type": "Number",
                                            "required": false
                                        }
                                    }
                                }}
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Tenancy": {
                                        "description": "The tenancy of the instance that you want to launch. This value can be either \"default\" or \"dedicated\". An instance that has a tenancy value of \"dedicated\" runs on single-tenant hardware and can be launched only into a VPC.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Valid only for EC2 security groups. A list that contains the EC2 security groups to assign to the Amazon EC2 instance. The list can contain both the name of existing EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "PrivateIpAddress": {
                                        "description": "If you're using an Amazon Virtual Private Cloud (VPC), you can optionally use this parameter to assign the instance a specific available IP address from the subnet (e.g., 10.0.0.25). By default, Amazon VPC selects an IP address from the subnet for the instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "UserData": {
                                        "description": "Base64-encoded MIME user data that is made available to the instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceInitiatedShutdownBehavior": {
                                        "description": "Indicates whether an instance stops or terminates when you shut down the instance from the instance's operating system shutdown command.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "BlockDeviceMappings": {
                                        "array-type": "Object",
                                        "description": "Defines a set of Amazon EC2 Elastic Block Store (EBS) block device mappings.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Ebs": {
                                                "description": "The EC2 EBS Block Device. You can specify either VirtualName or Ebs, but not both.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "SnapshotId": {
                                                        "description": "The snapshot ID of the volume to use to create a block device. If you specify both SnapshotId and VolumeSize, VolumeSize must be equal or greater than the size of the snapshot.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "VolumeType": {
                                                        "allowed-values": [
                                                            "*",
                                                            "standard",
                                                            "io1",
                                                            "gp2"
                                                        ],
                                                        "description": "The volume size, in gibibytes (GiB). This can be a number from 1 to 1024. If the volume type is \"io1\", the minimum value is 10.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "Iops": {
                                                        "description": "The number of I/O operations per second (IOPS) that the volume supports. This can be an integer from 100 to 2000. Required when the volume type is \"io1\"; not used with standard volumes.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "VolumeSize": {
                                                        "description": "The volume size, in gibibytes (GiB). This can be a number from 1 to 1024. If the volume type is \"io1\", the minimum value is 10. If you specify both SnapshotId and VolumeSize, VolumeSize must be equal or greater than the size of the snapshot.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "DeleteOnTermination": {
                                                        "description": "Determines whether to delete the volume on instance termination. The default value is \"true\".",
                                                        "type": "Boolean",
                                                        "required": false
                                                    }
                                                }
                                            },
                                            "NoDevice": {
                                                "description": "This is set to empty map (\"{}\") that be used to unmap a defined device.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {}
                                            },
                                            "VirtualName": {
                                                "description": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from zero (0); for example, ephemeral0. You can specify either VirtualName or Ebs, but not both.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "DeviceName": {
                                                "description": "The name of the device within Amazon EC2.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "AvailabilityZone": {
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "Specifies the name of the availability zone in which the instance is located. If not specified, the default availability zone for the region will be used.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "IamInstanceProfile": {
                                        "resource-ref-type": "AWS::IAM::InstanceProfile",
                                        "description": "A reference to an AWS::IAM::InstanceProfile type",
                                        "type": "String",
                                        "required": false
                                    },
                                    "KernelId": {
                                        "description": "The kernel ID",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "If you're using Amazon Virtual Private Cloud, this specifies the ID of the subnet that you want to launch the instance into.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SecurityGroupIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "A list that contains the security group IDs for VPC security groups to assign to the Amazon EC2 instance.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "EbsOptimized": {
                                        "description": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "DisableApiTermination": {
                                        "description": "Specifies whether the instance can be terminated through the API (specify \"true\"), or not (specify \"false\").",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "KeyName": {
                                        "description": "Provides the name of the EC2 key pair.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "RamdiskId": {
                                        "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SourceDestCheck": {
                                        "description": "Controls whether source/destination checking is enabled on the instance. Also determines if an instance in a VPC will perform network address translation (NAT).",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "PlacementGroupName": {
                                        "description": "The name of an existing placement group that you want to launch the instance into (for cluster instances).",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Volumes": {
                                        "array-type": "Object",
                                        "description": "The EBS volumes to attach to the instance.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "VolumeId": {
                                                "resource-ref-type": "AWS::EC2::Volume",
                                                "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone and the instance must be running.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Device": {
                                                "description": "How the device is exposed to the instance (such as /dev/sdh, or xvdh).",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "NetworkInterfaces": {
                                        "array-type": "Object",
                                        "description": "A list of network interfaces to associate with this instance.",
                                        "type": "Array",
                                        "properties": {
                                            "Description": {
                                                "description": "The description of this network interface.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "PrivateIpAddress": {
                                                "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "PrivateIpAddresses": {
                                                "array-type": "Object",
                                                "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property.",
                                                "type": "Array",
                                                "required": false,
                                                "properties": {
                                                    "PrivateIpAddress": {
                                                        "description": "The private IP address of the network interface.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "Primary": {
                                                        "description": "Sets the private IP address as the primary private address. You can set only one primary private IP address.",
                                                        "type": "Boolean",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "SecondaryPrivateIpAddressCount": {
                                                "description": "The number of secondary private IP addresses that Amazon EC2 auto assigns to the network interface. Amazon EC2 uses the value of the PrivateIpAddress property as the primary private IP address.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "DeviceIndex": {
                                                "description": "The order in which the network interface should be attached.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "GroupSet": {
                                                "array-type": "String",
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "A list of security group IDs associated with this network interface.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "SubnetId": {
                                                "resource-ref-type": "AWS::EC2::Subnet",
                                                "description": "The ID of the subnet to associate with the network interface.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "AssociatePublicIpAddress": {
                                                "description": "Indicates whether the network interface receives a public IP address. You can associate a public IP address with a network interface only if it has a device index of eth0.",
                                                "type": "Boolean",
                                                "required": false
                                            },
                                            "NetworkInterfaceId": {
                                                "resource-ref-type": "AWS::EC2::NetworkInterface",
                                                "description": "The ID of the network interface to attach.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "DeleteOnTermination": {
                                                "description": "Determines whether to delete the network interface on instance termination.",
                                                "type": "Boolean",
                                                "required": false
                                            }
                                        },
                                        "required": false
                                    },
                                    "ImageId": {
                                        "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "InstanceType": {
                                        "allowed-values": [
                                            "*",
                                            "t1.micro",
                                            "m1.small",
                                            "m1.medium",
                                            "m1.large",
                                            "m1.xlarge",
                                            "m2.xlarge",
                                            "m2.2xlarge",
                                            "m2.4xlarge",
                                            "m3.medium",
                                            "m3.large",
                                            "m3.xlarge",
                                            "m3.2xlarge",
                                            "c1.medium",
                                            "c1.xlarge",
                                            "cr1.8xlarge",
                                            "c3.large",
                                            "c3.xlarge",
                                            "c3.2xlarge",
                                            "c3.4xlarge",
                                            "c3.8xlarge",
                                            "cc1.4xlarge",
                                            "cc2.8xlarge",
                                            "cg1.4xlarge",
                                            "g2.2xlarge",
                                            "g2.2xlarge",
                                            "hi1.4xlarge",
                                            "hs1.8xlarge",
                                            "i2.xlarge",
                                            "i2.2xlarge",
                                            "i2.4xlarge",
                                            "i2.8xlarge",
                                            "r3.large",
                                            "r3.xlarge",
                                            "r3.2xlarge",
                                            "r3.4xlarge",
                                            "r3.8xlarge"
                                        ],
                                        "description": "The instance type. For example, \"m1.small\".",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Monitoring": {
                                        "description": "Specifies whether monitoring is enabled for the instance.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Logs::LogGroup": {
                        "description": "The AWS::Logs::LogGroup resource creates an Amazon CloudWatch Logs log group that defines common properties for log streams, such as their retention and access control rules. Each log stream must belong to one log group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::Logs::LogGroup resource creates an Amazon CloudWatch Logs log group that defines common properties for log streams, such as their retention and access control rules. Each log stream must belong to one log group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"RetentionInDays": {
                                    "description": "The number of days log events are kept in CloudWatch Logs. When a log event expires, CloudWatch Logs automatically deletes it.",
                                    "type": "Number",
                                    "required": false
                                }}
                            }
                        }
                    },
                    "AWS::CloudFormation::Stack": {
                        "return-values": [{
                            "name": "*",
                            "description": "The output value from the specified embedded stack where EmbeddedStackOutputName is the name of the output value."
                        }],
                        "description": "The AWS::CloudFormation::Stack type embeds a stack as a resource in a template.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::CloudFormation::Stack type embeds a stack as a resource in a template.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "TemplateURL": {
                                        "description": "The URL of a template that specifies the stack that you want to create as a resource.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Parameters": {
                                        "description": "The set of parameters passed to AWS CloudFormation when this embedded stack is created.",
                                        "type": "Json",
                                        "required": false
                                    },
                                    "TimeoutInMinutes": {
                                        "description": "The length of time, in minutes, that AWS CloudFormation waits for the embedded stack to reach the CREATE_COMPLETE state. ",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Kinesis::Stream": {
                        "description": "Creates an Amazon Kinesis stream that captures and transports data records that are emitted from data sources.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon Kinesis stream that captures and transports data records that are emitted from data sources.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"ShardCount": {
                                    "description": "The number of shards that the stream uses. For greater provisioned throughput, increase the number of shards.",
                                    "type": "Number",
                                    "required": true
                                }}
                            }
                        }
                    },
                    "AWS::Redshift::ClusterSubnetGroup": {
                        "description": "Creates an Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon VPC when creating an Amazon Redshift subnet group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon VPC when creating an Amazon Redshift subnet group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "A description of the security group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SubnetIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "A list of VPC subnet IDs. You can modify a maximum of 20 subnets.",
                                        "type": "Array",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::AutoScaling::LaunchConfiguration": {
                        "description": "The AWS::AutoScaling::LaunchConfiguration type creates an Auto Scaling launch configuration that can be used by an Auto Scaling group to configure EC2 instances in the Auto Scaling group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::AutoScaling::LaunchConfiguration type creates an Auto Scaling launch configuration that can be used by an Auto Scaling group to configure EC2 instances in the Auto Scaling group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "PlacementTenancy": {
                                        "description": "The tenancy of the instance. An instance with a tenancy of dedicated runs on single-tenant hardware and can only be launched in a VPC.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "A list containing the EC2 security groups to assign to the Amazon EC2 instances in the Auto Scaling group. The list can contain the name of existing EC2 security groups, references to AWS::EC2::SecurityGroup resources created in the template, or both.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the Amazon EC2 instance you want to use to create the launch configuration. Use this property if you want the launch configuration to use settings from an existing Amazon EC2 instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "UserData": {
                                        "description": "The user data available to the launched EC2 instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ClassicLinkVPCSecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "BlockDeviceMappings": {
                                        "array-type": "Object",
                                        "description": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Ebs": {
                                                "description": "The information for the Elastic Block Store volume. If you specify the Ebs property, do not specify the VirtualName property.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "SnapshotId": {
                                                        "description": "The Snapshot ID of the volume to use.  If you specify SnapshotId, do not specify VolumeSize.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "VolumeType": {
                                                        "description": "The volume type. By default, Auto Scaling uses the standard volume type.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "Iops": {
                                                        "description": "The number of I/O operations per second (IOPS) that the volume supports. The maximum ratio of IOPS to volume size is 30.",
                                                        "type": "Number",
                                                        "required": false
                                                    },
                                                    "VolumeSize": {
                                                        "description": "The volume size, in GigiBytes.  If you specify VolumeSize, do not specify SnapshotId.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "DeleteOnTermination": {
                                                        "description": "Indicates whether to delete the volume when the instance is terminated. By default, Auto Scaling uses true.",
                                                        "type": "Boolean",
                                                        "required": false
                                                    }
                                                }
                                            },
                                            "NoDevice": {
                                                "description": "Suppresses the device mapping. If NoDevice is set to true for the root device, the instance might fail the Amazon EC2 health check. Auto Scaling launches a replacement instance if the instance fails the health check.",
                                                "type": "Boolean",
                                                "required": false
                                            },
                                            "VirtualName": {
                                                "description": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from 0, for example, ephemeral0. If you specify the VirtualName property, do not specify the Ebs property.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "DeviceName": {
                                                "description": "The name of the device within Amazon EC2.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "IamInstanceProfile": {
                                        "resource-ref-type": "AWS::IAM::InstanceProfile",
                                        "description": "Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "KernelId": {
                                        "description": "The kernel ID",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AssociatePublicIpAddress": {
                                        "description": "Indicates whether Amazon EC2 instances in the Auto Scaling group receive public IP addresses. If you specify true, each instance in the Auto Scaling receives a unique public IP address.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "ClassicLinkVPCId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. You can specify this property only for EC2-Classic instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EbsOptimized": {
                                        "allowed-values": [
                                            "true",
                                            "false"
                                        ],
                                        "description": "Specifies whether the launch configuration is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. Additional fees are incurred when using EBS-optimized instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "KeyName": {
                                        "description": "Provides the name of the EC2 key pair.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "RamdiskId": {
                                        "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SpotPrice": {
                                        "description": "The spot price for this autoscaling group. If a spot price is set, then the autoscaling group will launch when the current spot price is less than the amount specified in the template.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ImageId": {
                                        "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceType": {
                                        "allowed-values": [
                                            "*",
                                            "t1.micro",
                                            "m1.small",
                                            "m1.medium",
                                            "m1.large",
                                            "m1.xlarge",
                                            "m2.xlarge",
                                            "m2.2xlarge",
                                            "m2.4xlarge",
                                            "m3.medium",
                                            "m3.large",
                                            "m3.xlarge",
                                            "m3.2xlarge",
                                            "c1.medium",
                                            "c1.xlarge",
                                            "cr1.8xlarge",
                                            "c3.large",
                                            "c3.xlarge",
                                            "c3.2xlarge",
                                            "c3.4xlarge",
                                            "c3.8xlarge",
                                            "cc1.4xlarge",
                                            "cc2.8xlarge",
                                            "cg1.4xlarge",
                                            "g2.2xlarge",
                                            "g2.2xlarge",
                                            "hi1.4xlarge",
                                            "hs1.8xlarge",
                                            "i2.xlarge",
                                            "i2.2xlarge",
                                            "i2.4xlarge",
                                            "i2.8xlarge",
                                            "r3.large",
                                            "r3.xlarge",
                                            "r3.2xlarge",
                                            "r3.4xlarge",
                                            "r3.8xlarge"
                                        ],
                                        "description": "The instance type. For example, \"m1.small\".",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceMonitoring": {
                                        "description": "Indicates whether or not instance monitoring should be enabled for this autoscaling group. This is enabled by default. To turn it off, set InstanceMonitoring to \"false\".",
                                        "type": "Boolean",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Logs::MetricFilter": {
                        "description": "The AWS::Logs::MetricFilter resource creates a metric filter that describes how Amazon CloudWatch Logs extracts information from logs that you specify and transforms it into Amazon CloudWatch metrics.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::Logs::MetricFilter resource creates a metric filter that describes how Amazon CloudWatch Logs extracts information from logs that you specify and transforms it into Amazon CloudWatch metrics.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "MetricTransformations": {
                                        "array-type": "Object",
                                        "description": "Describes how to transform data from a log into a CloudWatch metric.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "MetricName": {
                                                "description": "The name of the CloudWatch metric to which the log information will be published.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "MetricValue": {
                                                "description": "The value that is published to the CloudWatch metric.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "MetricNamespace": {
                                                "description": "The destination namespace of the CloudWatch metric. Namespaces are containers for metrics. For example, you can add related metrics in the same namespace.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "FilterPattern": {
                                        "array-type": "String",
                                        "description": "Describes the pattern that CloudWatch Logs follows to interpret each entry in a log.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "LogGroupName": {
                                        "resource-ref-type": "AWS::Logs::LogGroup",
                                        "description": "The name of an existing log group that you want to associate with this metric filter.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::EIPAssociation": {
                        "description": "The AWS::EC2::EIPAssociation resource associates an Elastic IP address with an Amazon EC2 instance. The Elastic IP address can be an existing Elastic IP address or an Elastic IP address allocated through an AWS::EC2::EIP resource.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::EIPAssociation resource associates an Elastic IP address with an Amazon EC2 instance. The Elastic IP address can be an existing Elastic IP address or an Elastic IP address allocated through an AWS::EC2::EIP resource.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "PrivateIpAddress": {
                                        "description": "The private IP address that you want to associate with the Elastic IP address. The private IP address is restricted to the primary and secondary private IP addresses that are associated with the network interface. By default, the private IP address that is associated with the EIP is the primary private IP address of the network interface.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceId": {
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "Instance ID of the Amazon EC2 instance that you want to associate with the Elastic IP address specified by the EIP property.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AllocationId": {
                                        "description": "Allocation ID for the VPC Elastic IP address you want to associate with an Amazon EC2 instance in your VPC.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NetworkInterfaceId": {
                                        "resource-ref-type": "AWS::EC2::NetworkInterface",
                                        "description": "The ID of the network interface to associate with the Elastic IP address (VPC only).",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EIP": {
                                        "resource-ref-type": "AWS::EC2::EIP",
                                        "description": "Elastic IP address that you want to associate with the Amazon EC2 instance specified by the InstanceId property. You can specify an existing Elastic IP address or a reference to an Elastic IP address allocated with a AWS::EC2::EIP resource.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElastiCache::ParameterGroup": {
                        "description": "The AWS::ElastiCache::ParameterGroup type creates a new cache parameter group. Cache parameter groups control the parameters for a cache cluster.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::ElastiCache::ParameterGroup type creates a new cache parameter group. Cache parameter groups control the parameters for a cache cluster.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "The description for the Cache Parameter Group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Properties": {
                                        "description": "A comma-delimited list of parameter name/value pairs.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CacheParameterGroupFamily": {
                                        "description": "The name of the cache parameter group family that the cache parameter group can be used with.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::SQS::Queue": {
                        "return-values": [
                            {
                                "name": "Arn",
                                "description": "Returns the Amazon Resource Name (ARN) of the queue. For example: arn:aws:sqs:us-east-1:123456789012:mystack-myqueue-15PG5C2FC1CW8"
                            },
                            {
                                "name": "QueueName",
                                "description": "Returns the queue name. For example: mystack-myqueue-1VF9BKQH5BJVI"
                            }
                        ],
                        "description": "The AWS::SQS::Queue type creates an Amazon SQS queue.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SQS::Queue type creates an Amazon SQS queue.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "ReceiveMessageWaitTimeSeconds": {
                                        "description": "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue to include in the response, as opposed to returning an empty response if a message is not yet available to return.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "DelaySeconds": {
                                        "description": "The time in seconds that the delivery of all messages in the queue will be delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "RedrivePolicy": {
                                        "description": "Specifies an existing dead letter queue to receive messages after the source queue (this queue) fails to process a message a specified number of times.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "maxReceiveCount": {
                                                "description": "The number of times a message is delivered to the source queue before being sent to the dead letter queue.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "deadLetterTargetArn": {
                                                "resource-ref-type": "AWS::SQS::Queue",
                                                "description": "The Amazon Resource Name (ARN) of the dead letter queue to which the messages are sent to after the maxReceiveCount value has been exceeded.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "MessageRetentionPeriod": {
                                        "description": "The number of seconds Amazon SQS retains a message.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "MaximumMessageSize": {
                                        "description": "The limit of how many bytes a message can contain before Amazon SQS rejects it.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "VisibilityTimeout": {
                                        "description": "The length of time during which the queue will be unavailable once a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43200 seconds (12 hours). If no value is specified, the default value of 30 seconds will be used.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "QueueName": {
                                        "description": "A name for the queue. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the queue name.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPNGateway": {
                        "description": "Creates a new virtual private gateway. A virtual private gateway is the VPC-side endpoint for your VPN connection.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new virtual private gateway. A virtual private gateway is the VPC-side endpoint for your VPN connection.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Type": {
                                        "allowed-values": ["ipsec.1"],
                                        "description": "The type of VPN connection this customer gateway supports.  For example: ipsec.1",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElastiCache::CacheCluster": {
                        "return-values": [
                            {
                                "name": "ConfigurationEndpoint.Address",
                                "description": "The DNS address of the configuration endpoint for the Memcached cache cluster."
                            },
                            {
                                "name": "ConfigurationEndpoint.Port",
                                "description": "The port number of the configuration endpoint for the Memcached cache cluster."
                            }
                        ],
                        "description": "The AWS::ElastiCache::CacheCluster type creates an Amazon ElastiCache cache cluster.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::ElastiCache::CacheCluster type creates an Amazon ElastiCache cache cluster.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "CacheSecurityGroupNames": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::ElastiCache::SecurityGroup",
                                        "description": "A list of cache security group names associated with this cache cluster.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "EngineVersion": {
                                        "description": "The version of the cache engine to be used for this cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CacheSubnetGroupName": {
                                        "resource-ref-type": "AWS::ElastiCache::SubnetGroup",
                                        "description": "The cache subnet group that you associate with a cache cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SnapshotArns": {
                                        "array-type": "String",
                                        "description": "A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file will be used to populate the Redis cache in the new cache cluster. The Amazon S3 object name in the ARN cannot contain any commas.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "Port": {
                                        "description": "The port number on which each of the cache nodes will accept connections.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "CacheParameterGroupName": {
                                        "resource-ref-type": "AWS::ElastiCache::ParameterGroup",
                                        "description": "The name of the cache parameter group associated with this cache cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "The weekly time range (in UTC) during which system maintenance can occur. Example: sun:05:00-sun:09:00",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": "Indicates that minor engine upgrades will be applied automatically to the cache cluster during the maintenance window.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "NotificationTopicArn": {
                                        "resource-ref-type": "AWS::SNS::Topic",
                                        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NumCacheNodes": {
                                        "description": "The number of cache nodes the cache cluster should have.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PreferredAvailabilityZone": {
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "The EC2 Availability Zone that the cache cluster will be created in.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CacheNodeType": {
                                        "allowed-values": [
                                            "*",
                                            "cache.t1.micro",
                                            "cache.m1.medium",
                                            "cache.m1.large",
                                            "cache.m1.xlarge",
                                            "cache.m3.medium",
                                            "cache.m3.large",
                                            "cache.m3.xlarge",
                                            "cache.m3.2xlarge",
                                            "cache.m1.small",
                                            "cache.m1.large",
                                            "cache.m1.xlarge",
                                            "cache.m2.xlarge",
                                            "cache.m2.2xlarge",
                                            "cache.m2.4xlarge",
                                            "cache.c1.xlarge",
                                            "cache.r3.large",
                                            "cache.r3.xlarge",
                                            "cache.r3.2xlarge",
                                            "cache.r3.4xlarge",
                                            "cache.r3.8xlarge"
                                        ],
                                        "description": "The compute and memory capacity of nodes in a cache cluster.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "VpcSecurityGroupIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "One or more VPC security groups associated with the cache cluster.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "ClusterName": {
                                        "description": "A name for the cache cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the cache cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Engine": {
                                        "allowed-values": [
                                            "memcached",
                                            "redis"
                                        ],
                                        "description": "The name of the cache engine to be used for this cache cluster.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AZMode": {
                                        "description": "For Memcached cache clusters, indicates whether the nodes are created in a single Availability Zone or across multiple Availability Zones in the cluster's region.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::SQS::QueuePolicy": {
                        "description": "The AWS::SQS::QueuePolicy type applies a policy to SQS queues.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SQS::QueuePolicy type applies a policy to SQS queues.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "PolicyDocument": {
                                        "description": "A policy document containing permissions to add to the specified SQS queues.",
                                        "type": "Policy",
                                        "required": true
                                    },
                                    "Queues": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::SQS::Queue",
                                        "description": "The URLs of the queues to which you want to add the policy.",
                                        "type": "Array",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Route53::RecordSet": {
                        "description": "The AWS::Route53::RecordSet type can be used as a standalone resource or as an embedded property in the AWS::Route53::RecordSetGroup type.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::Route53::RecordSet type can be used as a standalone resource or as an embedded property in the AWS::Route53::RecordSetGroup type.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "AliasTarget": {
                                        "description": "Alias resource record sets only: Information about the domain to which you are redirecting traffic. Required: Conditional. Required if you are creating an alias resource record set.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "HostedZoneId": {
                                                "description": "The hosted zone name ID of the Load Balancer that is the target of the alias.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "DNSName": {
                                                "description": "The DNS name of the Load Balancer that is the target of the alias.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Comment": {
                                        "description": "Any comments you want to include about the hosted zone.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HostedZoneName": {
                                        "description": "The name of the domain for the hosted zone where you want to add the record set. Required: Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ResourceRecords": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::EIP",
                                        "description": "List of resource records to add. Each record should be in the format appropriate for the record type specified by the Type property. Required: Conditional. Required if TTL is specified.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "HostedZoneId": {
                                        "description": "The ID of the hosted zone. Required: Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SetIdentifier": {
                                        "description": "A unique identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type. Required: Conditional. Required if you are creating a weighted resource record set.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "TTL": {
                                        "description": "The resource record cache time to live (TTL), in seconds. If TTL is specified, ResourceRecords is also required.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Weight": {
                                        "description": "Weighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location. Required: Conditional. Required if you are creating a weighted resource record set.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "Name": {
                                        "description": "The name of the domain. This must be a fully-specified domain, ending with a period as the last label indication. If you omit the final period, Amazon Route 53 assumes the domain is relative to the root.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Type": {
                                        "allowed-values": [
                                            "A",
                                            "AAAA",
                                            "CNAME",
                                            "MX",
                                            "NS",
                                            "PTR",
                                            "SOA",
                                            "SPF",
                                            "SRV",
                                            "TXT"
                                        ],
                                        "description": "The type of records to add.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Failover": {
                                        "allowed-values": [
                                            "PRIMARY",
                                            "SECONDARY"
                                        ],
                                        "description": "Designates the record set as a PRIMARY or SECONDARY failover record set.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Region": {
                                        "description": "Latency resource record sets only: The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "GeoLocation": {
                                        "description": "Describes how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "ContinentCode": {
                                                "description": "All DNS queries from the continent that you specified are routed to this resource record set. If you specify this property, omit the CountryCode and SubdivisionCode properties.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "CountryCode": {
                                                "description": "All DNS queries from the country that you specified are routed to this resource record set. If you specify this property, omit the ContinentCode property.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "SubdivisionCode": {
                                                "description": "If you specified US for the country code, you can specify a state in the United States. All DNS queries from the state that you specified are routed to this resource record set. If you specify this property, you must specify US for the CountryCode and omit the ContinentCode property.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::NetworkAclEntry": {
                        "description": "Creates an entry (i.e., rule) in a network ACL with a rule number you specify. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an entry (i.e., rule) in a network ACL with a rule number you specify. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "PortRange": {
                                        "description": "The range of port numbers for the UDP/TCP protocol. Required: Conditional, required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "From": {
                                                "description": "The first port in the range. Condition: Required if specifying 6 (TCP) or 17 (UDP) for the CreateNetworkAclEntry protocol parameter.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "To": {
                                                "description": "The last port in the range. Condition: Required if specifying 6 (TCP) or 17 (UDP) for the CreateNetworkAclEntry protocol parameter.",
                                                "type": "Number",
                                                "required": false
                                            }
                                        }
                                    },
                                    "NetworkAclId": {
                                        "resource-ref-type": "AWS::EC2::NetworkAcl",
                                        "description": "ID of the ACL where the entry will be created.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "RuleAction": {
                                        "allowed-values": [
                                            "allow",
                                            "deny"
                                        ],
                                        "description": "ID of the ACL where the entry will be created.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "CidrBlock": {
                                        "description": "The CIDR range to allow or deny, in CIDR notation (e.g., 172.16.0.0/24).",
                                        "type": "String",
                                        "required": true
                                    },
                                    "RuleNumber": {
                                        "description": "Rule number to assign to the entry (e.g., 100). This must be a postive integer from 1 to 32766.",
                                        "type": "Number",
                                        "required": true
                                    },
                                    "Egress": {
                                        "description": "Whether this rule applies to egress traffic from the subnet (\"true\") or ingress traffic to the subnet (\"false\").",
                                        "type": "Boolean",
                                        "required": true
                                    },
                                    "Protocol": {
                                        "description": "IP protocol the rule applies to. You can use -1 to mean all protocols. This must be -1 or a protocol number.",
                                        "type": "Number",
                                        "required": true
                                    },
                                    "Icmp": {
                                        "description": "The Internet Control Message Protocol (ICMP) code and type.  Required: Conditional, required if specifying 1 (ICMP) for the protocol parameter.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Type": {
                                                "description": "The Internet Control Message Protocol (ICMP) type. You can use -1 to specify all ICMP types. Condition: Required if specifying 1 (ICMP) for the CreateNetworkAclEntry protocol parameter.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "Code": {
                                                "description": "The Internet Control Message Protocol (ICMP) code. You can use -1 to specify all ICMP codes for the given ICMP type. Condition: Required if specifying 1 (ICMP) for the CreateNetworkAclEntry protocol parameter.",
                                                "type": "Number",
                                                "required": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::InternetGateway": {
                        "description": "Creates a new Internet gateway in your AWS account. After creating the Internet gateway, you then attach it to a VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new Internet gateway in your AWS account. After creating the Internet gateway, you then attach it to a VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"Tags": {
                                    "array-type": "Object",
                                    "description": "The tags that you want to attach.",
                                    "type": "Array",
                                    "required": false,
                                    "properties": {
                                        "Value": {
                                            "resource-ref-type": "*",
                                            "description": "A value associated with the key term.",
                                            "type": "String",
                                            "required": true
                                        },
                                        "Key": {
                                            "description": "The key term for this item.",
                                            "type": "String",
                                            "required": true
                                        }
                                    }
                                }}
                            }
                        }
                    },
                    "AWS::IAM::Policy": {
                        "description": "The AWS::IAM::Policy type applies an Identity and Access Management (IAM) policy to users or groups.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::IAM::Policy type applies an Identity and Access Management (IAM) policy to users or groups.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Groups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::Group",
                                        "description": "The names of groups to which you want to add the policy.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "PolicyName": {
                                        "description": "The name of the policy.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "PolicyDocument": {
                                        "description": "A policy document containing permissions to add to the specified users or groups.",
                                        "type": "Policy",
                                        "required": true
                                    },
                                    "Roles": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::Role",
                                        "description": "The names of roles to which you want to add the policy.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "Users": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::User",
                                        "description": "The names of users for whom you want to add the policy.",
                                        "type": "Array",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::IAM::Role": {
                        "return-values": [{
                            "name": "Arn",
                            "description": "Returns the Amazon Resource Name (ARN) for the instance profile. For example: arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF."
                        }],
                        "description": "Creates an AWS Identity and Access Management (IAM) Role for EC2 Instances. An IAM Role can be used to enable applications running on an Amazon EC2 instance to securely access your AWS resources.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an AWS Identity and Access Management (IAM) Role for EC2 Instances. An IAM Role can be used to enable applications running on an Amazon EC2 instance to securely access your AWS resources.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Path": {
                                        "description": "The path for the role. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Policies": {
                                        "array-type": "Policy",
                                        "resource-ref-type": "AWS::IAM::Policy",
                                        "description": "Applies specified policies to the role.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "AssumeRolePolicyDocument": {
                                        "description": "The IAM Assume Role Policy Document associated with this role.",
                                        "type": "Policy",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::DBParameterGroup": {
                        "description": "Creates a custom parameter group for an RDS database family.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a custom parameter group for an RDS database family.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "A friendly description of the RDS parameter group. For example, \"My Parameter Group\".",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Parameters": {
                                        "description": "The parameters to set for this RDS parameter group.",
                                        "type": "Json",
                                        "required": true
                                    },
                                    "Family": {
                                        "description": "The database family of this RDS parameter group. For example, \"MySQL5.1\".",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElasticBeanstalk::Application": {
                        "description": "Creates an application within AWS Elastic Beanstalk.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an application within AWS Elastic Beanstalk.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "ApplicationName": {
                                        "description": "A name for the AWS Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Description": {
                                        "description": "Describes the application.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ApplicationVersions": {
                                        "array-type": "Object",
                                        "description": "Application versions associated with this application. An application version is a specific, labeled iteration of deployable code.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "Description": {
                                                "description": "Describes the application version.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "VersionLabel": {
                                                "description": "A label uniquely identifying the version for the associated application.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceBundle": {
                                                "description": "The location where the source bundle is located for this version.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "S3Bucket": {
                                                        "resource-ref-type": "AWS::S3::Bucket",
                                                        "description": "The Amazon S3 bucket where the data is located.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "S3Key": {
                                                        "description": "The Amazon S3 key where the data is located.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "ConfigurationTemplates": {
                                        "array-type": "Object",
                                        "description": "Configuration templates associated with this application. You can use templates to deploy different versions of an application using the configuration settings defined in the template.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Description": {
                                                "description": "An optional description for this configuration.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "OptionSettings": {
                                                "array-type": "Object",
                                                "description": "An array of OptionSettings for this Elastic Beanstalk configuration.",
                                                "type": "Array",
                                                "required": false,
                                                "properties": {
                                                    "Value": {
                                                        "description": "The value of the setting.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "Namespace": {
                                                        "description": "A unique namespace identifying the option's associated AWS resource.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "OptionName": {
                                                        "description": "The name of the configuration option.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "TemplateName": {
                                                "description": "The name of the configuration template.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SolutionStackName": {
                                                "description": "The name of an existing Elastic Beanstalk solution stack used by this configuration. A solution stack specifies the operating system, architecture, and application server for a configuration template. It also defines configuration options, their possible and default values. If SolutionStackName is not specified, the default Elastic Beanstalk solution stack will be used.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::IAM::AccessKey": {
                        "return-values": [{
                            "name": "SecretAccessKey",
                            "description": "Returns the secret access key for the specified AWS::IAM::AccessKey resource. For example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY."
                        }],
                        "description": "The AWS::IAM::AccessKey resource type generates a secret access key and assigns it to an IAM user or AWS account.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::IAM::AccessKey resource type generates a secret access key and assigns it to an IAM user or AWS account.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Status": {
                                        "allowed-values": [
                                            "Active",
                                            "Inactive"
                                        ],
                                        "description": "The status of the access key.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Serial": {
                                        "description": "This value is specific to AWS CloudFormation and can only be incremented. Incrementing this value notifies AWS CloudFormation that you want to rotate your access key. When you update your stack, AWS CloudFormation will replace the existing access key with a new key.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "UserName": {
                                        "resource-ref-type": "AWS::IAM::User",
                                        "description": "The name of the user that the new key will belong to.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPCGatewayAttachment": {
                        "description": "Attaches a gateway to a VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Attaches a gateway to a VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "InternetGatewayId": {
                                        "resource-ref-type": "AWS::EC2::InternetGateway",
                                        "description": "The ID of the Internet gateway. Required: Conditional. You must specify either InternetGatewayId or VpnGatewayId, but not both.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC to associate with this gateway.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "VpnGatewayId": {
                                        "resource-ref-type": "AWS::EC2::VPNGateway",
                                        "description": "The ID of the virtual private network (VPN) gateway to attach to the VPC. Required: Conditional. You must specify either InternetGatewayId or VpnGatewayId, but not both.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPNConnection": {
                        "description": "Creates a new VPN connection between an existing virtual private gateway and a VPN customer gateway.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new VPN connection between an existing virtual private gateway and a VPN customer gateway.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Type": {
                                        "description": "The type of VPN connection this virtual private gateway supports. Example: \"ipsec.1\"",
                                        "type": "String",
                                        "required": true
                                    },
                                    "CustomerGatewayId": {
                                        "resource-ref-type": "AWS::EC2::CustomerGateway",
                                        "description": "The ID of the customer gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "VpnGatewayId": {
                                        "resource-ref-type": "AWS::EC2::VPNGateway",
                                        "description": "The ID of the virtual private gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "StaticRoutesOnly": {
                                        "description": "Indicates whether the VPN connection requires static routes.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::AutoScaling::ScalingPolicy": {
                        "description": "The AWS::AutoScaling::ScalingPolicy resource adds a scaling policy to an auto scaling group. A scaling policy specifies whether to scale the auto scaling group up or down, and by how much.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::AutoScaling::ScalingPolicy resource adds a scaling policy to an auto scaling group. A scaling policy specifies whether to scale the auto scaling group up or down, and by how much.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "MinAdjustmentStep": {
                                        "description": "The minimum number of instances that are added or removed when the Auto Scaling group scales up or down. You can use this property only when you specify PercentChangeInCapacity for the AdjustmentType property.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "ScalingAdjustment": {
                                        "description": "The number of instances by which to scale. AdjustmentType determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Cooldown": {
                                        "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoScalingGroupName": {
                                        "resource-ref-type": "AWS::AutoScaling::AutoScalingGroup",
                                        "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling Group that you want to attach the policy to.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AdjustmentType": {
                                        "allowed-values": [
                                            "ChangeInCapacity",
                                            "ExactCapacity",
                                            "PercentChangeInCapacity"
                                        ],
                                        "description": "Specifies whether the ScalingAdjustment is an absolute number or a percentage of the current capacity.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::Volume": {
                        "description": "The AWS::EC2::Volume type creates a new Elastic Block Store volume. You can set a deletion policy for your volume to control how AWS CloudFormation handles the volume when the stack is deleted. For Elastic Block Store volumes, you can choose to retain the volume, to delete the volume, or to create a snapshot of the volume.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::Volume type creates a new Elastic Block Store volume. You can set a deletion policy for your volume to control how AWS CloudFormation handles the volume when the stack is deleted. For Elastic Block Store volumes, you can choose to retain the volume, to delete the volume, or to create a snapshot of the volume.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain",
                                    "Snapshot"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "SnapshotId": {
                                        "description": "The snapshot from which to create the new volume. Required: Conditional. Required if you are creating a volume from a snapshot. If you do not specify a value for SnapshotId, you should specify a value for Size.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "VolumeType": {
                                        "allowed-values": [
                                            "standard",
                                            "io1"
                                        ],
                                        "description": "The volume type. This can be either \"standard\" or \"io1\". If no value is specified, \"standard\" will be used.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "KmsKeyId": {
                                        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to create the encrypted volume.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Encrypted": {
                                        "description": "Indicates whether the volume is encrypted. Encrypted Amazon EBS volumes can only be attached to instance types that support Amazon EBS encryption.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Size": {
                                        "description": "The size of the volume, in gibibytes (GiBs). This can be any value from 1�1024. Required: Conditional. Required if you are not creating a volume from a snapshot. If you specify Size, do not specify SnapshotId.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AvailabilityZone": {
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "The Availability Zone in which to create the new volume.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Iops": {
                                        "description": "The number of I/O operations per second (IOPS) that the volume supports. This can be any value from 1-1000. Required: Conditional. Required when the volume type is \"io1\"; not used with standard volumes.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::EventSubscription": {
                        "description": "Use the AWS::RDS::EventSubscription resource to get notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Use the AWS::RDS::EventSubscription resource to get notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "SourceType": {
                                        "allowed-values": [
                                            "db-instance",
                                            "*"
                                        ],
                                        "description": "The type of source for which Amazon RDS provides notification events.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Enabled": {
                                        "description": "Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "EventCategories": {
                                        "array-type": "String",
                                        "description": "A list of event categories that you want to subscribe to for a given source type. If you don't specify this property, you are notified about all event categories.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "SnsTopicArn": {
                                        "resource-ref-type": "AWS::SNS::Topic",
                                        "description": "The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to send event notifications to.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SourceIds": {
                                        "array-type": "String",
                                        "resource-ref-type": [
                                            "AWS::RDS::DBInstance",
                                            "*"
                                        ],
                                        "description": "A list of identifiers for which Amazon RDS provides notification events.",
                                        "type": "Array",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElastiCache::SubnetGroup": {
                        "description": "Creates a cache subnet group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a cache subnet group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "The description for the cache subnet group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SubnetIds": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The Amazon EC2 subnet IDs for the cache subnet group.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElasticBeanstalk::Environment": {
                        "return-values": [{
                            "name": "EndpointURL",
                            "description": "The URL to the LoadBalancer for this environment."
                        }],
                        "description": "Creates an environment within AWS Elastic Beanstalk.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an environment within AWS Elastic Beanstalk.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "Describes the environment.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ApplicationName": {
                                        "resource-ref-type": "AWS::ElasticBeanstalk::Application",
                                        "description": "The name of the application associated with this environment.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "EnvironmentName": {
                                        "description": "A name for the AWS Elastic Beanstalk environment. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the environment name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "OptionSettings": {
                                        "array-type": "Object",
                                        "description": "The option settings to add.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "The value of the setting.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Namespace": {
                                                "description": "A unique namespace identifying the option's associated AWS resource.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "OptionName": {
                                                "description": "The name of the configuration option.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Tier": {
                                        "description": "Specifies the tier to use in creating this environment. The environment tier that you choose determines whether AWS Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Type": {
                                                "allowed-values": [
                                                    "WebServer",
                                                    "SQS/HTTP"
                                                ],
                                                "description": "The type of this environment tier. You can specify Standard for the WebServer tier or SQS/HTTP for the Worker tier.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Version": {
                                                "description": "The version of this environment tier.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Name": {
                                                "allowed-values": [
                                                    "WebServer",
                                                    "Worker"
                                                ],
                                                "description": "The name of the environment tier. You can specify WebServer or Worker.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "VersionLabel": {
                                        "description": "Version to associate with the environment",
                                        "type": "String",
                                        "required": false
                                    },
                                    "TemplateName": {
                                        "description": "Name of the template to use with the environment.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "OptionsToRemove": {
                                        "array-type": "Object",
                                        "description": "The option settings to remove.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "description": "The value of the setting.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "NameSpace": {
                                                "description": "A unique namespace identifying the option's associated AWS resource.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "OptionName": {
                                                "description": "The name of the configuration option.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "SolutionStackName": {
                                        "description": "Stack name associated with the environment.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CNAMEPrefix": {
                                        "description": "The URL to the CNAME for this environment.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::AutoScaling::Trigger": {
                        "description": "Creates an Auto Scaling trigger that determines when scaling activities should occur for the Auto Scaling group. This type does not support updates.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Auto Scaling trigger that determines when scaling activities should occur for the Auto Scaling group. This type does not support updates.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "MetricName": {
                                        "description": "The metric name used by the trigger to determine when to fire.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "BreachDuration": {
                                        "description": "The amount of time to wait while the trigger is firing before performing scaling activities in response to the breach.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "LowerBreachScaleIncrement": {
                                        "description": "The incremental amount to use when performing scaling activities when the lower threshold has been breached.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "LowerThreshold": {
                                        "description": "The lower limit for the metric. The trigger fires if all data points in the last BreachDuration seconds exceed the upper threshold or fall below the lower threshold.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Statistic": {
                                        "description": "The statistic used by the trigger to determine which metric statistics to examine.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "UpperBreachScaleIncrement": {
                                        "description": "The incremental amount to use when performing scaling activities when the upper threshold has been breached. Must be a negative or positive integer, or integer percentage value.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoScalingGroupName": {
                                        "resource-ref-type": "AWS::AutoScaling::AutoScalingGroup",
                                        "description": "The name of the Auto Scaling group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Dimensions": {
                                        "array-type": "Object",
                                        "description": "A list of CloudWatch dimensions used to retrieve metric statistics that the trigger uses to determine when to fire.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "Value": {
                                                "description": "The value representing the dimension measurement.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Name": {
                                                "description": "Name of the dimension.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Period": {
                                        "description": "The period used in retrieving metric statistics used by the trigger to determine when to fire.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "UpperThreshold": {
                                        "description": "The upper limit of the metric used. The trigger fires if all data points in the last BreachDuration seconds exceed the upper threshold or fall below the lower threshold.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Unit": {
                                        "description": "The standard unit associated with a measure, used by the trigger when fetching the metric statistics it uses to determine when to activate.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Namespace": {
                                        "description": "The namespace used by the trigger to determine when to fire.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::DHCPOptions": {
                        "description": "Creates a set of DHCP options for your VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a set of DHCP options for your VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "NetbiosNameServers": {
                                        "array-type": "String",
                                        "description": "The IP address (IPv4) of a NetBIOS name server. You can specify up to four addresses. Example: 10.0.0.1",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "NtpServers": {
                                        "array-type": "String",
                                        "description": "The IP address of a Network Time Protocol (NTP) server. You can specify up to four addresses. Example: 10.0.0.1",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "DomainName": {
                                        "description": "A domain name of your choice.  Example: example.com",
                                        "type": "String",
                                        "required": true
                                    },
                                    "NetbiosNodeType": {
                                        "array-type": "Number",
                                        "allowed-values": [
                                            1,
                                            2,
                                            4,
                                            8,
                                            "*"
                                        ],
                                        "description": "Value indicating the NetBIOS node type (1, 2, 4, or 8). We recommend you only use 2 at this time (broadcast and multicast are currently not supported).",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "DomainNameServers": {
                                        "array-type": "String",
                                        "allowed-values": [
                                            "AmazonProvidedDNS",
                                            "*"
                                        ],
                                        "description": "The IP (IPv4) address of a domain name server. You can specify up to four addresses. Example: 10.0.0.1",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::SNS::TopicPolicy": {
                        "description": "The AWS::SNS::TopicPolicy type applies a policy to SNS topics.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SNS::TopicPolicy type applies a policy to SNS topics.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Topics": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::SNS::Topic",
                                        "description": "The Amazon Resource Names (ARN) of the topics to which you want to add the policy.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "PolicyDocument": {
                                        "description": "A policy document containing permissions to add to the specified SNS topics.",
                                        "type": "Policy",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::IAM::User": {
                        "return-values": [{
                            "name": "Arn",
                            "description": "Returns the Amazon Resource Name (ARN) for the specified AWS::IAM::User resource. For example: arn:aws:iam::123456789012:user/mystack-myuser-1CCXAFG2H2U4D."
                        }],
                        "description": "The AWS::IAM::User type creates a user.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::IAM::User type creates a user.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Path": {
                                        "description": "The path for the user name. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Policies": {
                                        "array-type": "Policy",
                                        "resource-ref-type": "AWS::IAM::Policy",
                                        "description": "Applies specified policies to the user.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "Groups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::IAM::Group",
                                        "description": "The path for the user name. For more information about paths, see Identifiers for IAM Entities in Using AWS Identity and Access Management.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "LoginProfile": {
                                        "description": "Creates a login profile for the user so the user can access AWS services such as the AWS Management Console.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"Password": {
                                            "type": "String",
                                            "required": true
                                        }}
                                    }
                                }
                            }
                        }
                    },
                    "AWS::DynamoDB::Table": {
                        "description": "Creates an Amazon DynamoDB table.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon DynamoDB table.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "TableName": {
                                        "description": "A name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AttributeDefinitions": {
                                        "array-type": "Object",
                                        "description": "A list of AttributeName and AttributeValue objects that describe the key schema for the table and indexes.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "AttributeType": {
                                                "allowed-values": [
                                                    "S",
                                                    "N",
                                                    "B"
                                                ],
                                                "description": "The data type for the attribute. You can specify S for string data, N for numeric data, or B for binary data.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "AttributeName": {
                                                "description": "The name of an attribute. Attribute names can be 1 \u2013 255 characters long and have no character restrictions.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "GlobalSecondaryIndexes": {
                                        "array-type": "Object",
                                        "description": "Global secondary indexes to be created on the table. You can create up to 5 global secondary indexes.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "IndexName": {
                                                "description": "The name of the global secondary index. The index name can be 3 \u2013 255 characters long and have no character restrictions.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Projection": {
                                                "description": "Attributes that are copied (projected) from the source table into the index. These attributes are additions to the primary key attributes and index key attributes, which are automatically projected.",
                                                "type": "Object",
                                                "required": true,
                                                "properties": {
                                                    "NonKeyAttributes": {
                                                        "array-type": "String",
                                                        "description": "The non-key attribute names that are projected into the index.",
                                                        "type": "Array",
                                                        "required": false
                                                    },
                                                    "ProjectionType": {
                                                        "allowed-values": [
                                                            "KEYS_ONLY",
                                                            "INCLUDE",
                                                            "ALL"
                                                        ],
                                                        "description": "The set of attributes that are projected into the index.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "ProvisionedThroughput": {
                                                "description": "The provisioned throughput settings for the index.",
                                                "type": "Object",
                                                "required": true,
                                                "properties": {
                                                    "WriteCapacityUnits": {
                                                        "description": "Sets the desired minimum number of consistent writes of items (of up to 1KB in size) per second for the specified index before Amazon DynamoDB balances the load.",
                                                        "type": "Number",
                                                        "required": true
                                                    },
                                                    "ReadCapacityUnits": {
                                                        "description": "Sets the desired minimum number of consistent reads of items (of up to 1KB in size) per second for the specified index before Amazon DynamoDB balances the load.",
                                                        "type": "Number",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "KeySchema": {
                                                "array-type": "Object",
                                                "description": "The complete index key schema for the global secondary index, which consists of one or more pairs of attribute names and key types.",
                                                "type": "Array",
                                                "required": true,
                                                "properties": {
                                                    "KeyType": {
                                                        "allowed-values": [
                                                            "HASH",
                                                            "RANGE"
                                                        ],
                                                        "description": "Represents the attribute data, consisting of the data type and the attribute value itself. You can specify HASH or RANGE.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "AttributeName": {
                                                        "description": "The attribute name that is used as the primary key for this Global Secondary Index. Primary key element names can be 1 \u2013 255 characters long and have no character restrictions.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "ProvisionedThroughput": {
                                        "description": "New throughput for the specified table, consisting of values for ReadCapacityUnits and WriteCapacityUnits.",
                                        "type": "Object",
                                        "required": true,
                                        "properties": {
                                            "WriteCapacityUnits": {
                                                "description": "Sets the desired minimum number of consistent writes of items (of up to 1KB in size) per second for the specified table before Amazon DynamoDB balances the load.",
                                                "type": "Number",
                                                "required": true
                                            },
                                            "ReadCapacityUnits": {
                                                "description": "Sets the desired minimum number of consistent reads of items (of up to 1KB in size) per second for the specified table before Amazon DynamoDB balances the load.",
                                                "type": "Number",
                                                "required": true
                                            }
                                        }
                                    },
                                    "KeySchema": {
                                        "array-type": "Object",
                                        "description": "The complete index key schema for the global secondary index, which consists of one or more pairs of attribute names and key types.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "KeyType": {
                                                "allowed-values": [
                                                    "HASH",
                                                    "RANGE"
                                                ],
                                                "description": "Represents the attribute data, consisting of the data type and the attribute value itself. You can specify HASH or RANGE.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "AttributeName": {
                                                "description": "The attribute name that is used as the primary key for this Global Secondary Index. Primary key element names can be 1 \u2013 255 characters long and have no character restrictions.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "LocalSecondaryIndexes": {
                                        "array-type": "Object",
                                        "description": "Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "IndexName": {
                                                "description": "The name of the local secondary index. The index name can be 3 \u2013 255 characters long and have no character restrictions.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Projection": {
                                                "description": "Attributes that are copied (projected) from the source table into the index. These attributes are additions to the primary key attributes and index key attributes, which are automatically projected.",
                                                "type": "Object",
                                                "required": true,
                                                "properties": {
                                                    "NonKeyAttributes": {
                                                        "array-type": "String",
                                                        "description": "The non-key attribute names that are projected into the index.",
                                                        "type": "Array",
                                                        "required": false
                                                    },
                                                    "ProjectionType": {
                                                        "allowed-values": [
                                                            "KEYS_ONLY",
                                                            "INCLUDE",
                                                            "ALL"
                                                        ],
                                                        "description": "The set of attributes that are projected into the index.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "KeySchema": {
                                                "array-type": "Object",
                                                "description": "The complete index key schema for the local secondary index, which consists of one or more pairs of attribute names and key types.",
                                                "type": "Array",
                                                "required": true,
                                                "properties": {
                                                    "KeyType": {
                                                        "allowed-values": [
                                                            "HASH",
                                                            "RANGE"
                                                        ],
                                                        "description": "Represents the attribute data, consisting of the data type and the attribute value itself. You can specify HASH or RANGE.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "AttributeName": {
                                                        "description": "The attribute name that is used as the primary key for this local secondary index. Primary key element names can be 1 \u2013 255 characters long and have no character restrictions.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::SecurityGroupEgress": {
                        "description": "The AWS::EC2::SecurityGroupEgress type adds an egress rule to an Amazon VPC security group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::SecurityGroupEgress type adds an egress rule to an Amazon VPC security group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "CidrIp": {
                                        "description": "The CIDR range. Required: Conditional\u2014cannot be used when specifying a destination security group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "FromPort": {
                                        "allowed-values": [
                                            "*",
                                            {
                                                "display-label": "SSH (22)",
                                                "value": "22"
                                            },
                                            {
                                                "display-label": "SMTP (25)",
                                                "value": "25"
                                            },
                                            {
                                                "display-label": "HTTP (80)",
                                                "value": "80"
                                            },
                                            {
                                                "display-label": "POP3 (110)",
                                                "value": "110"
                                            },
                                            {
                                                "display-label": "HTTPS (443)",
                                                "value": "443"
                                            },
                                            {
                                                "display-label": "MS_SQL (1433)",
                                                "value": "1433"
                                            },
                                            {
                                                "display-label": "RDP (3389)",
                                                "value": "3389"
                                            }
                                        ],
                                        "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. An ICMP type number of -1 indicates a wildcard.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "ToPort": {
                                        "allowed-values": [
                                            "*",
                                            {
                                                "display-label": "SSH (22)",
                                                "value": "22"
                                            },
                                            {
                                                "display-label": "SMTP (25)",
                                                "value": "25"
                                            },
                                            {
                                                "display-label": "HTTP (80)",
                                                "value": "80"
                                            },
                                            {
                                                "display-label": "POP3 (110)",
                                                "value": "110"
                                            },
                                            {
                                                "display-label": "HTTPS (443)",
                                                "value": "443"
                                            },
                                            {
                                                "display-label": "MS_SQL (1433)",
                                                "value": "1433"
                                            },
                                            {
                                                "display-label": "RDP (3389)",
                                                "value": "3389"
                                            }
                                        ],
                                        "description": "End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP code of -1 indicates a wildcard.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "IpProtocol": {
                                        "allowed-values": [
                                            "*",
                                            "tcp",
                                            "udp",
                                            "icmp"
                                        ],
                                        "description": "IP protocol name or number.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DestinationSecurityGroupId": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "For VPC security groups only. Specifies the ID of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupId.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "GroupId": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "ID of the Amazon VPC security group to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource that has a valid VpcId property or the ID of an existing Amazon VPC security group.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Redshift::ClusterSecurityGroup": {
                        "description": "Creates an Amazon Redshift security group. You use security groups to control access to Amazon Redshift clusters that are not in a VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon Redshift security group. You use security groups to control access to Amazon Redshift clusters that are not in a VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"Description": {
                                    "description": "A description of the security group.",
                                    "type": "String",
                                    "required": false
                                }}
                            }
                        }
                    },
                    "AWS::EC2::NetworkInterface": {
                        "return-values": [
                            {
                                "name": "PrimaryPrivateIpAddress",
                                "description": "The primary private IP address of the network interface that you specified. For example: 10.0.0.192"
                            },
                            {
                                "name": "SecondaryPrivateIpAddresses",
                                "description": "The secondary private IP addresses of the network interface that you specified. For example:  [\"10.0.0.161\", \"10.0.0.162\", \"10.0.0.163\"]"
                            }
                        ],
                        "description": "Describes a network interface in an Elastic Compute Cloud (EC2) instance for AWS CloudFormation. ",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Describes a network interface in an Elastic Compute Cloud (EC2) instance for AWS CloudFormation. ",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "SourceDestCheck": {
                                        "description": "Flag indicating whether traffic to or from the instance is validated.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Description": {
                                        "description": "The description of this network interface.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PrivateIpAddress": {
                                        "description": "IP address of the interface within the subnet.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PrivateIpAddresses": {
                                        "array-type": "Object",
                                        "description": "Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want Amazon EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "PrivateIpAddress": {
                                                "description": "The private IP address of the network interface.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Primary": {
                                                "description": "Sets the private IP address as the primary private address. You can set only one primary private IP address. If you don't specify a primary private IP address, Amazon EC2 automatically assigns a primary private IP address.",
                                                "type": "Boolean",
                                                "required": true
                                            }
                                        }
                                    },
                                    "SecondaryPrivateIpAddressCount": {
                                        "description": "The number of secondary private IP addresses that Amazon EC2 automatically assigns to the network interface. Amazon EC2 uses the value of the PrivateIpAddress property as the primary private IP address. If you don't specify that property, Amazon EC2 automatically assigns both the primary and secondary private IP addresses.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "GroupSet": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "A list of security group IDs associated with this network interface.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "SubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The ID of the subnet to associate with the network interface.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::NetworkAcl": {
                        "description": "Creates a new network ACL in a VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates a new network ACL in a VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC where the network ACL will be created.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPNConnectionRoute": {
                        "description": "A static route that is associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "A static route that is associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "DestinationCidrBlock": {
                                        "description": "The CIDR block that is associated with the local subnet of the customer network.",
                                        "type": "DestinationCidrBlock",
                                        "required": true
                                    },
                                    "VpnConnectionId": {
                                        "resource-ref-type": "AWS::EC2::VPNConnection",
                                        "description": "The ID of the VPN connection.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::OpsWorks::Instance": {
                        "description": "Creates an instance for an AWS OpsWorks stack. These instances represent the Amazon EC2 instances that, for example, handle the work of serving applications and balancing traffic.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an instance for an AWS OpsWorks stack. These instances represent the Amazon EC2 instances that, for example, handle the work of serving applications and balancing traffic.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "SshKeyName": {
                                        "description": "The instance SSH key name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "RootDeviceType": {
                                        "description": "The instance root device type.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "LayerIds": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::OpsWorks::Layer",
                                        "description": "The IDs of the AWS OpsWorks layers that will be associated with this instance.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "Architecture": {
                                        "description": "The instance architecture.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Os": {
                                        "description": "The instance operating system.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AvailabilityZone": {
                                        "description": "The instance Availability Zone.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstallUpdatesOnBoot": {
                                        "description": "Whether to install operating system and package updates when the instance boots.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "TimeBasedAutoScaling": {
                                        "description": "The time-based scaling configuration for the instance.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Monday": {
                                                "description": "The schedule for Monday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Thursday": {
                                                "description": "The schedule for Thursday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Friday": {
                                                "description": "The schedule for Friday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Sunday": {
                                                "description": "The schedule for Sunday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Wednesday": {
                                                "description": "The schedule for Wednesday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Tuesday": {
                                                "description": "The schedule for Tuesday.",
                                                "type": "Json",
                                                "required": false
                                            },
                                            "Saturday": {
                                                "description": "The schedule for Saturday.",
                                                "type": "Json",
                                                "required": false
                                            }
                                        }
                                    },
                                    "SubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks to launch the instance in a different subnet.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceType": {
                                        "allowed-values": [
                                            "*",
                                            "t1.micro",
                                            "m1.small",
                                            "m1.medium",
                                            "m1.large",
                                            "m1.xlarge",
                                            "m2.xlarge",
                                            "m2.2xlarge",
                                            "m2.4xlarge",
                                            "m3.medium",
                                            "m3.large",
                                            "m3.xlarge",
                                            "m3.2xlarge",
                                            "c1.medium",
                                            "c1.xlarge",
                                            "cr1.8xlarge",
                                            "c3.large",
                                            "c3.xlarge",
                                            "c3.2xlarge",
                                            "c3.4xlarge",
                                            "c3.8xlarge",
                                            "cc1.4xlarge",
                                            "cc2.8xlarge",
                                            "cg1.4xlarge",
                                            "g2.2xlarge",
                                            "g2.2xlarge",
                                            "hi1.4xlarge",
                                            "hs1.8xlarge",
                                            "i2.xlarge",
                                            "i2.2xlarge",
                                            "i2.4xlarge",
                                            "i2.8xlarge",
                                            "r3.large",
                                            "r3.xlarge",
                                            "r3.2xlarge",
                                            "r3.4xlarge",
                                            "r3.8xlarge"
                                        ],
                                        "description": "The instance type, which must be supported by AWS OpsWorks.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AmiId": {
                                        "description": "The ID of the custom AMI to be used to create the instance. The AMI should be based on one of the standard AWS OpsWorks APIs.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "StackId": {
                                        "resource-ref-type": "AWS::OpsWorks::Stack",
                                        "description": "The ID of the AWS OpsWorks stack that this instance will be associated with.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::OpsWorks::Stack": {
                        "description": "Creates an AWS OpsWorks stack. An AWS OpsWorks stack represents a set of instances that you want to manage collectively, typically because they have a common purpose such as serving PHP applications.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an AWS OpsWorks stack. An AWS OpsWorks stack represents a set of instances that you want to manage collectively, typically because they have a common purpose such as serving PHP applications.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "DefaultInstanceProfileArn": {
                                        "resource-ref-type": "AWS::IAM::InstanceProfile",
                                        "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is the default profile for all of the stack's Amazon EC2 instances.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "UseOpsworksSecurityGroups": {
                                        "description": "Whether to associate the AWS OpsWorks built-in security groups with the stack's layers.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "ServiceRoleArn": {
                                        "resource-ref-type": "AWS::IAM::Role",
                                        "description": "The AWS Identity and Access Management (IAM) role that AWS OpsWorks uses to work with AWS resources on your behalf. You must specify an Amazon Resource Name (ARN) for an existing IAM role.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "UseCustomCookbooks": {
                                        "description": "Whether the stack uses custom cookbooks.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Attributes": {
                                        "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
                                        "type": "Json",
                                        "required": false
                                    },
                                    "ChefConfiguration": {
                                        "description": "Describes the Chef configuration.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "ManageBerkshelf": {
                                                "description": "Whether to enable Berkshelf.",
                                                "type": "Boolean",
                                                "required": false
                                            },
                                            "BerkshelfVersion": {
                                                "description": "The Berkshelf version.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "DefaultAvailabilityZone": {
                                        "description": "The stack's default Availability Zone, which must be in the specified region.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DefaultOs": {
                                        "description": "The stack's default operating system.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Name": {
                                        "description": "The name of the AWS OpsWorks stack.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "CustomCookbooksSource": {
                                        "description": "Contains the information required to retrieve a cookbook from a repository.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "SshKey": {
                                                "description": "The repository's SSH key.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Type": {
                                                "description": "The repository type.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Revision": {
                                                "description": "The application's version. With AWS OpsWorks, you can deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Username": {
                                                "description": "This parameter depends on the repository type. For Amazon S3 bundles, set Username to the appropriate IAM access key ID. For HTTP bundles, Git repositories, and Subversion repositories, set Username to the appropriate user name.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Url": {
                                                "description": "The source URL.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Password": {
                                                "description": "This parameter depends on the repository type. For Amazon S3 bundles, set Password to the appropriate IAM secret access key. For HTTP bundles, Git repositories, and Subversion repositories, set Password to the appropriate password.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "DefaultRootDeviceType": {
                                        "description": "The default root device type. This value is used by default for all instances in the stack, but you can override it when you create an instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC that the stack is to be launched into, which must be in the specified region. All instances are launched into this VPC.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HostnameTheme": {
                                        "description": "The stack's host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack's instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DefaultSshKeyName": {
                                        "description": "A default SSH key for the stack instances. You can override this value when you create or update an instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ConfigurationManager": {
                                        "description": "The configuration manager. When you create a stack, you use the configuration manager to specify the Chef version.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Version": {
                                                "description": "The Chef version.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Name": {
                                                "description": "The name of the configuration manager.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "DefaultSubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The stack's default subnet ID. All instances are launched into this subnet unless you specify another subnet ID when you create the instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CustomJson": {
                                        "description": "A string that contains user-defined custom JSON. The custom JSON is used to override the corresponding default stack configuration JSON values.",
                                        "type": "Json",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Route53::HealthCheck": {
                        "description": "You can use the AWS::Route53::HealthCheck resource to check the health of your resources before Amazon Route 53 responds to a DNS query.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "You can use the AWS::Route53::HealthCheck resource to check the health of your resources before Amazon Route 53 responds to a DNS query.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "HealthCheckConfig": {
                                        "description": "An Amazon Route 53 health check.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Type": {
                                                "allowed-values": [
                                                    "*",
                                                    "HTTP",
                                                    "HTTPS",
                                                    "HTTP_STR_MATCH",
                                                    "HTTPS_STR_MATCH",
                                                    "TCP"
                                                ],
                                                "description": "The type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy. You can specify HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, or TCP.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "ResourcePath": {
                                                "description": "The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint returns an HTTP status code of 2xx or 3xx when the endpoint is healthy, such as /docs/route53-health-check.html.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "FullyQualifiedDomainName": {
                                                "description": "If you specified the IPAddress property, the value that you want Amazon Route 53 to pass in the host header in all health checks except for TCP health checks. If you don't specify an IP address, the domain that Amazon Route 53 sends a DNS request to. Amazon Route 53 uses the IP address that the DNS returns to check the health of the endpoint.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Port": {
                                                "description": "The port on the endpoint on which you want Amazon Route 53 to perform health checks.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "RequestInterval": {
                                                "description": "The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request. Each Amazon Route 53 health checker makes requests at this interval.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "FailureThreshold": {
                                                "description": "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or healthy to unhealthy.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "IPAddress": {
                                                "description": "The IPv4 IP address of the endpoint on which you want Amazon Route 53 to perform health checks. If you don't specify an IP address, Amazon Route 53 sends a DNS request to resolve the domain name that you specify in the FullyQualifiedDomainName property.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "SearchString": {
                                                "description": "If the value of the Type property is HTTP_STR_MATCH or HTTP_STR_MATCH, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "HealthCheckTags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPNGatewayRoutePropagation": {
                        "description": "Enables a virtual private gateway (VGW) to propagate routes to the routing tables of a VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Enables a virtual private gateway (VGW) to propagate routes to the routing tables of a VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "RouteTableIds": {
                                        "array-type": "Object",
                                        "resource-ref-type": "AWS::EC2::RouteTable",
                                        "description": "A list of routing table IDs that are associated with a VPC. The routing tables must be associated with the same VPC that the virtual private gateway is attached to.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "VpnGatewayId": {
                                        "resource-ref-type": "AWS::EC2::VPNGateway",
                                        "description": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::SNS::Topic": {
                        "return-values": [{
                            "name": "TopicName",
                            "description": "Returns the name for an Amazon SNS topic."
                        }],
                        "description": "The AWS::SNS::Topic type creates an Amazon SNS topic.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SNS::Topic type creates an Amazon SNS topic.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "DisplayName": {
                                        "description": "The human-readable name used in the \"From\" field for notifications to email and email-json endpoints",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Subscription": {
                                        "array-type": "Object",
                                        "description": "Array of SNS Subscription type.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "Endpoint": {
                                                "description": "The subscription's endpoint (format depends on the protocol).",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Protocol": {
                                                "allowed-values": [
                                                    "http",
                                                    "https",
                                                    "email",
                                                    "email-json",
                                                    "sqs",
                                                    "sms"
                                                ],
                                                "description": "The subscription's protocol.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "TopicName": {
                                        "description": "A name for the topic. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::SubnetNetworkAclAssociation": {
                        "return-values": [{
                            "name": "AssociationId",
                            "description": "Returns the value of this object's SubnetId property."
                        }],
                        "description": "Associates a subnet with a network ACL.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Associates a subnet with a network ACL.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "NetworkAclId": {
                                        "resource-ref-type": "AWS::EC2::NetworkAcl",
                                        "description": "The ID of the new ACL to associate with the subnet.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "SubnetId": {
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "The ID representing the current association between the original network ACL and the subnet.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::S3::Bucket": {
                        "return-values": [
                            {
                                "name": "DomainName",
                                "description": "The DNS name of the specified bucket."
                            },
                            {
                                "name": "WebsiteURL",
                                "description": "Amazon S3 website endpoint for the specified bucket."
                            }
                        ],
                        "description": "The AWS::S3::Bucket type creates an Amazon S3 bucket.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::S3::Bucket type creates an Amazon S3 bucket.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "BucketName": {
                                        "description": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "CorsConfiguration": {
                                        "description": "Rules that define cross-origin resource sharing of objects in this bucket.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"CorsRule": {
                                            "array-type": "Object",
                                            "description": "A set of origins and methods that you allow.",
                                            "type": "Array",
                                            "required": true,
                                            "properties": {
                                                "ExposedHeaders": {
                                                    "array-type": "String",
                                                    "description": "One or more headers in the response that are accessible to client applications (for example, from a JavaScript XMLHttpRequest object).",
                                                    "type": "Array",
                                                    "required": true
                                                },
                                                "AllowedMethods": {
                                                    "array-type": "String",
                                                    "allowed-values": [
                                                        "GET",
                                                        "PUT",
                                                        "HEAD",
                                                        "POST",
                                                        "DELETE"
                                                    ],
                                                    "description": "An HTTP method that you allow the origin to execute. The valid values are GET, PUT, HEAD, POST, and DELETE.",
                                                    "type": "Array",
                                                    "required": true
                                                },
                                                "AllowedOrigins": {
                                                    "array-type": "String",
                                                    "description": "An origin that you allow to send cross-domain requests.",
                                                    "type": "Array",
                                                    "required": true
                                                },
                                                "AllowedHeaders": {
                                                    "array-type": "String",
                                                    "description": "Headers that are specified in the Access-Control-Request-Headers header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.",
                                                    "type": "Array",
                                                    "required": false
                                                },
                                                "MaxAge": {
                                                    "description": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                                                    "type": "Number",
                                                    "required": false
                                                },
                                                "Id": {
                                                    "description": "A unique identifier for this rule. The value cannot be more than 255 characters.",
                                                    "type": "String",
                                                    "required": false
                                                }
                                            }
                                        }}
                                    },
                                    "LoggingConfiguration": {
                                        "description": "Settings that defines where logs are stored.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "LogFilePrefix": {
                                                "description": "A prefix for the all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "DestinationBucketName": {
                                                "resource-ref-type": "AWS::S3::Bucket",
                                                "description": "The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "NotificationConfiguration": {
                                        "description": "Configuration that defines which Amazon SNS topic to send messages to and what events to report.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"TopicConfigurations": {
                                            "array-type": "Object",
                                            "description": "The topic to which notifications are sent and the events for which notification are generated.",
                                            "type": "Array",
                                            "required": true,
                                            "properties": {
                                                "Event": {
                                                    "allowed-values": [
                                                        "s3:ObjectCreated:*",
                                                        "s3:ObjectCreated:Put",
                                                        "s3:ObjectCreated:Post",
                                                        "s3:ObjectCreated:Copy",
                                                        "s3:ObjectCreated:CompleteMultipartUpload",
                                                        "s3:ReducedRedundancyLostObject"
                                                    ],
                                                    "description": "The Amazon S3 bucket event about which to send notifications.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "Topic": {
                                                    "resource-ref-type": "AWS::SNS::Topic",
                                                    "description": "The Amazon SNS topic to which Amazon S3 reports the specified events.",
                                                    "type": "String",
                                                    "required": true
                                                }
                                            }
                                        }}
                                    },
                                    "WebsiteConfiguration": {
                                        "description": "Information used to configure the bucket as a static website.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "IndexDocument": {
                                                "description": "The name of the index document.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "RedirectAllRequestsTo": {
                                                "description": "The redirect behavior for every request to this bucket's website endpoint.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "Protocol": {
                                                        "allowed-values": [
                                                            "http",
                                                            "https"
                                                        ],
                                                        "description": "Protocol to use (http or https) when redirecting requests. The default is the protocol that is used in the original request.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "HostName": {
                                                        "description": "Name of the host where requests are redirected.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "RoutingRules": {
                                                "array-type": "Object",
                                                "description": "Rules that define when a redirect is applied and the redirect behavior.",
                                                "type": "Array",
                                                "required": false,
                                                "properties": {
                                                    "RedirectRule": {
                                                        "description": "Redirect requests to another host, to another page, or with another protocol.",
                                                        "type": "Object",
                                                        "required": true,
                                                        "properties": {
                                                            "ReplaceKeyWith": {
                                                                "description": "The specific object key to use in the redirect request. For example, redirect request to error.html.",
                                                                "type": "String",
                                                                "required": false
                                                            },
                                                            "HttpRedirectCode": {
                                                                "description": "The HTTP redirect code to use on the response.",
                                                                "type": "String",
                                                                "required": false
                                                            },
                                                            "Protocol": {
                                                                "allowed-values": [
                                                                    "http",
                                                                    "https"
                                                                ],
                                                                "description": "Protocol to use (http or https) when redirecting requests. The default is the protocol that is used in the original request.",
                                                                "type": "String",
                                                                "required": false
                                                            },
                                                            "HostName": {
                                                                "description": "Name of the host where requests are redirected.",
                                                                "type": "String",
                                                                "required": true
                                                            },
                                                            "ReplaceKeyPrefixWith": {
                                                                "description": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with the prefix docs/ (objects in the docs/ folder) to the documents/ prefix, you can set the KeyPrefixEquals property in routing condition property to docs/, and set the ReplaceKeyPrefixWith property to documents/.",
                                                                "type": "String",
                                                                "required": false
                                                            }
                                                        }
                                                    },
                                                    "RoutingRuleCondition": {
                                                        "description": "Rules that define when a redirect is applied.",
                                                        "type": "Object",
                                                        "required": false,
                                                        "properties": {
                                                            "KeyPrefixEquals": {
                                                                "description": "The object key name prefix when the redirect is applied.",
                                                                "type": "String",
                                                                "required": false
                                                            },
                                                            "HttpErrorCodeReturnedEquals": {
                                                                "description": "Applies this redirect if the error code equals this value in the event of an error.",
                                                                "type": "String",
                                                                "required": false
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "ErrorDocument": {
                                                "description": "The name of the error document.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "LifecycleConfiguration": {
                                        "description": "Rules that define how Amazon S3 manages objects during their lifetime.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"Rules": {
                                            "array-type": "Object",
                                            "description": "A lifecycle rule for individual objects in a bucket.",
                                            "type": "Array",
                                            "required": true,
                                            "properties": {
                                                "Status": {
                                                    "allowed-values": [
                                                        "Enabled",
                                                        "Disabled"
                                                    ],
                                                    "description": "Specify either Enabled or Disabled. If you specify Enabled, Amazon S3 executes this rule as scheduled. If you specify Disabled, Amazon S3 ignores this rule",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "ExpirationDate": {
                                                    "description": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "ExpirationInDays": {
                                                    "description": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier.",
                                                    "type": "Number",
                                                    "required": false
                                                },
                                                "Transition": {
                                                    "description": "Describes when an object transitions to a specified storage class.",
                                                    "type": "Object",
                                                    "required": true,
                                                    "properties": {
                                                        "TransitionDate": {
                                                            "description": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
                                                            "type": "String",
                                                            "required": false
                                                        },
                                                        "StorageClass": {
                                                            "allowed-values": ["Glacier"],
                                                            "description": "The storage class to which you want the object to transition. Currently, you can specify only Glacier.",
                                                            "type": "String",
                                                            "required": true
                                                        },
                                                        "TransitionInDays": {
                                                            "description": "Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.",
                                                            "type": "Number",
                                                            "required": false
                                                        }
                                                    }
                                                },
                                                "Id": {
                                                    "description": "A unique identifier for this rule. The value cannot be more than 255 characters.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "Prefix": {
                                                    "description": "Object key prefix that identifies one or more objects to which this rule applies.",
                                                    "type": "String",
                                                    "required": false
                                                }
                                            }
                                        }}
                                    },
                                    "VersioningConfiguration": {
                                        "description": "Enables multiple variants of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {"Status": {
                                            "allowed-values": [
                                                "Enabled",
                                                "Suspended"
                                            ],
                                            "description": "The versioning state of an Amazon S3 bucket. If you enable versioning, you must suspend versioning to disable it.",
                                            "type": "String",
                                            "required": true
                                        }}
                                    },
                                    "AccessControl": {
                                        "allowed-values": [
                                            "*",
                                            "Private",
                                            "PublicRead",
                                            "PublicReadWrite",
                                            "AuthenticatedRead",
                                            "LogDeliveryWrite",
                                            "BucketOwnerRead",
                                            "BucketOwnerFullControl"
                                        ],
                                        "description": "A canned ACL that grants predefined permissions on the bucket. Default is Private.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::CloudFormation::WaitConditionHandle": {
                        "description": "The AWS::CloudFormation::WaitConditionHandle type has no properties.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::CloudFormation::WaitConditionHandle type has no properties.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {}
                            }
                        }
                    },
                    "AWS::CloudFront::Distribution": {
                        "return-values": [{
                            "name": "DomainName",
                            "description": "The domain name of the resource. For example: d2fadu0nynjpfn.cloudfront.net."
                        }],
                        "description": "Creates an Amazon CloudFront download distribution.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon CloudFront download distribution.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {"DistributionConfig": {
                                    "description": "The distribution's configuration information.",
                                    "type": "Object",
                                    "required": true,
                                    "properties": {
                                        "Logging": {
                                            "description": "Controls whether access logs are written for the distribution. To turn on access logs, include this property.",
                                            "type": "Object",
                                            "required": false,
                                            "properties": {
                                                "IncludeCookies": {
                                                    "description": "Indicates whether CloudFront includes cookies in access logs.",
                                                    "type": "Boolean",
                                                    "required": false
                                                },
                                                "Bucket": {
                                                    "resource-ref-type": "AWS::S3::Bucket",
                                                    "description": "The Amazon S3 bucket to store the access logs in.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "Prefix": {
                                                    "description": "An optional string that, if defined, will be used as a prefix for the access log file names for this distribution.",
                                                    "type": "String",
                                                    "required": false
                                                }
                                            }
                                        },
                                        "Comment": {
                                            "description": "Any comments you want to include about the distribution.",
                                            "type": "String",
                                            "required": false
                                        },
                                        "DefaultRootObject": {
                                            "description": "The object (ex. \"index.html\") that you want CloudFront to request from your origin when the root URL for your distribution (ex. \"http://example.com/\") is requested.",
                                            "type": "String",
                                            "required": false
                                        },
                                        "Origins": {
                                            "array-type": "Object",
                                            "description": "A list of origins for this CloudFront distribution. For each origin, you can specify whether it is an S3 or custom origin.",
                                            "type": "Array",
                                            "required": false,
                                            "properties": {
                                                "DomainName": {
                                                    "description": "The DNS name of the Amazon S3 bucket or the HTTP server from which you want CloudFront to get objects for this origin.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "S3OriginConfig": {
                                                    "description": "Origin information to specify an Amazon S3 origin. Required: Conditional. You cannot use S3Origin and CustomOrigin in the same distribution, but you must specify one or the other.",
                                                    "type": "Object",
                                                    "required": false,
                                                    "properties": {"OriginAccessIdentity": {
                                                        "description": "The CloudFront origin access identity to associate with the origin. This is used to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront.",
                                                        "type": "String",
                                                        "required": false
                                                    }}
                                                },
                                                "OriginPath": {
                                                    "description": "The path that CloudFront uses to request content from an S3 bucket or custom origin.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "Id": {
                                                    "description": "An identifier for the origin. The value of Id must be unique within the distribution.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "CustomOriginConfig": {
                                                    "description": "Origin information to specify a custom origin. Required: Conditional. You cannot use CustomOrigin and S3 Origin in the same distribution, but you must specify one or the other.",
                                                    "type": "Object",
                                                    "required": false,
                                                    "properties": {
                                                        "HTTPSPort": {
                                                            "description": "The HTTPS port the custom origin listens on.",
                                                            "type": "String",
                                                            "required": false
                                                        },
                                                        "HTTPPort": {
                                                            "description": "The HTTP port the custom origin listens on.",
                                                            "type": "String",
                                                            "required": false
                                                        },
                                                        "OriginProtocolPolicy": {
                                                            "allowed-values": [
                                                                "http-only",
                                                                "match-viewer"
                                                            ],
                                                            "description": "The origin protocol policy to apply to your origin.",
                                                            "type": "String",
                                                            "required": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "ViewerCertificate": {
                                            "description": "The certificate to use when viewers use HTTPS to request objects.",
                                            "type": "Object",
                                            "required": false,
                                            "properties": {
                                                "IamCertificateId": {
                                                    "description": "The IAM certificate ID to use if you're using an alternate domain name.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "SslSupportMethod": {
                                                    "description": "Specifies how CloudFront serves HTTPS requests.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "MinimumProtocolVersion": {
                                                    "description": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "CloudFrontDefaultCertificate": {
                                                    "description": "Indicates whether to use the default certificate for your CloudFront domain name when viewers use HTTPS to request your content.",
                                                    "type": "Boolean",
                                                    "required": false
                                                }
                                            }
                                        },
                                        "PriceClass": {
                                            "description": "The price class that corresponds with the maximum price that you want to pay for the CloudFront service.",
                                            "type": "String",
                                            "required": false
                                        },
                                        "DefaultCacheBehavior": {
                                            "description": "The default cache behavior that is triggered if you do not specify a CacheBehavior element, or if files don't match any of the values of PathPattern in CacheBehavior elements.",
                                            "type": "Object",
                                            "required": true,
                                            "properties": {
                                                "AllowedMethods": {
                                                    "array-type": "String",
                                                    "description": "HTTP methods that CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. You can specify [\"HEAD\", \"GET\"] or [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"].",
                                                    "type": "Array",
                                                    "required": false
                                                },
                                                "CachedMethods": {
                                                    "array-type": "String",
                                                    "allowed-values": [
                                                        "HEAD",
                                                        "GET",
                                                        "OPTIONS"
                                                    ],
                                                    "description": "HTTP methods for which CloudFront caches responses.",
                                                    "type": "Array",
                                                    "required": false
                                                },
                                                "SmoothStreaming": {
                                                    "description": "Indicates whether to distribute media files in the Microsoft Smooth Streaming format by using the origin that is associated with this cache behavior. If you specify true, you can still use this cache behavior to distribute other content if the content matches the PathPattern value.",
                                                    "type": "Boolean",
                                                    "required": false
                                                },
                                                "TargetOriginId": {
                                                    "description": "The value of ID for the origin that you want CloudFront to route requests to when the default cache behavior is applicable to a request.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "ViewerProtocolPolicy": {
                                                    "allowed-values": [
                                                        "allow-all",
                                                        "https-only"
                                                    ],
                                                    "description": "Specifies the protocol that users can use to access the files in the origin specified by TargetOriginId when the default cache behavior is applicable to a request.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "ForwardedValues": {
                                                    "description": "Specifies how CloudFront handles query strings.",
                                                    "type": "Object",
                                                    "required": true,
                                                    "properties": {
                                                        "Cookies": {
                                                            "description": "ForwardedValues is a property of the DefaultCacheBehavior and CacheBehavior properties that indicates whether Amazon CloudFront forwards query strings or cookies.",
                                                            "type": "Object",
                                                            "required": false,
                                                            "properties": {
                                                                "WhitelistedNames": {
                                                                    "array-type": "String",
                                                                    "description": "The names of cookies to forward to the origin for the cache behavior.",
                                                                    "type": "Array",
                                                                    "required": false
                                                                },
                                                                "Forward": {
                                                                    "allowed-values": [
                                                                        "none",
                                                                        "all",
                                                                        "whitelist"
                                                                    ],
                                                                    "description": "The cookies to forward to the origin of the cache behavior. You can specify none, all, or whitelist.",
                                                                    "type": "String",
                                                                    "required": true
                                                                }
                                                            }
                                                        },
                                                        "QueryString": {
                                                            "description": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                                            "type": "Boolean",
                                                            "required": true
                                                        }
                                                    }
                                                },
                                                "MinTTL": {
                                                    "description": "The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "TrustedSigners": {
                                                    "array-type": "String",
                                                    "description": "A list of AWS accounts that you want to allow to create signed URLs for private content.",
                                                    "type": "Array",
                                                    "required": false
                                                }
                                            }
                                        },
                                        "CustomErrorResponses": {
                                            "array-type": "Object",
                                            "description": "Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.",
                                            "type": "Array",
                                            "required": false,
                                            "properties": {
                                                "ResponseCode": {
                                                    "description": "The HTTP status code that CloudFront returns to viewer along with the custom error page. You can specify 200, 400, 403, 404, 405, 414, 500, 501, 502, 503, or 504.",
                                                    "type": "Number",
                                                    "required": false
                                                },
                                                "ErrorCachingMinTTL": {
                                                    "description": "The minimum amount of time, in seconds, that Amazon CloudFront caches the HTTP status code that you specified in the ErrorCode property. The default value is 300.",
                                                    "type": "Number",
                                                    "required": false
                                                },
                                                "ErrorCode": {
                                                    "description": "An HTTP status code for which you want to specify a custom error page. You can specify 400, 403, 404, 405, 414, 500, 501, 502, 503, or 504.",
                                                    "type": "Number",
                                                    "required": true
                                                },
                                                "ResponsePagePath": {
                                                    "description": "The path to the custom error page that CloudFront returns to a viewer when your origin returns the HTTP status code that you specified in the ErrorCode property. For example, you can specify /404-errors/403-forbidden.html.",
                                                    "type": "String",
                                                    "required": false
                                                }
                                            }
                                        },
                                        "Enabled": {
                                            "description": "Controls whether the distribution is enabled to accept end user requests for content.",
                                            "type": "Boolean",
                                            "required": true
                                        },
                                        "Aliases": {
                                            "array-type": "String",
                                            "description": "CNAMEs (alternate domain names), if any, for the distribution.",
                                            "type": "Array",
                                            "required": false
                                        },
                                        "Restrictions": {
                                            "description": "Specifies restrictions on who or how viewers can access your content.",
                                            "type": "Object",
                                            "required": false,
                                            "properties": {"GeoRestriction": {
                                                "description": "The countries in which viewers are able to access your content.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "Locations": {
                                                        "array-type": "String",
                                                        "description": "The two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist.",
                                                        "type": "Array",
                                                        "required": false
                                                    },
                                                    "RestrictionType": {
                                                        "allowed-values": [
                                                            "blacklist",
                                                            "whitelist",
                                                            "none"
                                                        ],
                                                        "description": "The method to restrict distribution of your content.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            }}
                                        },
                                        "CacheBehaviors": {
                                            "array-type": "Object",
                                            "type": "Array",
                                            "required": false,
                                            "properties": {
                                                "AllowedMethods": {
                                                    "array-type": "String",
                                                    "description": "HTTP methods that CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. You can specify [\"HEAD\", \"GET\"] or [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"].",
                                                    "type": "Array",
                                                    "required": false
                                                },
                                                "PathPattern": {
                                                    "description": "The pattern for which you want this cache behavior to apply (ex. \"images/*.jpg\"). When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the stack specification for the distribution.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "CachedMethods": {
                                                    "array-type": "String",
                                                    "allowed-values": [
                                                        "HEAD",
                                                        "GET",
                                                        "OPTIONS"
                                                    ],
                                                    "description": "HTTP methods for which CloudFront caches responses.",
                                                    "type": "Array",
                                                    "required": false
                                                },
                                                "SmoothStreaming": {
                                                    "description": "Indicates whether to distribute media files in the Microsoft Smooth Streaming format by using the origin that is associated with this cache behavior. If you specify true, you can still use this cache behavior to distribute other content if the content matches the PathPattern value.",
                                                    "type": "Boolean",
                                                    "required": false
                                                },
                                                "TargetOriginId": {
                                                    "description": "The value of ID for the origin that you want CloudFront to route requests to when the default cache behavior is applicable to a request.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "ViewerProtocolPolicy": {
                                                    "allowed-values": [
                                                        "allow-all",
                                                        "https-only"
                                                    ],
                                                    "description": "Specifies the protocol that users can use to access the files in the origin specified by TargetOriginId when the default cache behavior is applicable to a request.",
                                                    "type": "String",
                                                    "required": true
                                                },
                                                "ForwardedValues": {
                                                    "description": "Specifies how CloudFront handles query strings.",
                                                    "type": "Object",
                                                    "required": true,
                                                    "properties": {
                                                        "Cookies": {
                                                            "description": "ForwardedValues is a property of the DefaultCacheBehavior and CacheBehavior properties that indicates whether Amazon CloudFront forwards query strings or cookies.",
                                                            "type": "Object",
                                                            "required": false,
                                                            "properties": {
                                                                "WhitelistedNames": {
                                                                    "array-type": "String",
                                                                    "description": "The names of cookies to forward to the origin for the cache behavior.",
                                                                    "type": "Array",
                                                                    "required": false
                                                                },
                                                                "Forward": {
                                                                    "allowed-values": [
                                                                        "none",
                                                                        "all",
                                                                        "whitelist"
                                                                    ],
                                                                    "description": "The cookies to forward to the origin of the cache behavior. You can specify none, all, or whitelist.",
                                                                    "type": "String",
                                                                    "required": true
                                                                }
                                                            }
                                                        },
                                                        "Headers": {
                                                            "array-type": "String",
                                                            "description": "Specifies the headers that you want Amazon CloudFront to forward to the origin for this cache behavior.",
                                                            "type": "Array",
                                                            "required": false
                                                        },
                                                        "QueryString": {
                                                            "description": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                                            "type": "Boolean",
                                                            "required": true
                                                        }
                                                    }
                                                },
                                                "MinTTL": {
                                                    "description": "The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated.",
                                                    "type": "String",
                                                    "required": false
                                                },
                                                "TrustedSigners": {
                                                    "array-type": "String",
                                                    "description": "A list of AWS accounts that you want to allow to create signed URLs for private content.",
                                                    "type": "Array",
                                                    "required": false
                                                }
                                            }
                                        }
                                    }
                                }}
                            }
                        }
                    },
                    "AWS::CloudWatch::Alarm": {
                        "description": "The AWS::CloudWatch::Alarm type creates an Amazon CloudWatch alarm.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::CloudWatch::Alarm type creates an Amazon CloudWatch alarm.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "ComparisonOperator": {
                                        "allowed-values": [
                                            "GreaterThanOrEqualToThreshold",
                                            "GreaterThanThreshold",
                                            "LessThanThreshold",
                                            "LessThanOrEqualToThreshold"
                                        ],
                                        "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Dimensions": {
                                        "array-type": "Object",
                                        "description": "The dimensions for the alarm's associated metric.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "The value representing the dimension measurement.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Name": {
                                                "description": "Name of the dimension.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "Period": {
                                        "description": "The period in seconds over which the specified statistic is applied.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "EvaluationPeriods": {
                                        "description": "The number of periods over which data is compared to the specified threshold.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Unit": {
                                        "allowed-values": [
                                            "Seconds",
                                            "Microseconds",
                                            "Milliseconds",
                                            "Bytes",
                                            "Kilobytes",
                                            "Megabytes",
                                            "Gigabytes",
                                            "Terabytes",
                                            "Bits",
                                            "Kilobits",
                                            "Megabits",
                                            "Gigabits",
                                            "Terabits",
                                            "Percent",
                                            "Count",
                                            "Bytes/Second",
                                            "Kilobytes/Second",
                                            "Megabytes/Second",
                                            "Gigabytes/Second",
                                            "Terabytes/Second",
                                            "Bits/Second",
                                            "Kilobits/Second",
                                            "Megabits/Second",
                                            "Gigabits/Second",
                                            "Terabits/Second",
                                            "Count/Second",
                                            "None"
                                        ],
                                        "description": "The unit for the alarm's associated metric.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Namespace": {
                                        "description": "The namespace for the alarm's associated metric.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "OKActions": {
                                        "array-type": "String",
                                        "resource-ref-type": [
                                            "AWS::SNS::Topic",
                                            "AWS::AutoScaling::ScalingPolicy"
                                        ],
                                        "description": "The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Number (ARN). Currently the only action supported is publishing to an Amazon SNS topic or an Amazon Auto Scaling policy.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "AlarmActions": {
                                        "array-type": "String",
                                        "resource-ref-type": [
                                            "AWS::SNS::Topic",
                                            "AWS::AutoScaling::ScalingPolicy"
                                        ],
                                        "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN). Currently the only action supported is publishing to an Amazon SNS topic or an Amazon Auto Scaling policy.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "MetricName": {
                                        "description": "The name for the alarm's associated metric.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "ActionsEnabled": {
                                        "description": "Indicates whether or not actions should be executed during any changes to the alarm's state. Either true or false.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AlarmDescription": {
                                        "description": "The description for the alarm.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AlarmName": {
                                        "description": "A name for the alarm. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the alarm name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Statistic": {
                                        "allowed-values": [
                                            "SampleCount",
                                            "Average",
                                            "Sum",
                                            "Minimum",
                                            "Maximum"
                                        ],
                                        "description": "The statistic to apply to the alarm's associated metric.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "InsufficientDataActions": {
                                        "array-type": "String",
                                        "resource-ref-type": [
                                            "AWS::SNS::Topic",
                                            "AWS::AutoScaling::ScalingPolicy"
                                        ],
                                        "description": "The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Number (ARN). Currently the only action supported is publishing to an Amazon SNS topic or an Amazon Auto Scaling policy.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "Threshold": {
                                        "description": "The value against which the specified statistic is compared.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Redshift::Cluster": {
                        "return-values": [
                            {
                                "name": "Endpoint.Address",
                                "description": "The connection endpoint for the Amazon Redshift cluster. For example: examplecluster.cg034hpkmmjt.us-east-1.redshift.amazonaws.com ."
                            },
                            {
                                "name": "Endpoint.Port",
                                "description": "The port number on which the Amazon Redshift cluster accepts connections. For example: 5439."
                            }
                        ],
                        "description": "Creates an Amazon Redshift cluster. A cluster is a fully managed data warehouse that consists of set of compute nodes.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon Redshift cluster. A cluster is a fully managed data warehouse that consists of set of compute nodes.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "HsmClientCertificateIdentifier": {
                                        "description": "Specifies the name of the HSM client certificate that the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ElasticIp": {
                                        "description": "The Elastic IP (EIP) address for the cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutomatedSnapshotRetentionPeriod": {
                                        "description": "The number of days that automated snapshots are retained. If you set the value to 0, automated snapshots are disabled.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "ClusterVersion": {
                                        "description": "The Amazon Redshift engine version that you want to deploy on the cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HsmConfigurationIdentifier": {
                                        "description": "Specifies the name of the HSM configuration that contains the information that the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Encrypted": {
                                        "description": "Indicates whether the data in the cluster is encrypted at rest.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "SnapshotIdentifier": {
                                        "description": "A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the AWS account.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Port": {
                                        "description": "The port number on which the cluster accepts incoming connections.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "NumberOfNodes": {
                                        "description": "The number of compute nodes in the cluster. If you specify multi-node for the ClusterType parameter, you must specify a number greater than 1.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "AvailabilityZone": {
                                        "description": "The Amazon EC2 Availability Zone in which you want to provision your Amazon Redshift cluster. For example, if you have several Amazon EC2 instances running in a specific Availability Zone, you might want the cluster to be provisioned in the same zone in order to decrease network latency.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur. The format of the time range is ddd:hh24:mi-ddd:hh24:mi.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ClusterSecurityGroups": {
                                        "resource-ref-type": "AWS::Redshift::ClusterSecurityGroup",
                                        "description": "A list of security groups that you want to associate with this cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ClusterType": {
                                        "allowed-values": [
                                            "single-node",
                                            "multi-node"
                                        ],
                                        "description": "The type of cluster. You can specify single-node or multi-node.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "ClusterParameterGroupName": {
                                        "resource-ref-type": "AWS::Redshift::ClusterParameterGroup",
                                        "description": "The name of the parameter group that you want to associate with this cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "MasterUserPassword": {
                                        "description": "The password associated with the master user account for this cluster.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AllowVersionUpgrade": {
                                        "description": "When a new version of the Amazon Redshift is released, indicates whether upgrades can be applied to the engine that is running on the cluster. The upgrades are applied during the maintenance window.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "ClusterSubnetGroupName": {
                                        "resource-ref-type": "AWS::Redshift::ClusterSubnetGroup",
                                        "description": "The name of a cluster subnet group that you want to associate with this cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "VpcSecurityGroupIds": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "A list of VPC security groups that are associated with this cluster.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NodeType": {
                                        "allowed-values": [
                                            "dw.hs1.xlarge",
                                            "dw.hs1.8xlarge",
                                            "*"
                                        ],
                                        "description": "The node type that is provisioned for this cluster.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "MasterUsername": {
                                        "description": "The user name that is associated with the master user account for this cluster.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DBName": {
                                        "description": "The name of the first database that is created when the cluster is created.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "OwnerAccount": {
                                        "description": "When you restore from a snapshot from another AWS account, the 12-digit AWS account ID that contains that snapshot.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PubliclyAccessible": {
                                        "description": "Indicates whether the cluster can be accessed from a public network.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "SnapshotClusterIdentifier": {
                                        "description": "The cluster identifier for which you want a snapshot.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Redshift::ClusterParameterGroup": {
                        "description": "Creates an Amazon Redshift parameter group that you can associate with an Amazon Redshift cluster. The parameters in the group apply to all the databases that you create in the cluster.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates an Amazon Redshift parameter group that you can associate with an Amazon Redshift cluster. The parameters in the group apply to all the databases that you create in the cluster.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Description": {
                                        "description": "A description of the parameter group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Parameters": {
                                        "array-type": "Object",
                                        "description": "A description of the parameter group.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "ParameterValue": {
                                                "description": "The value of the parameter.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "ParameterName": {
                                                "description": "The name of the parameter.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "ParameterGroupFamily": {
                                        "description": "The Amazon Redshift engine version that applies to this cluster parameter group. The cluster engine version determines the set of parameters that you can specify in the Parameters property.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::OpsWorks::App": {
                        "description": "Defines an AWS OpsWorks app for an AWS OpsWorks stack. The app represents code that you want to run on an application server.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Defines an AWS OpsWorks app for an AWS OpsWorks stack. The app represents code that you want to run on an application server.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Domains": {
                                        "array-type": "String",
                                        "description": "The app virtual host settings, with multiple domains separated by commas. For example, 'www.example.com, example.com'.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "EnableSsl": {
                                        "description": "Whether to enable SSL for this app.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Type": {
                                        "description": "The app type. Each supported type is associated with a particular layer.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Description": {
                                        "description": "A description of the app.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SslConfiguration": {
                                        "description": "The SSL configuration",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "Chain": {
                                                "description": "An intermediate certificate authority key or client authentication.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "PrivateKey": {
                                                "description": "The private key; the contents of the certificate's domain.kex file.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Certificate": {
                                                "description": "The contents of the certificate's domain.crt file.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Attributes": {
                                        "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
                                        "type": "Json",
                                        "required": false
                                    },
                                    "Shortname": {
                                        "description": "The app short name, which is used internally by AWS OpsWorks and by Chef recipes.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AppSource": {
                                        "description": "Contains the information required to retrieve an app from a repository.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "SshKey": {
                                                "description": "The repository's SSH key.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Type": {
                                                "description": "The repository type.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Revision": {
                                                "description": "The application's version. With AWS OpsWorks, you can deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Url": {
                                                "description": "The source URL.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Password": {
                                                "description": "This parameter depends on the repository type. For Amazon S3 bundles, set Password to the appropriate IAM secret access key. For HTTP bundles, Git repositories, and Subversion repositories, set Password to the appropriate password.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Name": {
                                        "description": "The AWS OpsWorks app name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "StackId": {
                                        "resource-ref-type": "AWS::OpsWorks::Stack",
                                        "description": "The AWS OpsWorks stack ID that this app will be associated with.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::CloudTrail::Trail": {
                        "description": "The AWS::CloudTrail::Trail resource creates a trail and specifies where logs are published.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::CloudTrail::Trail resource creates a trail and specifies where logs are published.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "IncludeGlobalServiceEvents": {
                                        "description": "Indicates whether the trail is publishing events from global services, such as IAM, to the log files.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "SnsTopicName": {
                                        "description": "The name of an Amazon SNS topic that is notified when new log files are published.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "S3KeyPrefix": {
                                        "description": "An Amazon S3 object key prefix that precedes the name of all log files.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "S3BucketName": {
                                        "resource-ref-type": "AWS::S3::Bucket",
                                        "description": "The name of the Amazon S3 bucket where CloudTrail publishes log files.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "IsLogging": {
                                        "description": "Indicates whether the CloudTrail trail is currently logging AWS API calls.",
                                        "type": "Boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::S3::BucketPolicy": {
                        "description": "The AWS::S3::BucketPolicy type applies a policy to an Amazon S3 bucket.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::S3::BucketPolicy type applies a policy to an Amazon S3 bucket.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Bucket": {
                                        "resource-ref-type": "AWS::S3::Bucket",
                                        "description": "Name of the bucket to which you want to add the policy.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "PolicyDocument": {
                                        "description": "A policy document containing permissions to add to the specified SNS topics.",
                                        "type": "Policy",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::AutoScaling::AutoScalingGroup": {
                        "description": "The AWS::AutoScaling::AutoScalingGroup type creates an Auto Scaling group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::AutoScaling::AutoScalingGroup type creates an Auto Scaling group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "UpdatePolicy": {
                                "description": "You can use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "CreationPolicy": {
                                "description": "The CreationPolicy prevents the resource's status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.",
                                "type": "Object",
                                "required": false,
                                "properties": {"ResourceSignal": {
                                    "description": "Signal configuration.",
                                    "type": "Object",
                                    "required": true,
                                    "properties": {
                                        "Timeout": {
                                            "description": "The length of time that AWS CloudFormation waits for the number of signals that was specified in the Count property. The value must be in ISO8601 duration format, in the form: PT#H#M#S, where each # is the number of hours, minutes, and seconds, respectively. Default: PT5M (5 minutes)",
                                            "type": "String",
                                            "required": false
                                        },
                                        "Count": {
                                            "description": "The number of success signals AWS CloudFormation must receive before it sets the resource status as CREATE_COMPLETE.",
                                            "type": "Number",
                                            "required": false
                                        }
                                    }
                                }}
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "LoadBalancerNames": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::ElasticLoadBalancing::LoadBalancer",
                                        "description": "A list of load balancers associated with this auto scaling group.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "LaunchConfigurationName": {
                                        "resource-ref-type": "AWS::AutoScaling::LaunchConfiguration",
                                        "description": "Specifies the name of the associated AWS::AutoScaling::LaunchConfiguration.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the Amazon EC2 instance you want to use to create the Auto Scaling group. Use this property if you want to create an Auto Scaling group by using an existing Amazon EC2 instance instead of a launch configuration.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AvailabilityZones": {
                                        "array-type": "String",
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "Contains a list of Availability Zones for the group.",
                                        "type": "Array",
                                        "required": true
                                    },
                                    "Cooldown": {
                                        "description": "The number of seconds after a scaling activity completes before any further scaling activities can start.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NotificationConfigurations": {
                                        "array-type": "Object",
                                        "description": "An embedded property that configures an auto scaling group to send notifications when specified events take place.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "TopicARN": {
                                                "resource-ref-type": "AWS::SNS::Topic",
                                                "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "NotificationTypes": {
                                                "array-type": "String",
                                                "allowed-values": [
                                                    "autoscaling:EC2_INSTANCE_LAUNCH",
                                                    "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                                                    "autoscaling:EC2_INSTANCE_TERMINATE",
                                                    "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
                                                    "autoscaling:TEST_NOTIFICATION"
                                                ],
                                                "description": "The type of events that will trigger the notification.",
                                                "type": "Array",
                                                "required": true
                                            }
                                        }
                                    },
                                    "NotificationConfiguration": {
                                        "description": "An embedded property that configures an auto scaling group to send notifications when specified events take place.",
                                        "type": "Object",
                                        "required": false,
                                        "properties": {
                                            "TopicARN": {
                                                "resource-ref-type": "AWS::SNS::Topic",
                                                "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "NotificationTypes": {
                                                "array-type": "String",
                                                "allowed-values": [
                                                    "autoscaling:EC2_INSTANCE_LAUNCH",
                                                    "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                                                    "autoscaling:EC2_INSTANCE_TERMINATE",
                                                    "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
                                                    "autoscaling:TEST_NOTIFICATION"
                                                ],
                                                "description": "The type of events that will trigger the notification.",
                                                "type": "Array",
                                                "required": true
                                            }
                                        }
                                    },
                                    "DesiredCapacity": {
                                        "description": "Specifies the desired capacity for the auto scaling group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HealthCheckGracePeriod": {
                                        "description": "The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "MetricsCollection": {
                                        "array-type": "Object",
                                        "description": "Enables the monitoring of group metrics of an Auto Scaling group.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Metrics": {
                                                "array-type": "String",
                                                "description": "The list of metrics to collect. If you don't specify any metrics, all metrics are enabled.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "Granularity": {
                                                "description": "The frequency at which Auto Scaling sends aggregated data to CloudWatch. For example, you can specify 1Minute to send aggregated data to CloudWatch every minute.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "MaxSize": {
                                        "description": "The maximum size of the auto scaling group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "MinSize": {
                                        "description": "The minimum size of the auto scaling group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "TerminationPolicies": {
                                        "array-type": "String",
                                        "description": "A termination policy or a list of termination policies that are used to select the instances to terminate. The policies are executed in the order that you list them.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "VPCZoneIdentifier": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::Subnet",
                                        "description": "A list of subnet identifiers of Amazon Virtual Private Clouds (Amazon VPCs).",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "PlacementGroup": {
                                        "description": "The name of an existing cluster placement group into which you want to launch your instances.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HealthCheckType": {
                                        "allowed-values": [
                                            "EC2",
                                            "ELB"
                                        ],
                                        "description": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer. Valid values are \"EC2\" or \"ELB.\"",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags you want to attach to this resource.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "description": "The key name of the tag.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key name of the tag.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "PropagateAtLaunch": {
                                                "description": "Set to true if you want AWS CloudFormation to copy the tag to EC2 instances that are launched as part of the auto scaling group. Set to false if you want the tag attached only to the auto scaling group and not copied to any instances launched as part of the auto scaling group.",
                                                "type": "Boolean",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::AutoScaling::LifecycleHook": {
                        "description": "Use AWS::AutoScaling::LifecycleHook to control the state of an instance in an Auto Scaling group after it is launched or terminated.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Use AWS::AutoScaling::LifecycleHook to control the state of an instance in an Auto Scaling group after it is launched or terminated.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "LifecycleHookName": {
                                        "description": "The name of the lifecycle hook. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the lifecycle hook name.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "LifecycleTransition": {
                                        "description": "The state of the Amazon EC2 instance to which you want to attach the lifecycle hook.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AutoScalingGroupName": {
                                        "resource-ref-type": "AWS::AutoScaling::AutoScalingGroup",
                                        "description": "The name of the Auto Scaling group for the lifecycle hook.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "HeartbeatTimeout": {
                                        "description": "The amount of time that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action that you specified in the DefaultResult property.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "NotificationMetadata": {
                                        "description": "Additional information that you want to include when Auto Scaling sends a message to the notification target.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DefaultResult": {
                                        "description": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "NotificationTargetARN": {
                                        "resource-ref-type": "AWS::SNS::Topic",
                                        "description": "The Amazon resource name (ARN) of the notification target that Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "RoleARN": {
                                        "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. The role requires permissions to Amazon SNS and Amazon SQS.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::CloudFormation::CustomResource": {
                        "return-values": [{
                            "name": "*",
                            "description": "Custom return parameter."
                        }],
                        "description": "Custom resources are special AWS CloudFormation resources that provide a way for a template developer to include resources in an AWS CloudFormation stack that are provided by a source other than Amazon Web Services. The custom resource provider can be either a template developer or a separate third-party resource provider.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Custom resources are special AWS CloudFormation resources that provide a way for a template developer to include resources in an AWS CloudFormation stack that are provided by a source other than Amazon Web Services. The custom resource provider can be either a template developer or a separate third-party resource provider.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "description": "Custom resources are special AWS CloudFormation resources that provide a way for a template developer to include resources in an AWS CloudFormation stack that are provided by a source other than Amazon Web Services. The custom resource provider can be either a template developer or a separate third-party resource provider.",
                                "type": "Json",
                                "required": false
                            }
                        }
                    },
                    "AWS::Redshift::ClusterSecurityGroupIngress": {
                        "description": "Specifies inbound (ingress) rules for an Amazon Redshift security group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Specifies inbound (ingress) rules for an Amazon Redshift security group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "CIDRIP": {
                                        "description": "The IP address range that has inbound access to the Amazon Redshift security group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EC2SecurityGroupName": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "The Amazon EC2 security group that will be added the Amazon Redshift security group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EC2SecurityGroupOwnerId": {
                                        "description": "The 12-digit AWS account number of the owner of the Amazon EC2 security group that is specified by the EC2SecurityGroupName parameter.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "ClusterSecurityGroupName": {
                                        "resource-ref-type": "AWS::Redshift::ClusterSecurityGroup",
                                        "description": "The name of the Amazon Redshift security group that will be associated with the ingress rule.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::ElastiCache::SecurityGroupIngress": {
                        "description": "The AWS::ElastiCache::SecurityGroupIngress type authorizes ingress to a cache security group from hosts in specified EC2 security groups.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::ElastiCache::SecurityGroupIngress type authorizes ingress to a cache security group from hosts in specified EC2 security groups.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "EC2SecurityGroupName": {
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "Name of the EC2 Security Group to include in the authorization.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "EC2SecurityGroupOwnerId": {
                                        "description": "Specifies the AWS Account ID of the owner of the EC2 security group specified in the EC2SecurityGroupName property. The AWS Access Key ID is not an acceptable value.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "CacheSecurityGroupName": {
                                        "resource-ref-type": "AWS::ElastiCache::SecurityGroup",
                                        "description": "The name of the Cache Security Group to authorize.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::VPCDHCPOptionsAssociation": {
                        "description": "Associates a set of DHCP options (that you've previously created) with the specified VPC.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Associates a set of DHCP options (that you've previously created) with the specified VPC.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "The ID of the VPC to associate with this DHCP options set.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DhcpOptionsId": {
                                        "resource-ref-type": "AWS::EC2::DHCPOptions",
                                        "description": "The ID of the DHCP options you want to associate with the VPC, or \"default\" if you want the VPC to use no DHCP options.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::Route53::RecordSetGroup": {
                        "description": "Creates or updates a new Amazon Route 53RecordSetGroup.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Creates or updates a new Amazon Route 53RecordSetGroup.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Comment": {
                                        "description": "Any comments you want to include about the hosted zone.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HostedZoneName": {
                                        "description": "The name of the domain for the hosted zone where you want to add the record set. Required: Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "HostedZoneId": {
                                        "description": "The ID of the hosted zone. Required: Conditional: You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "RecordSets": {
                                        "array-type": "Object",
                                        "description": "List of resource record sets to add.",
                                        "type": "Array",
                                        "required": true,
                                        "properties": {
                                            "AliasTarget": {
                                                "description": "Alias resource record sets only: Information about the domain to which you are redirecting traffic. Required: Conditional. Required if you are creating an alias resource record set.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "HostedZoneId": {
                                                        "description": "The hosted zone name ID of the Load Balancer that is the target of the alias.",
                                                        "type": "String",
                                                        "required": true
                                                    },
                                                    "DNSName": {
                                                        "description": "The DNS name of the Load Balancer that is the target of the alias.",
                                                        "type": "String",
                                                        "required": true
                                                    }
                                                }
                                            },
                                            "Comment": {
                                                "description": "Any comments you want to include about the hosted zone.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "HostedZoneName": {
                                                "description": "The name of the domain for the hosted zone where you want to add the record set. Required: Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "ResourceRecords": {
                                                "array-type": "String",
                                                "resource-ref-type": "AWS::EC2::EIP",
                                                "description": "List of resource records to add. Each record should be in the format appropriate for the record type specified by the Type property. Required: Conditional. Required if TTL is specified.",
                                                "type": "Array",
                                                "required": false
                                            },
                                            "HostedZoneId": {
                                                "description": "The ID of the hosted zone. Required: Conditional. You must specify either the HostedZoneName or HostedZoneId, but you cannot specify both.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "SetIdentifier": {
                                                "description": "A unique identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type. Required: Conditional. Required if you are creating a weighted resource record set.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "TTL": {
                                                "description": "The resource record cache time to live (TTL), in seconds. If TTL is specified, ResourceRecords is also required.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Weight": {
                                                "description": "Weighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location. Required: Conditional. Required if you are creating a weighted resource record set.",
                                                "type": "Number",
                                                "required": false
                                            },
                                            "Name": {
                                                "description": "The name of the domain. This must be a fully-specified domain, ending with a period as the last label indication. If you omit the final period, Amazon Route 53 assumes the domain is relative to the root.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Type": {
                                                "allowed-values": [
                                                    "A",
                                                    "AAAA",
                                                    "CNAME",
                                                    "MX",
                                                    "NS",
                                                    "PTR",
                                                    "SOA",
                                                    "SPF",
                                                    "SRV",
                                                    "TXT"
                                                ],
                                                "description": "The type of records to add.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Failover": {
                                                "allowed-values": [
                                                    "PRIMARY",
                                                    "SECONDARY"
                                                ],
                                                "description": "Designates the record set as a PRIMARY or SECONDARY failover record set.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "Region": {
                                                "description": "Latency resource record sets only: The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "GeoLocation": {
                                                "description": "Describes how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.",
                                                "type": "Object",
                                                "required": false,
                                                "properties": {
                                                    "ContinentCode": {
                                                        "description": "All DNS queries from the continent that you specified are routed to this resource record set. If you specify this property, omit the CountryCode and SubdivisionCode properties.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "CountryCode": {
                                                        "description": "All DNS queries from the country that you specified are routed to this resource record set. If you specify this property, omit the ContinentCode property.",
                                                        "type": "String",
                                                        "required": false
                                                    },
                                                    "SubdivisionCode": {
                                                        "description": "If you specified US for the country code, you can specify a state in the United States. All DNS queries from the state that you specified are routed to this resource record set. If you specify this property, you must specify US for the CountryCode and omit the ContinentCode property.",
                                                        "type": "String",
                                                        "required": false
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
                        "description": "Attaches an Elastic Load Balancing load balancer to an AWS OpsWorks layer that you specify.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Attaches an Elastic Load Balancing load balancer to an AWS OpsWorks layer that you specify.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "LayerId": {
                                        "resource-ref-type": "AWS::OpsWorks::Layer",
                                        "description": "The AWS OpsWorks layer ID that the Elastic Load Balancing load balancer will be attached to.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "ElasticLoadBalancerName": {
                                        "resource-ref-type": "AWS::ElasticLoadBalancing::LoadBalancer",
                                        "description": "Elastic Load Balancing load balancer name.",
                                        "type": "String",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::NetworkInterfaceAttachment": {
                        "description": "Attaches an elastic network interface (ENI) to an Amazon EC2 instance. You can use this resource type to attach additional network interfaces to an instances without interruption.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Attaches an elastic network interface (ENI) to an Amazon EC2 instance. You can use this resource type to attach additional network interfaces to an instances without interruption.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "InstanceId": {
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "The ID of the instance to which you will attach the ENI.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DeviceIndex": {
                                        "description": "The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "NetworkInterfaceId": {
                                        "resource-ref-type": "AWS::EC2::NetworkInterface",
                                        "description": "The ID of the ENI that you want to attach.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DeleteOnTermination": {
                                        "description": "Whether to delete the network interface when the instance terminates. By default, this value is set to True.",
                                        "type": "Boolean",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::RDS::DBInstance": {
                        "return-values": [
                            {
                                "name": "Endpoint.Address",
                                "description": "The connection endpoint for the database. For example: mystack-mydb-1apw1j4phylrk.cg034hpkmmjt.us-east-1.rds.amazonaws.com."
                            },
                            {
                                "name": "Endpoint.Port",
                                "description": "The port number on which the database accepts connections. For example: 3306"
                            }
                        ],
                        "description": "The AWS::RDS::DBInstance type creates an Amazon RDS database instance.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::RDS::DBInstance type creates an Amazon RDS database instance.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain",
                                    "Snapshot"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "StorageEncrypted": {
                                        "description": "Indicates whether the database instance is encrypted.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "CharacterSetName": {
                                        "description": "For supported engines, specifies the character set to associate with the database instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Port": {
                                        "description": "The port for the instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PreferredBackupWindow": {
                                        "description": "The daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DBParameterGroupName": {
                                        "resource-ref-type": "AWS::RDS::DBParameterGroup",
                                        "description": "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "MultiAZ": {
                                        "description": "Specifies if the DB instance is a multiple availability-zone deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "Engine": {
                                        "allowed-values": [
                                            "*",
                                            "MySQL",
                                            "oracle-se1",
                                            "oracle-se",
                                            "oracle-ee",
                                            "sqlserver-ee",
                                            "sqlserver-se",
                                            "sqlserver-ex",
                                            "sqlserver-web",
                                            "postgres"
                                        ],
                                        "description": "The name of the database engine to be used for this DB instance.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    },
                                    "LicenseModel": {
                                        "description": "The license model information for this DB instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SourceDBInstanceIdentifier": {
                                        "resource-ref-type": "AWS::RDS::DBInstance",
                                        "description": "If you want to create a read replica DB instance, specify the ID of the source DB instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EngineVersion": {
                                        "description": "The version number of the database engine to use.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "KmsKeyId": {
                                        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to encrypt the database instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DBInstanceClass": {
                                        "allowed-values": [
                                            "*",
                                            "db.t1.micro",
                                            "db.m1.small",
                                            "db.m1.medium",
                                            "db.m1.large",
                                            "db.m1.xlarge",
                                            "db.m2.xlarge",
                                            "db.m2.2xlarge",
                                            "db.m2.4xlarge",
                                            "db.m3.medium",
                                            "db.m3.large",
                                            "db.m3.xlarge",
                                            "db.m3.2xlarge",
                                            "db.r3.large",
                                            "db.r3.xlarge",
                                            "db.r3.2xlarge",
                                            "db.r3.4xlarge",
                                            "db.r3.8xlarge",
                                            "db.t2.micro",
                                            "db.t2.small",
                                            "db.t2.medium"
                                        ],
                                        "description": "The name of the compute and memory capacity class of the DB instance.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "AvailabilityZone": {
                                        "allowed-values": [
                                            "us-east-1a",
                                            "us-east-1b",
                                            "us-east-1c",
                                            "us-east-1d",
                                            "us-east-1e",
                                            "us-west-1a",
                                            "us-west-1b",
                                            "us-west-1c",
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c",
                                            "eu-west-1a",
                                            "eu-west-1b",
                                            "eu-west-1c",
                                            "ap-northeast-1a",
                                            "ap-northeast-1b",
                                            "ap-northeast-1c",
                                            "ap-southeast-1a",
                                            "ap-southeast-1b",
                                            "ap-southeast-2a",
                                            "ap-southeast-2b",
                                            "sa-east-1a",
                                            "sa-east-1b"
                                        ],
                                        "description": "The name of the Availability Zone where the DB instance is. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "The weekly time range (in UTC) during which system maintenance can occur.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. The default value is true.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "DBSubnetGroupName": {
                                        "resource-ref-type": "AWS::RDS::DBSubnetGroup",
                                        "description": "A DB Subnet Group to associate with this DB instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Iops": {
                                        "description": "The number of I/O operations per second (IOPS) that the database should provision. This can be any value from 1000�10,000, in 1000 IOPS increments.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": "A name for the DB instance. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AllocatedStorage": {
                                        "description": "The allocated storage size specified in gigabytes (GB). If any value is used in the Iops parameter, AllocatedStorage must be at least 100 GB, which corresponds to the minimum Iops value of 1000. If Iops is increased (in 1000 IOPS increments), then AllocatedStorage must also be increased (in 100 GB increments) correspondingly.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "MasterUserPassword": {
                                        "description": "The master password for the DB instance.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "VPCSecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::EC2::SecurityGroup",
                                        "description": "A list of the VPC security groups to assign to the Amazon RDS instance.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "AllowMajorVersionUpgrade": {
                                        "description": "Indicates whether major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is applied asynchronously as soon as possible.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "DBSecurityGroups": {
                                        "array-type": "String",
                                        "resource-ref-type": "AWS::RDS::DBSecurityGroup",
                                        "description": "A list containing the DB security groups to assign to the Amazon RDS instance. The list can contain both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
                                        "type": "Array",
                                        "required": false
                                    },
                                    "MasterUsername": {
                                        "description": "The master username for the DB instance.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "DBName": {
                                        "description": "The name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "The number of days for which automatic DB snapshots are retained.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "PubliclyAccessible": {
                                        "description": "Indicates whether the database instance is an Internet-facing instance. If you specify true, an instance is created with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, an internal instance is created with a DNS name that resolves to a private IP address.",
                                        "type": "Boolean",
                                        "required": false
                                    },
                                    "DBSnapshotIdentifier": {
                                        "description": "The identifier for the DB snapshot to restore from.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::CustomerGateway": {
                        "description": "Provides information to AWS about your VPN customer gateway device.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "Provides information to AWS about your VPN customer gateway device.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Type": {
                                        "description": "The type of VPN connection this customer gateway supports.  For example: ipsec.1",
                                        "type": "String",
                                        "required": true
                                    },
                                    "IpAddress": {
                                        "description": "The Internet-routable IP address for the customer gateway's outside interface. The address must be static.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "BgpAsn": {
                                        "description": "The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
                                        "type": "Number",
                                        "required": true
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::EIP": {
                        "return-values": [{
                            "name": "AllocationId",
                            "description": "The ID that AWS assigns to represent the allocation of the address for use with Amazon VPC. THis is returned only for VPC elastic IP addresses. Example return value: eipalloc-5723d13e"
                        }],
                        "description": "The AWS::EC2::EIP resource allocates an Elastic IP (EIP) address and can, optionally, associate it with an Amazon EC2 instance.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::EIP resource allocates an Elastic IP (EIP) address and can, optionally, associate it with an Amazon EC2 instance.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "InstanceId": {
                                        "resource-ref-type": "AWS::EC2::Instance",
                                        "description": "The Instance ID of the Amazon EC2 instance that you want to associate with this Elastic IP address.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "Domain": {
                                        "description": "Set to \"vpc\" to allocate the address to your Virtual Private Cloud (VPC). No other values are supported.",
                                        "type": "String",
                                        "required": false
                                    }
                                }
                            }
                        }
                    },
                    "AWS::CloudFormation::WaitCondition": {
                        "return-values": [{
                            "name": "Data",
                            "description": "A JSON object containing the UniqueId and Data values from the wait condition signal(s) for the specified wait condition."
                        }],
                        "description": "The following properties are available with the AWS::CloudFormation::WaitCondition type.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The following properties are available with the AWS::CloudFormation::WaitCondition type.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "CreationPolicy": {
                                "description": "The CreationPolicy prevents the resource's status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.",
                                "type": "Object",
                                "required": false,
                                "properties": {"ResourceSignal": {
                                    "description": "Signal configuration.",
                                    "type": "Object",
                                    "required": true,
                                    "properties": {
                                        "Timeout": {
                                            "description": "The length of time that AWS CloudFormation waits for the number of signals that was specified in the Count property. The value must be in ISO8601 duration format, in the form: PT#H#M#S, where each # is the number of hours, minutes, and seconds, respectively. Default: PT5M (5 minutes)",
                                            "type": "String",
                                            "required": false
                                        },
                                        "Count": {
                                            "description": "The number of success signals AWS CloudFormation must receive before it sets the resource status as CREATE_COMPLETE.",
                                            "type": "Number",
                                            "required": false
                                        }
                                    }
                                }}
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "Timeout": {
                                        "description": "The length of time (in seconds) to wait for the number of signals that the Count property specifies.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Count": {
                                        "description": "The number of success signals that AWS CloudFormation must receive before it continues the stack creation process.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "Handle": {
                                        "resource-ref-type": "AWS::CloudFormation::WaitConditionHandle",
                                        "description": "A reference to the wait condition handle used to signal this wait condition.",
                                        "type": "Reference",
                                        "required": true
                                    }
                                }
                            }
                        }
                    },
                    "AWS::EC2::SecurityGroup": {
                        "return-values": [{
                            "name": "GroupId",
                            "description": "The group ID of the specified security group. For example: sg-94b3a1f6"
                        }],
                        "description": "The AWS::EC2::SecurityGroup type creates an Amazon EC2 security group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::EC2::SecurityGroup type creates an Amazon EC2 security group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "GroupDescription": {
                                        "description": "Description of the security group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "VpcId": {
                                        "resource-ref-type": "AWS::EC2::VPC",
                                        "description": "ID of the VPC.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "SecurityGroupIngress": {
                                        "array-type": "Object",
                                        "description": "A list of EC2 security group ingress rules.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "CidrIp": {
                                                "description": "The CIDR range. If you specify SourceSecurityGroupName, do not specify CidrIp.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "FromPort": {
                                                "allowed-values": [
                                                    "*",
                                                    {
                                                        "display-label": "SSH (22)",
                                                        "value": "22"
                                                    },
                                                    {
                                                        "display-label": "SMTP (25)",
                                                        "value": "25"
                                                    },
                                                    {
                                                        "display-label": "HTTP (80)",
                                                        "value": "80"
                                                    },
                                                    {
                                                        "display-label": "POP3 (110)",
                                                        "value": "110"
                                                    },
                                                    {
                                                        "display-label": "HTTPS (443)",
                                                        "value": "443"
                                                    },
                                                    {
                                                        "display-label": "MS_SQL (1433)",
                                                        "value": "1433"
                                                    },
                                                    {
                                                        "display-label": "RDP (3389)",
                                                        "value": "3389"
                                                    }
                                                ],
                                                "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. An ICMP type number of -1 indicates a wildcard.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceSecurityGroupName": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "Specifies the name of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupName.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "ToPort": {
                                                "allowed-values": [
                                                    "*",
                                                    {
                                                        "display-label": "SSH (22)",
                                                        "value": "22"
                                                    },
                                                    {
                                                        "display-label": "SMTP (25)",
                                                        "value": "25"
                                                    },
                                                    {
                                                        "display-label": "HTTP (80)",
                                                        "value": "80"
                                                    },
                                                    {
                                                        "display-label": "POP3 (110)",
                                                        "value": "110"
                                                    },
                                                    {
                                                        "display-label": "HTTPS (443)",
                                                        "value": "443"
                                                    },
                                                    {
                                                        "display-label": "MS_SQL (1433)",
                                                        "value": "1433"
                                                    },
                                                    {
                                                        "display-label": "RDP (3389)",
                                                        "value": "3389"
                                                    }
                                                ],
                                                "description": "End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP code of -1 indicates a wildcard.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceSecurityGroupOwnerId": {
                                                "description": "Specifies the AWS Account ID of the owner of the Amazon EC2 Security Group specified in the SourceSecurityGroupName property.\n\nIf you specify SourceSecurityGroupName and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "IpProtocol": {
                                                "allowed-values": [
                                                    "*",
                                                    "tcp",
                                                    "udp",
                                                    "icmp"
                                                ],
                                                "description": "IP protocol name or number.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceSecurityGroupId": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "For VPC security groups only. Specifies the ID of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupId.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "SecurityGroupEgress": {
                                        "array-type": "Object",
                                        "description": "A list of EC2 security group egress rules.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "CidrIp": {
                                                "description": "The CIDR range. If you specify SourceSecurityGroupName, do not specify CidrIp.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "FromPort": {
                                                "allowed-values": [
                                                    "*",
                                                    {
                                                        "display-label": "SSH (22)",
                                                        "value": "22"
                                                    },
                                                    {
                                                        "display-label": "SMTP (25)",
                                                        "value": "25"
                                                    },
                                                    {
                                                        "display-label": "HTTP (80)",
                                                        "value": "80"
                                                    },
                                                    {
                                                        "display-label": "POP3 (110)",
                                                        "value": "110"
                                                    },
                                                    {
                                                        "display-label": "HTTPS (443)",
                                                        "value": "443"
                                                    },
                                                    {
                                                        "display-label": "MS_SQL (1433)",
                                                        "value": "1433"
                                                    },
                                                    {
                                                        "display-label": "RDP (3389)",
                                                        "value": "3389"
                                                    }
                                                ],
                                                "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. An ICMP type number of -1 indicates a wildcard.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceSecurityGroupName": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "Specifies the name of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupName.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "ToPort": {
                                                "allowed-values": [
                                                    "*",
                                                    {
                                                        "display-label": "SSH (22)",
                                                        "value": "22"
                                                    },
                                                    {
                                                        "display-label": "SMTP (25)",
                                                        "value": "25"
                                                    },
                                                    {
                                                        "display-label": "HTTP (80)",
                                                        "value": "80"
                                                    },
                                                    {
                                                        "display-label": "POP3 (110)",
                                                        "value": "110"
                                                    },
                                                    {
                                                        "display-label": "HTTPS (443)",
                                                        "value": "443"
                                                    },
                                                    {
                                                        "display-label": "MS_SQL (1433)",
                                                        "value": "1433"
                                                    },
                                                    {
                                                        "display-label": "RDP (3389)",
                                                        "value": "3389"
                                                    }
                                                ],
                                                "description": "End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP code of -1 indicates a wildcard.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "SourceSecurityGroupOwnerId": {
                                                "description": "Specifies the AWS Account ID of the owner of the Amazon EC2 Security Group specified in the SourceSecurityGroupName property.\n\nIf you specify SourceSecurityGroupName and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "IpProtocol": {
                                                "allowed-values": [
                                                    "*",
                                                    "tcp",
                                                    "udp",
                                                    "icmp"
                                                ],
                                                "description": "IP protocol name or number.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "DestinationSecurityGroupId": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "Specifies the GroupId of the destination Amazon VPC security group.",
                                                "type": "String",
                                                "required": false
                                            },
                                            "SourceSecurityGroupId": {
                                                "resource-ref-type": "AWS::EC2::SecurityGroup",
                                                "description": "For VPC security groups only. Specifies the ID of the Amazon EC2 Security Group to allow access.  If you specify CidrIp, do not specify SourceSecurityGroupId.",
                                                "type": "String",
                                                "required": false
                                            }
                                        }
                                    },
                                    "Tags": {
                                        "array-type": "Object",
                                        "description": "The tags that you want to attach.",
                                        "type": "Array",
                                        "required": false,
                                        "properties": {
                                            "Value": {
                                                "resource-ref-type": "*",
                                                "description": "A value associated with the key term.",
                                                "type": "String",
                                                "required": true
                                            },
                                            "Key": {
                                                "description": "The key term for this item.",
                                                "type": "String",
                                                "required": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "AWS::SDB::Domain": {
                        "description": "The AWS::SDB::Domain creates a Amazon SimpleDB Domain.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::SDB::Domain creates a Amazon SimpleDB Domain.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": false,
                                "properties": {}
                            }
                        }
                    },
                    "AWS::AutoScaling::ScheduledAction": {
                        "description": "The AWS::AutoScaling::AutoScalingGroup type creates an Auto Scaling group.",
                        "type": "Object",
                        "required": false,
                        "properties": {
                            "Condition": {
                                "description": "Associated condition that if true will allow the resource to be created.",
                                "type": "ConditionDeclaration",
                                "required": false
                            },
                            "Type": {
                                "description": "The AWS::AutoScaling::AutoScalingGroup type creates an Auto Scaling group.",
                                "type": "String",
                                "required": true
                            },
                            "DependsOn": {
                                "description": "The DependsOn attribute enables you to specify that the creation of a specific resource follows another.",
                                "type": "Resource",
                                "required": false
                            },
                            "DeletionPolicy": {
                                "allowed-values": [
                                    "Delete",
                                    "Retain"
                                ],
                                "description": "The DeletionPolicy attribute enables you to specify how AWS CloudFormation handles the resource deletion.",
                                "type": "String",
                                "required": false,
                                "disable-refs": true
                            },
                            "Metadata": {
                                "description": "The Metadata attribute enables you to associate structured data with a resource.",
                                "type": "Json",
                                "required": false
                            },
                            "Properties": {
                                "type": "Object",
                                "required": true,
                                "properties": {
                                    "MinSize": {
                                        "description": "The minimum number of Amazon EC2 instances in the Auto Scaling group.",
                                        "type": "Number",
                                        "required": false
                                    },
                                    "Recurrence": {
                                        "description": "The time when recurring future actions will start. You specify the start time by following the Unix cron syntax format.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "EndTime": {
                                        "description": "The time in UTC for this schedule to end. For example, 2010-06-01T00:00:00Z.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "AutoScalingGroupName": {
                                        "resource-ref-type": "AWS::AutoScaling::AutoScalingGroup",
                                        "description": "The name or ARN of the Auto Scaling group.",
                                        "type": "String",
                                        "required": true
                                    },
                                    "StartTime": {
                                        "description": "The time in UTC for this schedule to start. For example, 2010-06-01T00:00:00Z.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "DesiredCapacity": {
                                        "description": "The number of Amazon EC2 instances that should be running in the Auto Scaling group.",
                                        "type": "String",
                                        "required": false
                                    },
                                    "MaxSize": {
                                        "description": "The maximum number of Amazon EC2 instances in the Auto Scaling group.",
                                        "type": "Number",
                                        "required": false
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "The required Resources section describes the member resources in your AWS CloudFormation template.",
                "schema-lookup-property": "Type",
                "type": "Named-Array",
                "required": true
            },
            "Conditions": {
                "default-child-schema": {
                    "type": "ConditionDefinitions",
                    "required": true,
                    "properties": {
                        "Fn::Equals": {
                            "array-type": "Json",
                            "description": "Compares if two values are equal. Returns true if the two values are equal or false if they aren't.",
                            "type": "Array",
                            "required": false
                        },
                        "Fn::Or": {
                            "array-type": "Json",
                            "description": "Returns true if any one of the specified conditions evaluate to true, or returns false if all of the conditions evaluates to false. Fn::Or acts as an OR operator.",
                            "type": "Array",
                            "required": false
                        },
                        "Fn::And": {
                            "array-type": "Json",
                            "description": "Returns true if all the specified conditions evaluate to true, or returns false if any one of the conditions evaluates to false. Fn::And acts as an AND operator.",
                            "type": "Array",
                            "required": false
                        },
                        "Fn::Not": {
                            "array-type": "Json",
                            "description": "Returns true for a condition that evaluates to false or returns false for a condition that evaluates to true. Fn::Not acts as a NOT operator.",
                            "type": "Array",
                            "required": false
                        }
                    }
                },
                "description": "You define all conditions in the Conditions section of a template by using intrinsic functions. With these intrinsic functions, you can, for example, compare whether a value is equal to another value. Based on the result of a condition, you can conditionally create resources.",
                "type": "Named-Array",
                "required": false
            }
        }
    },
    "intrinsic-functions": {
        "Fn::Base64": {
            "skeleton": "{\"Fn::Base64\" : {}}",
            "parameter": "Object",
            "description": "The intrinsic function Fn::Base64 returns the Base64 representation of the input string. This function is typically used to pass encoded data to Amazon EC2 instances by way of the UserData property.",
            "return-type": "String"
        },
        "Ref": {
            "parameter": "String",
            "description": "The intrinsic function Ref returns the value of the specified parameter or resource.",
            "return-type": "String"
        },
        "Fn::GetAtt": {
            "skeleton": "{\"Fn::GetAtt\" : [ \"\", \"\"]}",
            "parameter": "Array",
            "description": "The intrinsic function Fn::GetAtt returns the value of an attribute from a resource in the template.",
            "return-type": "String"
        },
        "Fn::If": {
            "skeleton": "{ \"Fn::If\" : [ ] }",
            "parameter": "Array",
            "description": "Returns one value if the specified condition evaluates to true and another value if the specified condition evaluates to false. You can use the AWS::NoValue pseudo parameter as a return value to remove the corresponding property.",
            "return-type": "String"
        },
        "Fn::Select": {
            "skeleton": "{ \"Fn::Select\" : [ 0, [] ] }",
            "parameter": "Array",
            "description": "The intrinsic function Fn::Select returns a single object from a list of objects by index.",
            "return-type": "String"
        },
        "Fn::GetAZs": {
            "skeleton": "{ \"Fn::GetAZs\" : \"\" }",
            "parameter": "String",
            "description": "The intrinsic function Fn::GetAZs returns an array that lists all Availability Zones for the specified region.",
            "return-type": "Array"
        },
        "Fn::FindInMap": {
            "skeleton": "{\"Fn::FindInMap\" : [ \"\" , \"\", \"\"] }",
            "parameter": "Array",
            "description": "The intrinsic function Fn::FindInMap returns the value of a key from a mapping declared in the Mappings section.",
            "return-type": "String"
        },
        "Fn::Join": {
            "skeleton": "{\"Fn::Join\" : [ \"\", [ ] ]}",
            "parameter": "Array",
            "description": "The intrinsic function Fn::Join appends a set of values into a single value, separated by the specified delimiter. If a delimiter is the empty string, the set of values are concatenated with no delimiter.",
            "return-type": "String"
        }
    },
    "pseudo-parameters": {
        "AWS::Region": {
            "description": "Returns a string representing the AWS Region in which the encompassing resource is being created.",
            "type": "String"
        },
        "AWS::NoValue": {
            "description": "Used to unset a property for conditional properties.",
            "type": "String"
        },
        "AWS::StackId": {
            "description": "Returns the ID of the stack.",
            "type": "String"
        },
        "AWS::StackName": {
            "description": "Returns the name of the stack.",
            "type": "String"
        },
        "AWS::NotificationARNs": {
            "array-type": "String",
            "description": "Returns the list of notification Amazon Resource Names (ARNs) for the current stack.",
            "type": "Array"
        },
        "AWS::AccountId": {
            "description": "Returns the AWS account ID of the account in which the stack is being created.",
            "type": "String"
        }
    }
}