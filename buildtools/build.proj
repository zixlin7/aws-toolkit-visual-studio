    <Project ToolsVersion="4.0" 
	DefaultTargets="full-build"
	xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <InternalBuildTools Condition="'$(InternalBuildTools)'==''">..\..\AWSDotNetBuildTools</InternalBuildTools>
    </PropertyGroup>
    
	<Import Project="$(InternalBuildTools)\references.targets" Condition="Exists('$(InternalBuildTools)\references.targets')" />
	<Import Project="$(InternalBuildTools)\common.targets" Condition="Exists('$(InternalBuildTools)\common.targets')" />

    <PropertyGroup>
        <!-- perform a release build by default -->
        <Configuration Condition="'$(Configuration)'==''">Release</Configuration>
        
        <!-- path to the root of the repo artifacts; locations for output content will be inferred from this -->
        <RootPath Condition="'$(RootPath)'==''">$(MSBuildProjectDirectory)\..</RootPath>

        <!-- default location for artifacts consolidation -->
        <Deployment Condition="'$(Deployment)'==''">$(RootPath)\Deployment</Deployment>
        
        <AWSToolkitVersionNumber Condition="'$(AWSToolkitVersion)'==''"></AWSToolkitVersionNumber>
        <AWSDeployVersionNumber Condition="'$(AWSDeployVersion)'==''"></AWSDeployVersionNumber>
    </PropertyGroup>
    
	<Target Name="full-build" DependsOnTargets="build-tools;clean;get-references;update-version;build-awsdeploy;build-vstoolkit;copy-artifacts;save-build">
		<Message Text="Builds all components of the AWS Toolkit for Visual Studio"/>
	</Target>

    <Target Name="build-awsdeploy">
		<Message Text="Building client and host components for awsdeploy"/>
		<Exec Command="$(devenv2013) /Rebuild $(Configuration) ..\solutions\AWSDeploymentHostManager.sln"/>
    </Target>

    <Target Name="build-vstoolkit">
		<Message Text="Building Visual Studio toolkit integration"/>
		<Exec Command="$(devenv2013) /Rebuild $(Configuration) ..\solutions\AWSToolkitPackage.VS2013.sln"/>
    </Target>

    <Target Name="copy-artifacts" DependsOnTargets="build-vstoolkit;copy-templates;copy-icons;copy-shellartifacts" />
    
    <Target Name="copy-templates">
		<Message Text="Consolidating project templates to deployment folder"/>

        <PropertyGroup>
            <ProjectTemplatesDest>$(Deployment)\templates\AWSToolkitPackage.Templates\ProjectTemplates</ProjectTemplatesDest>
            <ItemTemplatesDest>$(Deployment)\templates\AWSToolkitPackage.Templates\ProjectTemplates</ItemTemplatesDest>
        </PropertyGroup>
        
		<MakeDir Directories="$(ProjectTemplatesDest)" />
        <ItemGroup>
            <ProjectTemplates Include="..\shells\AWSToolkitPackage\bin\$(Configuration)\ProjectTemplates\**" />
        </ItemGroup>
        <Copy
            SourceFiles="@(ProjectTemplates)"
            DestinationFolder="$(ProjectTemplatesDest)" />
		
		<MakeDir Directories="$(ItemTemplatesDest)" />
        <ItemGroup>
            <ItemTemplates Include="..\shells\AWSToolkitPackage\bin\$(Configuration)\ItemTemplates\**" />
        </ItemGroup>
        <Copy
            SourceFiles="@(ItemTemplates)"
            DestinationFolder="$(ItemTemplatesDest)" />

    </Target>

    <Target Name="copy-icons">
		<Message Text="Consolidating icons to deployment folder"/>

        <PropertyGroup>
            <IconsDest>$(Deployment)\icons</IconsDest>
        </PropertyGroup>

		<MakeDir Directories="$(IconsDest)" />
		
		<Copy
			SourceFiles="..\shells\AWSToolkitPackage\Templates\Projects\CloudFormationTemplateProject\CloudFormationTemplateProject.ico"
			DestinationFiles="$(IconsDest)\AWSCloudFormationProject.ico" />
		<Copy
			SourceFiles="..\shells\AWSToolkitPackage\Templates\Items\Template\__TemplateIcon.ico"
			DestinationFiles="$(IconsDest)\AWSCloudFormationTemplate.ico" />
    </Target>
    
    <Target Name="copy-shellartifacts">
		<Message Text="Consolidating shell artifacts to deployment folder"/>

        <MakeDir Directories="$(Deployment)\AWSToolkitPackage" />
        <ItemGroup>
            <AWSToolkitPackageFiles 
                Include="..\shells\AWSToolkitPackage\bin\$(Configuration)\AWSToolkitPackage.*" />
        </ItemGroup>
        <Copy
            SourceFiles="@(AWSToolkitPackageFiles)"
            DestinationFolder="$(Deployment)\AWSToolkitPackage" />

        <MakeDir Directories="$(Deployment)\AWSToolkit.VisualStudio.Shared" />
        <ItemGroup>
            <AWSToolkitSharedFiles 
                Include="..\shells\AWSToolkit.VisualStudio.Shared\bin_vs2010\$(Configuration)\AWSToolkitPackage.Shared.*" />
        </ItemGroup>
        <Copy
            SourceFiles="@(AWSToolkitSharedFiles)"
            DestinationFolder="$(Deployment)\AWSToolkit.VisualStudio.Shared" />

        <MakeDir Directories="$(Deployment)\AWSToolkit.Studio" />
        <ItemGroup>
            <AWSToolkitStudioFiles 
                Include="..\shells\AWSToolkit.Studio\bin\$(Configuration)\**;..\shells\AWSToolkit.Studio\App.config" />
        </ItemGroup>
        <Copy
            SourceFiles="@(AWSToolkitStudioFiles)"
            DestinationFolder="$(Deployment)\AWSToolkit.Studio" />

    </Target>
    
	<Target Name="update-version" DependsOnTargets="build-tools">		
		<UpdateAWSDeployVersionTask
			RepositoryRoot="$(MSBuildProjectDirectory)\.."
            AssemblyInfoPaths="awsdeploy\host"
			VersionNumber="$(AWSDeployVersionNumber)"
			WaitForDebugger="false"
			/>

		<UpdateVSToolkitVersionTask
			RepositoryRoot="$(MSBuildProjectDirectory)\.."
			VersionNumber="$(AWSToolkitVersionNumber)"
			WaitForDebugger="false"
			/>
	</Target>

	<Target Name="save-build"  DependsOnTargets="build-tools">		
		<SaveBuildArtifactTask
			RepositoryRoot="$(MSBuildProjectDirectory)\.."
			BuildArtifactType="toolkit"
			LocalArchiveRootFolder="$(LocalArchiveRootFolder)"
			/>
	</Target>
	
   	<Target Name="get-references">		
		<MSBuild Projects ="$(MSBuildProjectFullPath)" Targets="get-reference-sdk" Properties="TargetRepository=$(MSBuildProjectDirectory)\.."/>
	</Target>

</Project>