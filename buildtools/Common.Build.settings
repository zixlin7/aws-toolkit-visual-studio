<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <BuildRoot Condition="'$(BuildRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), root))</BuildRoot>
  </PropertyGroup>
  
  <PropertyGroup>
    <TargetsPath>$(BuildRoot)\buildtools</TargetsPath>
  </PropertyGroup>
  
  <PropertyGroup>
    <TargetFrameworkVersion Condition="'$(TargetFrameworkVersion)' == ''">v4.6</TargetFrameworkVersion>
  </PropertyGroup>

  <Choose>
	  <When Condition="'$(SolutionName)' == 'AWSDeploymentHostManager'">
      <PropertyGroup>
        <VisualStudioVersion>14.0</VisualStudioVersion>
        <OutputTarget>awsdeploy</OutputTarget>
        <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
        <DevEnvDir>$(VS140COMNTOOLS)..\IDE\</DevEnvDir>
	    	<TargetFrameworkVersion>4.5</TargetFrameworkVersion>
      </PropertyGroup>
  	</When>
    <When Condition="'$(SolutionName)' == 'AWSStudioToolkit'">
        <PropertyGroup>
          <VisualStudioVersion>15.0</VisualStudioVersion>
          <OutputTarget>awsstudio</OutputTarget>
          <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
          <DevEnvDir>$(VS150COMNTOOLS)..\IDE\</DevEnvDir>
        </PropertyGroup>
    </When>
    <When Condition="'$(SolutionName)' == 'AWSVisualStudioToolkit'">
      <PropertyGroup>
        <!-- Visual Studio will provide VisualStudioVersion but if it is missing, fill in the latest version the repo is developed with -->
        <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">16.0</VisualStudioVersion>
        <!-- Maintain separate output folders -->
        <OutputTarget>$(VisualStudioVersion)</OutputTarget>
        <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
        <DevEnvDir Condition="'$(VisualStudioVersion)' == '15.0'">$(VS150COMNTOOLS)..\IDE\</DevEnvDir>
        <DevEnvDir Condition="'$(VisualStudioVersion)' == '16.0'">$(VS160COMNTOOLS)..\IDE\</DevEnvDir>
      </PropertyGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <OutputRoot Condition="'$(OutputRoot)' == '' and '$(OutDir)' != '' and $(OutDir.EndsWith(`\`))">$(OutDir)</OutputRoot>
    <OutputRoot Condition="'$(OutputRoot)' == '' and '$(OutDir)' != '' and !$(OutDir.EndsWith(`\`))">$(OutDir)\</OutputRoot>
    <OutputRoot Condition="'$(OutputRoot)' == '' and '$(OutDir)' == ''">$(BuildRoot)\Deployment\$(OutputTarget)\$(Configuration)\</OutputRoot>

	<!--
    <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == ''">$(MSBuildProjectDirectory)\obj\$(OutputTarget)\$(Configuration)\</IntermediateOutputPath>
	-->
	
    <SuppressCommonAssemblyMetadata Condition="'$(SuppressCommonAssemblyMetadata)' == ''">False</SuppressCommonAssemblyMetadata>

    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors Condition="'$(TreatWarningsAsErrors)' == ''">false</TreatWarningsAsErrors>

    <!-- Suppress warning about multiply defined AssemblyVersionInfo -->
    <NoWarn>436</NoWarn>

    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
  </PropertyGroup>
  
  <PropertyGroup>
    <IntDir>$(IntermediateOutputPath)</IntDir>
  </PropertyGroup>

  <Import Project="$(TargetsPath)\Common.Build.CSharp.settings" Condition="'$(MSBuildProjectExtension)' == '.csproj' or '$(MSBuildProjectExtension)' == '.tmp_proj'" />

</Project>
