<commonUi:BaseAWSUserControl
    x:Class="Amazon.AWSToolkit.Lambda.WizardPages.PageUI.UploadFunctionAdvancedPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:commoncomponents="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Amazon.AWSToolkit.Lambda.WizardPages.PageUI"
    xmlns:localcomponents="clr-namespace:Amazon.AWSToolkit.Lambda.View.Components"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="400"
    d:DesignWidth="600"
    mc:Ignorable="d">

    <commonUi:BaseAWSUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </commonUi:BaseAWSUserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="4,2,4,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label
                Grid.Row="0"
                Grid.ColumnSpan="2"
                Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                Permissions
            </Label>

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="12,4,4,2"
                FontStyle="Italic"
                Style="{DynamicResource awsInfoTextStyle}"
                TextWrapping="Wrap">
                You can provide an IAM role for your code with appropriate permissions. For example, if your code needs to write to S3, the role you provide must have write permissions to S3.
            </TextBlock>

            <Label
                Grid.Row="2"
                Margin="8,4,4,4"
                VerticalAlignment="Center"
                Style="{DynamicResource awsLabelBaseStyle}"
                ToolTip="Provide an IAM role for your code with appropriate permissions. For example, if your code needs to write to S3, the role you provide must have write permissions to S3. If you want Lambda to automatically write your logs to CloudWatch logs and generate CloudWatch metrics for you, make sure the role has permissions to write to CloudWatch logs and CloudWatch metrics.">
                _Role Name:
            </Label>
            <commoncomponents:IAMRolePicker
                Name="_ctlIAMRolePicker"
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,4,2,0"
                ToolTip="Provide an IAM role for your code with appropriate permissions to the AWS services your Lambda function will access."
                Visibility="Visible" />
        </Grid>

        <Grid Grid.Row="1" Margin="4,8,4,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label
                    Grid.Row="0"
                    Margin="0,8,0,0"
                    Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                    Execution
                </Label>

                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="8,0,4,4"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsLabelBaseStyle}"
                    ToolTip="Choose the memory available to your Lambda function. CPU will be assigned proportional to memory. The higher the setting, the more compute resources your code will have, which can improve its execution performance. You can specify memory in 64-MB increments up to 1024 MB. Changing this setting will impact your duration cost.">
                    _Memory (MB):
                </Label>
                <ComboBox
                    Name="_ctlMemory"
                    Grid.Row="1"
                    Grid.Column="1"
                    MinWidth="70"
                    Margin="4,0"
                    HorizontalAlignment="Left"
                    Style="{DynamicResource awsComboBoxStyle}"
                    ToolTip="Choose the memory available to your Lambda function. CPU will be assigned proportional to memory. The higher the setting, the more compute resources your code will have, which can improve its execution performance. You can specify memory in 64-MB increments up to 1024 MB. Changing this setting will impact your duration cost." />

                <Label
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="8,2,4,2"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsLabelBaseStyle}"
                    ToolTip="Choose a duration limit for your Lambda function. Lambda will terminate your Lambda function once it executes up to the duration limit. Changing this setting can potentially help you control duration costs.">
                    _Timeout (Secs):
                </Label>
                <StackPanel
                    Grid.Row="2"
                    Grid.Column="1"
                    Orientation="Horizontal">
                    <TextBox
                        Name="_ctlTimeout"
                        MinWidth="70"
                        Margin="4,2"
                        HorizontalAlignment="Left"
                        PreviewTextInput="PreviewIntTextInput"
                        Style="{DynamicResource awsTextBoxStyle}"
                        ToolTip="Choose a duration limit in seconds for your Lambda function. Lambda will terminate your Lambda function once it executes up to the duration limit. Changing this setting can potentially help you control duration costs." />
                    <TextBlock
                        x:Name="_ctlTimeoutRange"
                        Margin="4,2"
                        FontStyle="Italic"
                        Style="{DynamicResource awsInfoTextStyle}">
                        (min - max)
                    </TextBlock>
                </StackPanel>

                <Label
                    Grid.Row="3"
                    Margin="0,16,0,0"
                    Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                    VPC
                </Label>

                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="8,2,4,2"
                    FontStyle="Italic"
                    Style="{DynamicResource awsInfoTextStyle}"
                    TextWrapping="Wrap">
                    If your function accesses resources in a VPC, select the list
                    of subnets and security group IDs (these must belong to the same VPC).
                </TextBlock>
                <Label
                    Grid.Row="5"
                    Grid.Column="0"
                    Margin="8,2,4,2"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsLabelBaseStyle}">
                    _VPC Subnets:
                </Label>
                <localcomponents:SubnetMultiSelectionControl
                    x:Name="_ctlVpcSubnets"
                    Grid.Row="5"
                    Grid.Column="1"
                    MinWidth="50"
                    Margin="4,2,4,7.5"
                    HorizontalAlignment="Stretch"
                    Cursor="Wait" />

                <Label
                    Grid.Row="6"
                    Grid.Column="0"
                    Margin="8,2,4,2"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsLabelBaseStyle}">
                    Security _Groups:
                </Label>

                <localcomponents:SecurityGroupMultiSelectionControl
                    x:Name="_ctlSecurityGroups"
                    Grid.Row="6"
                    Grid.Column="1"
                    MinWidth="50"
                    Margin="4,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center" />
            </Grid>

            <Border
                Grid.Column="1"
                Margin="2,8,2,2"
                BorderBrush="{DynamicResource awsPanelBorderBrushKey}"
                BorderThickness="1" />

            <Grid Grid.Column="2">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    Margin="0,8,0,0"
                    Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                    Environment
                </Label>

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="8,0,4,2"
                    FontStyle="Italic"
                    Style="{DynamicResource awsInfoTextStyle}"
                    TextWrapping="Wrap">
                    You can set environment variables to be available to your function during execution, and
                    also specify an Amazon KMS key to protect the contents of those variables at rest.
                </TextBlock>

                <Label
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="4,4,4,2"
                    Style="{DynamicResource awsLabelBaseStyle}">
                    _KMS Key:
                </Label>

                <localcomponents:KMSKeySelectorControl
                    x:Name="_ctlKMSKey"
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="4,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center" />

                <commonUi:ToolkitDataGridWrapper
                    x:Name="_ctlEnvironmentVariables"
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="6,2,4,0"
                    HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserSortColumns="False"
                    CellEditEnding="_ctlEnvironmentVariables_CellEditEnding"
                    FrozenColumnCount="1"
                    HeadersVisibility="All"
                    HorizontalScrollBarVisibility="Hidden"
                    ItemsSource="{Binding EnvironmentVariables}">

                    <commonUi:ToolkitDataGridWrapper.Columns>
                        <DataGridTextColumn
                            Width="180"
                            Binding="{Binding Variable, Mode=TwoWay}"
                            Header="Variable">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" />
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Value, Mode=TwoWay}"
                            Header="Value">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" />
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Width="20" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Button x:Name="_removeVariable" Click="RemoveVariable_Click">
                                            <Image
                                                Width="16"
                                                Height="16"
                                                DataContext="{DynamicResource CommonIcons}"
                                                Source="{Binding RemoveIcon}" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </commonUi:ToolkitDataGridWrapper.Columns>

                </commonUi:ToolkitDataGridWrapper>

                <Button
                    Grid.Row="4"
                    Grid.Column="1"
                    Margin="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Click="AddVariable_Click">
                    _Add...
                </Button>

            </Grid>
        </Grid>
    </Grid>
</commonUi:BaseAWSUserControl>
