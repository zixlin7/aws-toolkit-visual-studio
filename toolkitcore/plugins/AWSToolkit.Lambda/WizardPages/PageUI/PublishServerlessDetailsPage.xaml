<commonUi:BaseAWSUserControl
    x:Class="Amazon.AWSToolkit.Lambda.WizardPages.PageUI.PublishServerlessDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:commoncomponents="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Amazon.AWSToolkit.Lambda.WizardPages.PageUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
    d:DesignHeight="400"
    d:DesignWidth="600"
    mc:Ignorable="d">

    <commonUi:BaseAWSUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:HasValueVisibilityConverter x:Key="HasValueVisibilityConverter" />
            <commonUi:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <commonUi:VsImages x:Key="VsImages" />
            <commonUi:ToolkitImages x:Key="ToolkitImages" />
        </ResourceDictionary>
    </commonUi:BaseAWSUserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--  a/c picker  -->
            <RowDefinition Height="Auto" />
            <!--  runtime selector  -->
            <RowDefinition Height="Auto" />
            <!--  function source  -->
            <RowDefinition Height="Auto" />
            <!--  function details, switchable  -->
            <RowDefinition Height="Auto" />
            <!--  open view on upload  -->
        </Grid.RowDefinitions>

        <Grid x:Name="_ctlAccountPanel" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Label
                Grid.Row="0"
                Margin="0"
                Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                Profile
            </Label>

            <commoncomponents:AccountAndRegionPicker
                Grid.Row="1"
                Margin="10,2,4,2"
                DataContext="{Binding ViewModel.Connection}"
                ConnectionChanged="ConnectionChanged" />

        </Grid>


        <Grid x:Name="_serverlessPublishingPanel" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label
                Grid.Row="0"
                Margin="0"
                Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
                CloudFormation Settings
            </Label>

            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Visibility="Visible">

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>


                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="10,0,4,2"
                    VerticalAlignment="Bottom"
                    Style="{DynamicResource awsLabelBaseStyle}">
                    _Stack Name:
                </Label>

                <ComboBox
                    Name="_ctlStackPicker"
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="16,2,4,2"
                    IsEnabled="{Binding ViewModel.Loading, Converter={StaticResource InverseBooleanConverter}}"
                    IsEditable="True"
                    ItemsSource="{Binding ViewModel.Stacks}">
                    <ComboBox.Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource awsComboBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ViewModel.Loading}" Value="True">
                                    <Setter Property="Text" Value="Loading..." />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ViewModel.Loading}" Value="False">
                                    <Setter Property="Text"
                                            Value="{Binding ViewModel.Stack, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>


                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="10,2,4,2"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsLabelBaseStyle}">
                    S3 _Bucket:
                </Label>

                <ComboBox
                    Name="_ctlBucketPicker"
                    x:FieldModifier="private"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="16,2,4,2"
                    Visibility="{Binding ElementName=_loadingIndicator, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                    ItemsSource="{Binding ViewModel.Buckets}"
                    IsEnabled="{Binding ViewModel.Loading, Converter={StaticResource InverseBooleanConverter}}"
                    SelectedItem="{Binding ViewModel.S3Bucket, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Style="{DynamicResource awsComboBoxStyle}" />

                <!--The loading combobox has been intentionally added as a workaround. Having a loading trigger similar to stackPicker caused the previously 
                selected bucket to be cleared out and set to null. That in turn messed up the error validation against the bucket picker.
                Keeping the loading operation separate from the bucket selection provided an easier path forward-->

                <ComboBox
                    Name="_loadingIndicator"
                    x:FieldModifier="private"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="16,2,4,2"
                    IsEditable="True"
                    IsEnabled="{Binding ViewModel.Loading, Converter={StaticResource InverseBooleanConverter}}"
                    ItemsSource="{Binding ViewModel.Buckets}"
                    Visibility="{Binding ViewModel.Loading, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource awsComboBoxStyle}"
                    Text="Loading..." />

                <Button
                    Name="_ctlNewBucket"
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="5,0,5,0"
                    Padding="5,2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Command="{Binding ViewModel.CreateBucketCommand}">
                    <Button.Content>
                        <WrapPanel>
                            <Image
                                Width="16"
                                Height="16"
                                Source="{Binding Source={StaticResource ToolkitImages}, Path=SimpleStorageService}" />
                            <TextBlock Margin="5,0,0,0">New...</TextBlock>
                        </WrapPanel>
                    </Button.Content>
                </Button>

                <!--Indicates the validation error associated with the bucket selection combobox-->
                <TextBlock
                    Margin="16,2,4,2"
                    TextWrapping="Wrap"
                    Grid.Row="2"
                    Grid.Column="1"
                    Visibility="{Binding ElementName=_ctlBucketPicker, Path=(Validation.Errors)[0].ErrorContent, Converter={StaticResource HasValueVisibilityConverter}}"
                    Foreground="{DynamicResource {x:Static themes:ToolkitThemes.ErrorBorderBrushKey}}"
                    Text="{Binding ElementName=_ctlBucketPicker, 
                       Path=(Validation.Errors)[0].ErrorContent}" />

            </Grid>
        </Grid>

        <Grid x:Name="_ctlPersistPanel" Grid.Row="3">
            <CheckBox
                Name="_ctlPersistSettings"
                Margin="18,10,4,4"
                IsChecked="{Binding ViewModel.SaveSettings}"
                Style="{DynamicResource awsCheckboxButtonBaseStyle}">
                Save settings to aws-lambda-tools-defaults.json for future deployments.
            </CheckBox>
        </Grid>

    </Grid>
</commonUi:BaseAWSUserControl>
