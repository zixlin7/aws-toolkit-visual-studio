<commonUi:BaseAWSUserControl
    x:Class="Amazon.AWSToolkit.Lambda.WizardPages.PageUI.UploadFunctionDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:commoncomponents="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Amazon.AWSToolkit.Lambda.WizardPages.PageUI"
    xmlns:wizardControls="clr-namespace:Amazon.AWSToolkit.Lambda.WizardPages.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:util="clr-namespace:Amazon.AWSToolkit.Lambda.Util"
    xmlns:model="clr-namespace:Amazon.AWSToolkit.Lambda.Model"
    xmlns:vm="clr-namespace:Amazon.AWSToolkit.Lambda.ViewModel"
    xmlns:lambda="clr-namespace:Amazon.Lambda;assembly=AWSSDK.Lambda"
    xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
    d:DesignHeight="600"
    d:DesignWidth="600"
    mc:Ignorable="d">

    <commonUi:BaseAWSUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <commonUi:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <util:PackageTypeToVisibilityConverter x:Key="PackageTypeToVisibilityConverter" />
            <util:ArchitectureToBoolConverter x:Key="ArchitectureToBoolConverter" />
            <DataTemplate x:Key="LambdaArchitecture" DataType="model:LambdaArchitecture">
                <Label 
                    Style="{DynamicResource awsLabelBaseStyle}"
                    Content="{Binding DisplayName}" />
            </DataTemplate>
        </ResourceDictionary>
    </commonUi:BaseAWSUserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="9">

        <StackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True">

            <!--  account and region panel  -->
            <!-- TODO : Take picker control out of grid (grid serves no purpose) -->
            <Grid
                x:Name="_ctlAccountPanel">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <commoncomponents:AccountAndRegionPicker
                    Grid.Row="0"
                    Margin="0 0 0 9"
                    DataContext="{Binding ViewModel.Connection}"
                    ConnectionChanged="AccountAndRegion_ConnectionChanged"
                    />

            </Grid>

            <!-- Grid contains Package Type and Lambda Runtime controls -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LeftControlLabel" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LeftControlDecoration" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="RightControlLabel" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="RightControlDecoration" />
                </Grid.ColumnDefinitions>

                <!-- Package Type (eg: Zip or Image) -->
                <Label
                    Grid.Row="0" Grid.Column="0"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsWizardFieldLabelStyle}"
                    Content="_Package Type:"
                    Target="{Binding ElementName=PackageType}"
                    ToolTip="{Binding ViewModel.PackageTypeTooltip}" />

                <ComboBox
                    Name="PackageType" x:FieldModifier="private"
                    Grid.Row="0" Grid.Column="1"
                    Margin="9 0 0 0"
                    DisplayMemberPath="Value"
                    IsEditable="False"
                    IsEnabled="{Binding ViewModel.CanEditPackageType}"
                    ItemsSource="{Binding ViewModel.PackageTypes}"
                    SelectedItem="{Binding ViewModel.PackageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource awsComboBoxStyle}"
                    ToolTip="{Binding ViewModel.PackageTypeTooltip}" />

                <!-- Runtime -->
                <Label
                    Grid.Row="1" Grid.Column="0"
                    Margin="0 9 0 0"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsWizardFieldLabelStyle}"
                    IsEnabled="{Binding ViewModel.CanEditRuntime}"
                    Content="Lambda _Runtime:"
                    Target="{Binding ElementName=Runtime}" />

                <!-- 
                    The cell to the right of the "Runtime" label is
                    either a dropdown to select a runtime (for ZIP Package type), 
                    or a label explaining that runtime is not applicable (for Image Package type)
                -->
                <Label
                    Grid.Row="1" Grid.Column="1"
                    Margin="9 9 0 0"
                    Style="{DynamicResource awsWizardFieldLabelStyle}"
                    IsEnabled="{Binding ViewModel.CanEditRuntime}"
                    Visibility="{Binding ViewModel.CanEditRuntime, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                    Content="Not Applicable to Image based Functions" />
                <ComboBox
                    Name="Runtime" x:FieldModifier="private"
                    Grid.Row="1" Grid.Column="1"
                    Margin="9 9 0 0"
                    DisplayMemberPath="DisplayName"
                    IsEnabled="{Binding ViewModel.CanEditRuntime}"
                    Visibility="{Binding ViewModel.CanEditRuntime, Converter={StaticResource BooleanToVisibilityConverter}}"
                    IsEditable="False"
                    ItemsSource="{Binding ViewModel.Runtimes}"
                    SelectedItem="{Binding ViewModel.Runtime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource awsComboBoxStyle}" />

                <!-- Architecture -->
                <Label
                    Grid.Row="2" Grid.Column="0"
                    Margin="0 9 0 0"
                    VerticalAlignment="Center"
                    Style="{DynamicResource awsWizardFieldLabelStyle}"
                    Content="Architecture:"
                    Target="{Binding ElementName=Architecture}" />

                <StackPanel
                    Grid.Row="2" Grid.Column="1"
                    Margin="9,9,0,0"
                    Orientation="Horizontal">

                    <RadioButton
                        GroupName="LambdaArchitecture"
                        Style="{DynamicResource awsRadioButtonBaseStyle}"
                        ContentTemplate="{StaticResource LambdaArchitecture}"
                        IsChecked="{Binding ViewModel.Architecture, Mode=TwoWay, Converter={StaticResource ArchitectureToBoolConverter}, ConverterParameter={x:Static model:LambdaArchitecture.X86}}"
                        Content="{x:Static model:LambdaArchitecture.X86}"
                        />
                    <RadioButton
                        Margin="12 0 0 0"
                        GroupName="LambdaArchitecture"
                        Style="{DynamicResource awsRadioButtonBaseStyle}"
                        ContentTemplate="{StaticResource LambdaArchitecture}"
                        IsChecked="{Binding ViewModel.Architecture, Mode=TwoWay, Converter={StaticResource ArchitectureToBoolConverter}, ConverterParameter={x:Static model:LambdaArchitecture.Arm}}"
                        IsEnabled="{Binding ViewModel.SupportsArmArchitecture}"
                        Content="{x:Static model:LambdaArchitecture.Arm}"
                        />
                </StackPanel>
            </Grid>

            <!-- ZIP based Upload settings; Visibility is mutually exclusive with IMAGE settings -->
            <wizardControls:UploadZipFunctionControl
                Margin="0 12 0 0"
                DataContext="{Binding ViewModel}"
                Visibility="{Binding PackageType, Converter={StaticResource PackageTypeToVisibilityConverter}, ConverterParameter={x:Static lambda:PackageType.Zip}}" />

            <!-- IMAGE based Upload settings; Visibility is mutually exclusive with ZIP settings -->
            <wizardControls:UploadImageFunctionControl
                Margin="0 12 0 0"
                DataContext="{Binding ViewModel}"
                Visibility="{Binding PackageType, Converter={StaticResource PackageTypeToVisibilityConverter}, ConverterParameter={x:Static lambda:PackageType.Image}}" />

            <CheckBox
                Margin="0 12 0 0"
                Style="{DynamicResource awsCheckboxButtonBaseStyle}"
                Visibility="{Binding ViewModel.ShowSaveSettings, Converter={StaticResource BooleanToVisibilityConverter}}"
                IsChecked="{Binding ViewModel.SaveSettings}">
                _Save settings to aws-lambda-tools-defaults.json for future deployments.
            </CheckBox>

        </StackPanel>

    </ScrollViewer>
</commonUi:BaseAWSUserControl>
