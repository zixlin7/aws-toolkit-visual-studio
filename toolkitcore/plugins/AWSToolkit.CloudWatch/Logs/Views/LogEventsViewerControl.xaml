<commonUi:BaseAWSControl x:Class="Amazon.AWSToolkit.CloudWatch.Logs.Views.LogEventsViewerControl"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:local="clr-namespace:Amazon.AWSToolkit.CloudWatch.Logs.Views"
                         xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
                         xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
                         xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
                         xmlns:images="clr-namespace:Amazon.AWSToolkit.CommonUI.Images;assembly=AWSToolkit"
                         xmlns:dateRangePicker="clr-namespace:Amazon.AWSToolkit.CommonUI.DateTimeRangePicker;assembly=AWSToolkit"
                         xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                         xmlns:models="clr-namespace:Amazon.AWSToolkit.CloudWatch.Logs.Models"
                         xmlns:viewModels="clr-namespace:Amazon.AWSToolkit.CloudWatch.Logs.ViewModels"
                         themes:ToolkitThemes.UseToolkitTheme="True"
                         mc:Ignorable="d"
                         d:DesignHeight="450" d:DesignWidth="800">
    <commonUi:BaseAWSControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <commonUi:VsImages x:Key="VsImages" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:HasItemsVisibilityConverter x:Key="HasItemsVisibilityConverter" />
            <converters:InverseVisibilityConverter x:Key="InverseVisibilityConverter" />
            <converters:HasValueVisibilityConverter x:Key="HasValueVisibilityConverter" />

            <Style x:Key="TimeColumnStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="6" />
            </Style>
            <Style x:Key="MessageColumnStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="6" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                        Value="True">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding DataContext.IsWrapped, 
                                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type commonUi:ToolkitDataGridWrapper}}}"
                        Value="True">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="EventTimeHeaderTemplate">
                <StackPanel Orientation="Vertical">
                    <TextBlock
                        Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}" />
                    <TextBlock
                        Text="{Binding Source={x:Static local:LogEventsViewerControl.TimeZone}, StringFormat={}({0})}" />
                </StackPanel>
            </DataTemplate>

            <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  >
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipTextBrushKey}}" />
            </Style>
        </ResourceDictionary>

    </commonUi:BaseAWSControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>


        <TextBox
            Grid.Row="0"
            HorizontalContentAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            IsReadOnly="True"
            Padding="6 8 6 0"
            FontSize="11"
            Text="{Binding LogGroup, StringFormat=Log Group: {0}}"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                Grid.Column="0"
                HorizontalContentAlignment="Left"
                Background="Transparent"
                BorderThickness="0"
                IsReadOnly="True"
                Padding="6 8 6 8"
                Text="{Binding LogStream, StringFormat=Log Stream: {0}}"/>


            <Grid x:Name="LoadingIndicator"
                  x:FieldModifier="private"
                  Grid.Column="1"
                  Margin="5"
                  HorizontalAlignment="Right"
                  Visibility="{Binding LoadingLogs, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <images:VsImage Grid.Row="0" Grid.Column="0"
                                Height="16"
                                Width="16"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Source="{Binding Source={StaticResource VsImages}, Path=Loading}"/>
                <TextBlock
                    Grid.Column="1"
                    Margin="6 0 0 0"
                    HorizontalAlignment="Right"
                    Text="Loading..."
                    themes:ToolkitThemes.UseToolkitTheme="True"
                    FontWeight="SemiBold"
                    Foreground="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}"/>
            </Grid>

            <TextBlock
                Grid.Column="1"
                Margin="5"
                HorizontalAlignment="Right"
                Text="{Binding LogEvents.Count, StringFormat=Events fetched: {0}}"
                Visibility="{Binding Visibility, ElementName=LoadingIndicator, Converter={StaticResource InverseVisibilityConverter}}"/>
        </Grid>

        <!--Search bar and the actions toolbar-->
        <DockPanel Grid.Row="2" LastChildFill="True">
           
            <TextBlock DockPanel.Dock="Top" 
                       Margin="9 0 6 6" 
                       TextWrapping="WrapWithOverflow"
                       Foreground="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}">
                <Run Text="Case-sensitive search for terms in your log events. Enclose exact phrases in double quotation marks (&quot;&quot;)."/>
                <commonUi:BrowserHyperLink
                    NavigateUri="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html#matching-terms-events">
                    <Run Text="Learn more about filter patterns." />
                </commonUi:BrowserHyperLink>
            </TextBlock>
            
            <ToolBar DockPanel.Dock="Right"
                     ToolBarTray.IsLocked="True"
                     OverflowMode="Never"
                     themes:ToolkitThemes.UseToolkitTheme="True"
                     Background="{DynamicResource {x:Static themes:ToolkitThemes.ToolBarBackgroundBrushKey}}">

                <Button Margin="3"
                        ToolTip="Refresh"
                        Command="{Binding RefreshCommand}">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=Refresh}" />
                </Button>
                <ToggleButton Margin="3"
                              ToolTip="Wrap events"
                              IsChecked="{Binding IsWrapped, Mode=TwoWay}">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=WordWrap32}" />
                </ToggleButton>
                <ToggleButton Margin="3"
                              x:Name="FilterByTimeButton"
                              x:FieldModifier="private"
                              ToolTip="Filter events by time"
                              IsChecked="{Binding IsTimeFilterEnabled}">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=Calendar}" />
                    </ToggleButton>
            </ToolBar>
            <local:SearchBar DockPanel.Dock="Left" 
                             FilterText="{Binding FilterText}"
                             HintText="{Binding Source={x:Static local:LogEventsViewerControl.DefaultHintText}}"/>
            
        </DockPanel>

        <dateRangePicker:DateTimeRangePicker Grid.Row="3"
                                         DataContext="{Binding DateTimeRange}"
                                         Visibility="{Binding ElementName=FilterByTimeButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <!-- Indicates status of results eg. no results found, error message -->
        <local:ResultsStatus Grid.Row="4"
                             Margin="11"
                             ErrorMessage="{Binding ErrorMessage}"
                             LoadingLogs="{Binding LoadingLogs}"
                           >
            <local:ResultsStatus.Style>
                <Style TargetType="{x:Type local:ResultsStatus}">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Visibility, ElementName=LogEventsList}" Value="Collapsed"/>
                                <Condition Binding="{Binding PaginatedLoadingStatus}" Value="{x:Static models:PaginatedLoadingStatus.None}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </local:ResultsStatus.Style>
        </local:ResultsStatus>


        <!--Shows query status for retrieving time consuming filtered events -->

        <ContentControl Grid.Row="5" 
                        Margin="9 6 6 6" 
                        Content="{Binding}">
            <ContentControl.Resources>
                <DataTemplate x:Key="Loading">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" 
                                   Text="Loading..." />
                        <ProgressBar Grid.Column="1"
                                     Height="8" 
                                     Margin="3"
                                     VerticalAlignment="Center"
                                     IsIndeterminate="True"/>
                        <Button Grid.Column="2" 
                                Margin="3 0 0 0" 
                                Width="Auto" 
                                Content="&#x2715;"
                                Style="{StaticResource CancelButtonStyle}"
                                Command="{Binding CancelLoadingCommand}" />
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Prompt">
                    <TextBlock>
                        <Run Text="The log stream contains more entries to load. This may take a while."/>
                        <Hyperlink Command="{Binding ContinueLoadingCommand}">Continue loading logs</Hyperlink>
                    </TextBlock>
                </DataTemplate>
                <DataTemplate x:Key="Retry">
                    <TextBlock>
                        <Run Text="Unable to load log events for this log stream."/>
                        <Hyperlink Command="{Binding ContinueLoadingCommand}">Retry</Hyperlink>
                    </TextBlock>
                </DataTemplate>
            </ContentControl.Resources>
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding PaginatedLoadingStatus}" Value="{x:Static models:PaginatedLoadingStatus.Prompt}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Prompt}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PaginatedLoadingStatus}" Value="{x:Static models:PaginatedLoadingStatus.Loading}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Loading}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PaginatedLoadingStatus}" Value="{x:Static models:PaginatedLoadingStatus.Retry}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Retry}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PaginatedLoadingStatus}" Value="{x:Static models:PaginatedLoadingStatus.None}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <commonUi:ToolkitDataGridWrapper Grid.Row="6"
                                         x:Name="LogEventsList"
                                         x:FieldModifier="private"
                                         AutoGenerateColumns="False"
                                         CanUserAddRows="False" CanUserDeleteRows="False"
                                         CanUserSortColumns="False"
                                         ItemsSource="{Binding LogEventsView, NotifyOnTargetUpdated=True}"
                                         SelectedItem="{Binding LogEvent}"
                                         ScrollViewer.ScrollChanged="ScrollViewer_OnScrollChanged"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                                         EnableRowVirtualization="True"
                                         VirtualizingStackPanel.VirtualizationMode="Standard"
                                         themes:ToolkitThemes.UseToolkitTheme="True"
                                         GridLinesVisibility="None"
                                         SelectionMode="Extended"
                                         IsReadOnly="True"
                                         HeadersVisibility="Column">
            <commonUi:ToolkitDataGridWrapper.Columns>
                <DataGridTextColumn Header="Timestamp"
                                    Binding="{Binding Path=Timestamp, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"
                                    FontFamily="Consolas"
                                    HeaderTemplate="{StaticResource EventTimeHeaderTemplate}"
                                    ElementStyle="{StaticResource TimeColumnStyle}">
                </DataGridTextColumn>

                <DataGridTextColumn Header="Message"
                                    Binding="{Binding Path=Message}"
                                    Width="*"
                                    FontFamily="Consolas"
                                    ElementStyle="{StaticResource MessageColumnStyle}">
                </DataGridTextColumn>

            </commonUi:ToolkitDataGridWrapper.Columns>
            <commonUi:ToolkitDataGridWrapper.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="Copy">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16"
                                   Source="{Binding Source={StaticResource VsImages}, Path=Copy}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </commonUi:ToolkitDataGridWrapper.ContextMenu>
            <commonUi:ToolkitDataGridWrapper.Style>
                <!-- Do not show the DataGrid when there are no matching results or if an error occurred -->
                <Style TargetType="{x:Type commonUi:ToolkitDataGridWrapper}">
                    <Setter Property="Visibility"
                            Value="{Binding LogEvents, Converter={StaticResource HasItemsVisibilityConverter}}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ErrorMessage, Converter={StaticResource HasValueVisibilityConverter}}"
                            Value="Visible">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </commonUi:ToolkitDataGridWrapper.Style>
        </commonUi:ToolkitDataGridWrapper>

        <local:ConnectionStatus Grid.Row="7" 
                                ConnectionSettings="{Binding ConnectionSettings}"
                                FeedbackSource="{Binding Source={x:Static viewModels:BaseLogsViewModel.FeedbackSource}}"
                                FeedbackCommand="{Binding FeedbackCommand}"/>
    </Grid>
</commonUi:BaseAWSControl>
