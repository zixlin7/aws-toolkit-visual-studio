<commonUi:BaseAWSControl x:Class="Amazon.AWSToolkit.CloudWatch.Views.LogEventsViewerControl"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:local="clr-namespace:Amazon.AWSToolkit.CloudWatch.Views"
                         xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
                         xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
                         xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
                         xmlns:images="clr-namespace:Amazon.AWSToolkit.CommonUI.Images;assembly=AWSToolkit"
                         xmlns:dateRangePicker="clr-namespace:Amazon.AWSToolkit.CommonUI.DateTimeRangePicker;assembly=AWSToolkit"
                         themes:ToolkitThemes.UseToolkitTheme="True"
                         mc:Ignorable="d"
                         d:DesignHeight="450" d:DesignWidth="800">
    <commonUi:BaseAWSControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <commonUi:VsImages x:Key="VsImages" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:HasItemsVisibilityConverter x:Key="HasItemsVisibilityConverter" />
            <converters:InverseVisibilityConverter x:Key="InverseVisibilityConverter" />
            <converters:HasValueVisibilityConverter x:Key="HasValueVisibilityConverter" />

            <Style x:Key="TimeColumnStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="6" />
            </Style>
            <Style x:Key="MessageColumnStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="6" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                        Value="True">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding DataContext.IsWrapped, 
                                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type commonUi:ToolkitDataGridWrapper}}}"
                        Value="True">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="EventTimeHeaderTemplate">
                <StackPanel Orientation="Vertical">
                    <TextBlock
                        Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}" />
                    <TextBlock
                        Text="{Binding Source={x:Static local:LogEventsViewerControl.TimeZone}, StringFormat={}({0})}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>

    </commonUi:BaseAWSControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                Grid.Column="0"
                HorizontalContentAlignment="Left"
                Background="Transparent"
                BorderThickness="0"
                IsReadOnly="True"
                Text="{Binding LogStream, StringFormat=Log Stream: {0}}"/>


            <local:ResultsStatus x:Name="LoadingIndicator"
                                 x:FieldModifier="private"
                                 Grid.Column="1"
                                 Margin="5"
                                 HorizontalAlignment="Right" 
                                 ErrorMessage="{Binding ErrorMessage}"
                                 LoadingLogs="{Binding LoadingLogs}"
                                 Visibility="{Binding LoadingLogs, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBlock
                Grid.Column="1"
                Margin="5"
                HorizontalAlignment="Right"
                Text="{Binding LogEvents.Count, StringFormat=Events fetched: {0}}"
                Visibility="{Binding Visibility, ElementName=LoadingIndicator, Converter={StaticResource InverseVisibilityConverter}}"/>
        </Grid>

        <!--Search bar and the actions toolbar-->
        <DockPanel Grid.Row="1" LastChildFill="True">
           
            <TextBlock DockPanel.Dock="Top" 
                       Margin="9 6 6 6"
                       Foreground="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}">
                <Run Text="Search for and match terms, phrases, or values in your log events."/>
                <commonUi:BrowserHyperLink 
                    NavigateUri="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html#matching-terms-events">
                    <Run Text="Learn more about filter patterns." />
                </commonUi:BrowserHyperLink>
            </TextBlock>
            
            <ToolBar DockPanel.Dock="Right"
                     ToolBarTray.IsLocked="True"
                     OverflowMode="Never"
                     themes:ToolkitThemes.UseToolkitTheme="True"
                     Background="{StaticResource {x:Static themes:ToolkitThemes.ToolBarBackgroundBrushKey}}">

                <Button Margin="3"
                        ToolTip="Refresh"
                        Command="{Binding RefreshCommand}">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=Refresh}" />
                </Button>
                <ToggleButton Margin="3"
                              ToolTip="Wrap events"
                              IsChecked="{Binding IsWrapped, Mode=TwoWay}">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=WordWrap}" />
                </ToggleButton>
                <ToggleButton Margin="3"
                              x:Name="FilterByTimeButton"
                              x:FieldModifier="private"
                              ToolTip="Filter events by time">
                    <images:VsImage
                        Width="16"
                        Height="16"
                        Source="{Binding Source={StaticResource VsImages}, Path=Calendar}" />
                </ToggleButton>
            </ToolBar>
            <local:SearchBar DockPanel.Dock="Left" 
                             FilterText="{Binding FilterText}"
                             HintText="{Binding Source={x:Static local:LogEventsViewerControl.DefaultHintText}}"/>
            
        </DockPanel>

        <dateRangePicker:DateTimeRangePicker Grid.Row="2"
                                         DataContext="{Binding DateTimeRange}"
                                         Visibility="{Binding ElementName=FilterByTimeButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <!-- Indicates status of results eg. no results found, error message -->
        <local:ResultsStatus Grid.Row="3"
                             Margin="11"
                             ErrorMessage="{Binding ErrorMessage}"
                             LoadingLogs="{Binding LoadingLogs}"
                             Visibility="{Binding Visibility, ElementName=LogEventsList, Converter={StaticResource InverseVisibilityConverter}}" />


        <commonUi:ToolkitDataGridWrapper Grid.Row="4"
                                         x:Name="LogEventsList"
                                         x:FieldModifier="private"
                                         AutoGenerateColumns="False"
                                         CanUserAddRows="False" CanUserDeleteRows="False"
                                         CanUserSortColumns="False"
                                         ItemsSource="{Binding LogEventsView, NotifyOnTargetUpdated=True}"
                                         SelectedItem="{Binding LogEvent}"
                                         ScrollViewer.ScrollChanged="ScrollViewer_OnScrollChanged"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                                         themes:ToolkitThemes.UseToolkitTheme="True"
                                         GridLinesVisibility="None"
                                         SelectionMode="Single"
                                         IsReadOnly="True"
                                         HeadersVisibility="Column">
            <commonUi:ToolkitDataGridWrapper.Columns>
                <DataGridTextColumn Header="Timestamp"
                                    Binding="{Binding Path=Timestamp}"
                                    Width="Auto"
                                    FontFamily="Consolas"
                                    HeaderTemplate="{StaticResource EventTimeHeaderTemplate}"
                                    ElementStyle="{StaticResource TimeColumnStyle}">
                </DataGridTextColumn>

                <DataGridTextColumn Header="Message"
                                    Binding="{Binding Path=Message}"
                                    Width="*"
                                    FontFamily="Consolas"
                                    ElementStyle="{StaticResource MessageColumnStyle}">
                </DataGridTextColumn>

            </commonUi:ToolkitDataGridWrapper.Columns>
            <commonUi:ToolkitDataGridWrapper.Style>
                <!-- Do not show the DataGrid when there are no matching results or if an error occurred -->
                <Style TargetType="{x:Type commonUi:ToolkitDataGridWrapper}">
                    <Setter Property="Visibility"
                            Value="{Binding LogEvents, Converter={StaticResource HasItemsVisibilityConverter}}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ErrorMessage, Converter={StaticResource HasValueVisibilityConverter}}"
                            Value="Visible">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </commonUi:ToolkitDataGridWrapper.Style>
        </commonUi:ToolkitDataGridWrapper>

        <local:ConnectionStatus Grid.Row="5" ConnectionSettings="{Binding ConnectionSettings}" />
    </Grid>
</commonUi:BaseAWSControl>
