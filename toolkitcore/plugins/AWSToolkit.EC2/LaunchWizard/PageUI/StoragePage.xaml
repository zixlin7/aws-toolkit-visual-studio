<commonui:BaseAWSUserControl
    x:Class="Amazon.AWSToolkit.EC2.LaunchWizard.PageUI.StoragePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonui="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:designData="clr-namespace:Amazon.AWSToolkit.EC2.View.DesignData"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkitThemes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    d:DataContext="{d:DesignInstance designData:StorageDesignTimeData,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">

    <commonui:BaseAWSUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/DefaultTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="StorageFieldPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="0,0,4,0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style
                x:Key="StorageFieldLabel"
                BasedOn="{StaticResource awsSubHeaderLabelStyle}"
                TargetType="{x:Type Label}">
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Foreground" Value="{DynamicResource awsWindowTextBrushKey}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style
                x:Key="StorageTextField"
                BasedOn="{StaticResource awsTextBlockBaseStyle}"
                TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="2,4,2,2" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>

            <Style
                x:Key="StorageTextBoxField"
                BasedOn="{StaticResource awsTextBoxStyle}"
                TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,2,0,0" />
                <Setter Property="Height" Value="22" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>

            <Style
                x:Key="StorageFieldCombo"
                BasedOn="{StaticResource awsComboBoxStyle}"
                TargetType="{x:Type ComboBox}">
                <Setter Property="Margin" Value="0,2,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <!--  gives nicer, more blended, combo boxes with the text fields  -->
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="IsReadOnly" Value="False" />
            </Style>

            <Style x:Key="StorageListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                x:Name="Root"
                                Padding="4"
                                Background="{DynamicResource awsListBoxPanelItemBackgroundBrushKey}"
                                BorderBrush="{DynamicResource awsListBoxPanelItemBackgroundBrushKey}"
                                BorderThickness="2"
                                CornerRadius="4">
                                <ContentPresenter
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource awsListBoxPanelItemHoverBorderBrushKey}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource awsListBoxPanelItemSelectedBorderBrushKey}" />
                                    <Setter TargetName="Root" Property="Background" Value="{DynamicResource awsListBoxPanelItemSelectedBackgroundBrushKey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="StorageDeviceItemTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="22" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Margin="0,16,0,2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Click="StorageVolumeDelete_OnClick"
                        Tag="{Binding Path=ID}"
                        ToolTip="Deletes the storage volume entry"
                        Visibility="{Binding IsNonRootDevice, Converter={StaticResource Bool2VisConverter}}">
                        <Image
                            Width="16"
                            Height="16"
                            DataContext="{DynamicResource CommonIcons}"
                            Source="{Binding RemoveIcon}" />
                    </Button>

                    <StackPanel
                        Grid.Column="1"
                        MinWidth="90"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label
                            Name="TypeLabel"
                            Content="Type"
                            Style="{StaticResource StorageFieldLabel}" />
                        <ComboBox
                            ItemsSource="{Binding AvailableStorageTypes}"
                            SelectedItem="{Binding StorageType, Mode=TwoWay}"
                            Style="{StaticResource StorageFieldCombo}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="2"
                        MinWidth="70"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label Content="Device" Style="{StaticResource StorageFieldLabel}" />
                        <TextBlock
                            Style="{StaticResource StorageTextField}"
                            Text="{Binding Device}"
                            Visibility="{Binding IsRootDevice, Converter={StaticResource Bool2VisConverter}}" />
                        <TextBox
                            Style="{StaticResource StorageTextBoxField}"
                            Text="{Binding Device}"
                            Visibility="{Binding IsNonRootDevice, Converter={StaticResource Bool2VisConverter}}" />
                    </StackPanel>

                    <!--
                        using a fixed width for this column to stop the fields jumping around
                        when add a non-root volume, vs the root volume
                    -->
                    <StackPanel
                        Grid.Column="3"
                        Width="115"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label
                            Content="Snapshot"
                            Style="{StaticResource StorageFieldLabel}"
                            Visibility="{Binding IsNonRootDevice, Converter={StaticResource Bool2VisConverter}}" />
                        <ComboBox
                            DisplayMemberPath="SnapshotId"
                            ItemsSource="{Binding Snapshots}"
                            SelectedItem="{Binding Snapshot, Mode=TwoWay}"
                            Style="{StaticResource StorageFieldCombo}"
                            Visibility="{Binding IsNonRootDevice, Converter={StaticResource Bool2VisConverter}}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="4"
                        MinWidth="50"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label Content="Size (GB)" Style="{StaticResource StorageFieldLabel}" />
                        <TextBox Style="{StaticResource StorageTextBoxField}" Text="{Binding Size}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="5"
                        MinWidth="150"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label Content="Volume Type" Style="{StaticResource StorageFieldLabel}" />
                        <ComboBox
                            DisplayMemberPath="TypeName"
                            ItemsSource="{Binding VolumeTypes}"
                            SelectedItem="{Binding VolumeType, Mode=TwoWay}"
                            SelectionChanged="VolumeType_OnSelectionChanged"
                            Style="{StaticResource StorageFieldCombo}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="6"
                        MinWidth="70"
                        Style="{StaticResource StorageFieldPanel}">
                        <Label Content="IOPS" Style="{StaticResource StorageFieldLabel}" />
                        <Grid>
                            <TextBlock
                                x:Name="nonEditableIops"
                                Style="{StaticResource StorageTextField}"
                                Text="{Binding StaticIops}"
                                Visibility="{Binding Path=IsNonIopsCompatibleDevice, Converter={StaticResource Bool2VisConverter}}" />
                            <TextBox
                                x:Name="editableIops"
                                Style="{StaticResource StorageTextBoxField}"
                                Text="{Binding Iops}"
                                ToolTip="{Binding Path=IopsRangeTooltip}"
                                Visibility="{Binding Path=IsIopsCompatibleDevice, Converter={StaticResource Bool2VisConverter}}" />
                        </Grid>
                    </StackPanel>

                    <StackPanel
                        Grid.Column="7"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource StorageFieldPanel}">
                        <CheckBox IsChecked="{Binding DeleteOnTermination}" Style="{DynamicResource awsCheckboxButtonBaseStyle}">Delete on Termination</CheckBox>
                        <CheckBox IsChecked="{Binding Encrypted}" Style="{DynamicResource awsCheckboxButtonBaseStyle}">Encrypted</CheckBox>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="StorageControlTemplate" TargetType="ListBox">
                <ScrollViewer
                    Padding="{TemplateBinding Padding}"
                    CanContentScroll="True"
                    Focusable="false"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Auto">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ScrollViewer>
            </ControlTemplate>
        </ResourceDictionary>
    </commonui:BaseAWSUserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border BorderBrush="{DynamicResource awsDefaultControlBorderBrushKey}" BorderThickness="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock
                    Margin="4,8"
                    FontWeight="{DynamicResource {x:Static toolkitThemes:ShellProviderThemeResources.EnvironmentBoldFontWeightKey}}"
                    Style="{DynamicResource awsInfoTextStyle}"
                    Text="{Binding AllowedVolumeTypes}"
                    TextWrapping="Wrap" />
                <ListBox
                    x:Name="_storageList"
                    Grid.Row="1"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    IsSynchronizedWithCurrentItem="True"
                    ItemContainerStyle="{StaticResource StorageListBoxItemStyle}"
                    ItemTemplate="{StaticResource StorageDeviceItemTemplate}"
                    ItemsSource="{Binding StorageVolumes}"
                    SelectedItem="{Binding SelectedVolume, Mode=TwoWay}"
                    Template="{StaticResource StorageControlTemplate}" />
            </Grid>
        </Border>
        <Button
            Grid.Row="1"
            Margin="0,8,4,4"
            HorizontalAlignment="Right"
            Click="AddVolume_OnClick">
            <WrapPanel>
                <Image
                    Width="16"
                    Height="16"
                    DataContext="{DynamicResource CommonIcons}"
                    Source="{Binding AddIcon}" />
                <TextBlock Margin="4,0,0,0">Add</TextBlock>
            </WrapPanel>
        </Button>
    </Grid>
</commonui:BaseAWSUserControl>
