<commonui:BaseAWSUserControl
    x:Class="Amazon.AWSToolkit.ElasticBeanstalk.WizardPages.PageUI.Deployment.StartPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commonui="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:designData="clr-namespace:Amazon.AWSToolkit.ElasticBeanstalk.View.DesignData"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Amazon.AWSToolkit.ElasticBeanstalk.Model"
    xmlns:svcmodel="clr-namespace:Amazon.ElasticBeanstalk.Model;assembly=AWSSDK.ElasticBeanstalk"
    d:DataContext="{d:DesignInstance designData:ApplicationEnvironmentsDesignTimeContext,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="300"
    d:DesignWidth="500"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/DefaultTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style
                x:Key="applicationTreeViewItemStyle"
                BasedOn="{StaticResource awsTreeViewItemStyle}"
                TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="True" />
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type model:DeployedApplicationModel}" ItemsSource="{Binding Path=Environments}">
                <Grid Margin="0,2,0,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Width="16"
                        Height="16"
                        Source="{Binding ApplicationIcon}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="8,0,0,0"
                        Style="{DynamicResource awsTextBlockBaseStyle}"
                        Text="{Binding Path=ApplicationName}" />
                </Grid>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type svcmodel:EnvironmentDescription}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width=".3*" />
                        <ColumnDefinition Width=".3*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.EnvironmentIcon}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="4,0"
                        Style="{DynamicResource awsTextBlockBaseStyle}"
                        Text="{Binding EnvironmentName}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="8,0,2,0"
                        Style="{DynamicResource awsTextBlockBaseStyle}"
                        Text="{Binding Status}" />
                    <TextBlock
                        Grid.Column="3"
                        Margin="16,0,4,0"
                        HorizontalAlignment="Right"
                        FontStyle="Italic"
                        Style="{DynamicResource awsTextBlockBaseStyle}"
                        Text="{Binding CNAME}"
                        TextAlignment="Right"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".7*" />
            <ColumnDefinition Width=".3*" />
        </Grid.ColumnDefinitions>

        <Label
            Grid.ColumnSpan="2"
            Margin="0"
            Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
            Profile
        </Label>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Margin="12,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label
                Margin="0"
                Style="{DynamicResource awsWizardFieldLabelStyle}"
                Target="{Binding ElementName=_accountSelector}">
                Account _profile to use for deployment:
            </Label>
            <ComboBox
                x:Name="_accountSelector"
                Grid.Column="1"
                Margin="4,0,2,0"
                VerticalAlignment="Center"
                DisplayMemberPath="DisplayName"
                ItemsSource="{Binding Path=Accounts}"
                SelectionChanged="AccountSelector_SelectionChanged"
                Style="{DynamicResource awsComboBoxStyle}" />

            <ToggleButton
                x:Name="_useOtherAccount"
                Grid.Column="2"
                Margin="2"
                VerticalAlignment="Center"
                ToolTip="Add another account profile">
                <Image
                    Width="16"
                    Height="16"
                    DataContext="{DynamicResource CommonIcons}"
                    Source="{Binding AddAccountIcon}" />
            </ToggleButton>
            <Popup
                x:Name="_accountEntryPopup"
                AllowsTransparency="True"
                HorizontalOffset="{Binding ElementName=_useOtherAccount, Path=ActualWidth}"
                IsOpen="{Binding ElementName=_useOtherAccount, Path=IsChecked}"
                Loaded="AccountEntryPopup_Loaded"
                Placement="Left"
                PlacementTarget="{Binding ElementName=_useOtherAccount}"
                PopupAnimation="Slide"
                VerticalOffset="{Binding ElementName=_useOtherAccount, Path=ActualHeight}">

                <Popup.Resources>
                    <!--
                        temp local definition of resources for account control, copied
                        from host dialog so we space the same etc; this needs to go into
                        a 'dialog style' sheet we can import with studio (but not today,
                        on eve of sprint demo!)
                    -->
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Margin" Value="10" />
                    </Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Margin" Value="0,3,5,5" />
                        <Setter Property="Padding" Value="0,0,0,5" />
                    </Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="0,0,0,5" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Orientation" Value="Horizontal" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                    </Style>
                </Popup.Resources>

                <Border Style="{DynamicResource awsPopupBorderStyle}">

                    <Grid Margin="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentControl x:Name="_accountFieldContainer" />

                        <StackPanel
                            Grid.Row="1"
                            Margin="0,10,4,4"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <Button
                                x:Name="_popupAccountOK"
                                Click="PopupAccountOK_Click"
                                Style="{DynamicResource awsPopupDialogButtonStyle}">
                                OK
                            </Button>
                            <Button
                                x:Name="_popupAccountCancel"
                                Click="PopupAccountCancel_Click"
                                Style="{DynamicResource awsPopupDialogButtonStyle}">
                                Cancel
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Popup>
        </Grid>

        <Grid
            Grid.Row="1"
            Grid.Column="1"
            Margin="0">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label
                    Margin="2,0,0,0"
                    Style="{DynamicResource awsWizardFieldLabelStyle}"
                    Target="{Binding ElementName=_regionSelector}">
                    Region:
                </Label>

                <ComboBox
                    x:Name="_regionSelector"
                    Grid.Column="1"
                    Margin="2"
                    VerticalAlignment="Center"
                    SelectionChanged="RegionSelector_SelectionChanged"
                    Style="{DynamicResource awsComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image
                                    Width="13"
                                    Height="12"
                                    Margin="5,0,0,0"
                                    Source="{Binding FlagIcon}" />
                                <TextBlock
                                    Margin="5,0,0,0"
                                    Style="{DynamicResource awsTextBlockBaseStyle}"
                                    Text="{Binding DisplayName}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </Grid>

        <Label
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="0,12,0,0"
            Style="{DynamicResource awsWizardGroupSubHeaderStyle}">
            Deployment Target
        </Label>

        <RadioButton
            x:Name="_btnDeployNew"
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="12,16,0,0"
            Checked="DeploymentModeButton_OnChecked"
            GroupName="modeGroup"
            IsChecked="True"
            Style="{DynamicResource awsRadioButtonBaseStyle}">
            Create a _new application environment
        </RadioButton>

        <RadioButton
            x:Name="_btnRedeploy"
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="12,16,0,8"
            Checked="DeploymentModeButton_OnChecked"
            GroupName="modeGroup"
            IsEnabled="False"
            Style="{DynamicResource awsRadioButtonBaseStyle}">
            R_edeploy to an existing environment:
        </RadioButton>

        <TreeView
            x:Name="_existingDeploymentsTree"
            Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="28,4,4,8"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Background="{DynamicResource awsDefaultControlBackgroundBrushKey}"
            ItemContainerStyle="{StaticResource applicationTreeViewItemStyle}"
            ItemsSource="{Binding ExistingDeployments}"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            SelectedItemChanged="_existingDeploymentsTree_OnSelectedItemChanged" />

        <Button
            x:Name="_btnUseLegacyWizard"
            Grid.Row="6"
            Grid.Column="0"
            Margin="12,8,4,2"
            Padding="4,2"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Click="UseLegacyWizard_OnClick"
            Style="{DynamicResource awsButtonBaseStyle}"
            ToolTip="Closes this wizard and starts the legacy deployment wizard, supporting deployments to AWS CloudFormation">
            Use legacy wizard...
        </Button>

    </Grid>
</commonui:BaseAWSUserControl>
