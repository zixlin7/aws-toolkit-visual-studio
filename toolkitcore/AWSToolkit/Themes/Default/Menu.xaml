<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- VS does not distinguish between hover and pressed modes, even though it has separate keys for those
         states, and obviously doesn't use a gradient. This two keys have therefore been replaced with our
         own brushes
    <LinearGradientBrush x:Key="MenuItemSelectionFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#34C5EBFF" Offset="0"/>
            <GradientStop Color="#3481D8FF" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemPressedFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#28717070" Offset="0"/>
            <GradientStop Color="#50717070" Offset="0.75"/>
            <GradientStop Color="#90717070" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
     -->

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <!-- VS uses a 1-line separator, with a color matching the border and
                         reduces the vertical margins to 2 each side, not 6 (top) and 4 (bottom) as
                         used in wpf defaults
                    -->
                    <Grid SnapsToDevicePixels="true" Margin="0,2,0,2">
                        <Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="{DynamicResource awsMenuSeparatorBrushKey}"/>
                        <!--
                        <Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="#E0E0E0"/>
                        <Rectangle Height="1"
                                   Margin="30,1,1,0"
                                   Fill="White"/>
                        -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
        <Setter Property="Foreground" Value="{DynamicResource awsMenuForegroundBrushKey}"/>
        <Setter Property="Panel.Background" Value="{DynamicResource awsMenuBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource awsMenuBorderBrushKey}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="true">
                        <Border Name="ContextMenuBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <!-- these rectangles seem to be overwritten by menuitem styles
                                     and have no visual effect - decided to leave them present
                                     for now
                                -->
                                <Rectangle Fill="#F1F1F1"
                                           HorizontalAlignment="Left"
                                           Width="28"
                                           Margin="2"
                                           RadiusX="2"
                                           RadiusY="2"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="#E2E3E3"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="31,2,0,2"
                                           Fill="White"/>

                                <ScrollViewer Name="ContextMenuScrollViewer" 
                                              CanContentScroll="true"
                                              Grid.ColumnSpan="2" Margin="1,0"
                                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}" 
                                                       Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}" 
                                                       Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" 
                                                        Margin="{TemplateBinding Padding}"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <!-- standard wpf template uses radii of 2 for outerborder, radii of 1 for Bg and margin of
                 2 for innerborder
            -->
            <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
            <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Rectangle x:Name="InnerBorder" Margin="1"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{DynamicResource awsCheckmarkGeometry}"/>
                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Stroke" Value="#90717070"/>
                <Setter TargetName="OuterBorder" Property="Stroke" Value="#50FFFFFF"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#50FFFFFF"/>
                -->
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Stroke" Value="#E0717070"/>
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemPressedFill}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#50747272"/>
                -->
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter TargetName="GlyphPanel" Property="Fill" Value="#848589"/>
                -->
                <Setter Property="Foreground" Value="{DynamicResource awsMenuDisabledForegroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <!-- standard wpf template uses radii of 2 for outerborder, radii of 1 for Bg and margin of
                 2 for innerborder
            -->
            <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
            <Rectangle Name="Bg" 
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Rectangle x:Name="InnerBorder" Margin="1"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{DynamicResource awsCheckmarkGeometry}"/>
                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
            <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                    <ContentControl Name="SubMenuBorder"
                                    Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                        <ScrollViewer Name="SubMenuScrollViewer" 
                                      CanContentScroll="true"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}" 
                                               Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" 
                                               Fill="{DynamicResource awsMenuBackgroundBrushKey}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                            </Grid>
                        </ScrollViewer>
                    </ContentControl>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Stroke" Value="#90717070"/>
                <Setter TargetName="OuterBorder" Property="Stroke" Value="#50FFFFFF"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#50FFFFFF"/>
                -->
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Stroke" Value="#E0717070"/>
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemPressedFill}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#50747272"/>
                -->
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Stroke" Value="#E0717070"/>
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#50747272"/>
                -->
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter TargetName="GlyphPanel" Property="Fill" Value="#848589"/>
                -->
                <Setter Property="Foreground" Value="{DynamicResource awsMenuDisabledForegroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <!-- standard wpf template uses radii of 2 for outerborder, radii of 1 for Bg and margin of
                 1 and radii 2 for innerborder
            -->
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel" 
                        Background="{TemplateBinding MenuItem.Background}" 
                        BorderBrush="{TemplateBinding MenuItem.BorderBrush}" 
                        BorderThickness="1"
                        CornerRadius="2"
                        Margin="1"
                        Visibility="Hidden"
                        Width="20" 
                        Height="20">
                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource awsMenuForegroundBrushKey}"
                          FlowDirection="LeftToRight"
                          Data="{DynamicResource awsCheckmarkGeometry}"/>
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource awsMenuItemSelectionFill}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="#8071CBF1"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="#40FFFFFF"/>
                -->
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter TargetName="GlyphPanel" Property="Background" Value="#EEE9E9"/>
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#DBD6D6"/>
                <Setter TargetName="Glyph" Property="Fill" Value="#848589"/>
                -->
                <Setter Property="Foreground" Value="{DynamicResource awsMenuDisabledForegroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource awsMenuBorderBrushKey}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <!-- standard wpf template uses radii of 2 for Bg and margin of
                 1 and radii 2 for innerborder
            -->
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="0"
                       RadiusY="0"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel"
                        Background="{DynamicResource awsMenuBackgroundBrushKey}"
                        BorderBrush="{DynamicResource awsMenuBorderBrushKey}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource awsMenuForegroundBrushKey}"
                          FlowDirection="LeftToRight"
                          Data="{DynamicResource awsCheckmarkGeometry}"/>
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{DynamicResource awsRightArrowGeometry}"
                      Name="rightArrow"/>
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                    <ContentControl Name="SubMenuBorder"
                                    Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                        <ScrollViewer Name="SubMenuScrollViewer" 
                                      CanContentScroll="true"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}" 
                                               Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}" 
                                               Fill="{DynamicResource awsMenuBackgroundBrushKey}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" 
                                                Margin="2"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true"/>
                            </Grid>
                        </ScrollViewer>
                    </ContentControl>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource awsMenuItemSelectionFill}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="#8571CBF1"/>
                -->
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource awsMenuHighlightedBackgroundBrushKey}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource awsMenuHighlightedBorderBrushKey}"/>
                <!--<Setter TargetName="rightArrow" Property="Fill" Value="{DynamicResource awsMenuSubmenuArrowGlyphHighlightedBrushKey}"/>-->
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="rightArrow" Property="Fill" Value="{DynamicResource awsMenuSubmenuArrowGlyphHighlightedBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter TargetName="GlyphPanel" Property="Background" Value="#EEE9E9"/>
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="#DBD6D6"/>
                <Setter TargetName="Glyph" Property="Fill" Value="#848589"/>
                -->
                <Setter Property="Foreground" Value="{DynamicResource awsMenuDisabledForegroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource awsMenuBorderBrushKey}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource awsMenuBackgroundBrushKey}"/>
                <Setter TargetName="rightArrow" Property="Fill" Value="{DynamicResource awsMenuDisabledForegroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>