# You might find the following Visual Studio Extension useful if you are working on .editorconfig files:
# https://marketplace.visualstudio.com/items?itemName=MadsKristensen.EditorConfig

root = true

[*]
end_of_line = crlf
charset = utf-8-bom
insert_final_newline = true

[*.{yml,yaml}]
indent_size = 4
indent_style = space

[*.{appxmanifest,axml,build,config,csproj,dbml,discomap,dtd,jsproj,lsproj,njsproj,nuspec,proj,props,proto,resw,resx,StyleCop,targets,tasks,vbproj,xml,xsd}]
indent_style = tab
tab_width = 4

[*.{asax,ascx,aspx,cs,cshtml,css,htm,html,js,jsx,master,razor,skin,ts,tsx,vb,xaml,xamlx,xoml}]
indent_size = 4
indent_style = space
insert_final_newline = true

[*.{json,resjson}]
indent_size = 4
indent_style = space

[*.vsct]
indent_size = 2
indent_style = space

[*.cs]
trim_trailing_whitespace = true

################################################################################
# C# Formatting: Newline options
################################################################################
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

################################################################################
# C# Formatting: Indentation options
################################################################################
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true

################################################################################
# C# Formatting: Spacing options
################################################################################
csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

################################################################################
# C# Formatting: Wrap options
################################################################################
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

################################################################################
# C# Formatting: Using options
################################################################################
csharp_using_directive_placement = outside_namespace

################################################################################
# .NET Formatting: Using options
################################################################################
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# Reference: https://google.github.io/styleguide/csharp-style.html#code
####################################################################################################
# Names of classes, methods, enumerations, public fields, public properties, namespaces: PascalCase
####################################################################################################

# Defining the 'public_properties_fields' symbol group
dotnet_naming_symbols.public_properties_fields.applicable_kinds           = property,field
dotnet_naming_symbols.public_properties_fields.applicable_accessibilities = public

# Defining the 'general_symbols' symbol group
dotnet_naming_symbols.general_symbols.applicable_kinds           = class,enum,namespace,method
dotnet_naming_symbols.general_symbols.applicable_accessibilities = *

# Defining the 'pascal_case' naming style
dotnet_naming_style.pascal_case.capitalization = pascal_case

# Defining the 'general_symbals_are_pascal_case' naming rule
dotnet_naming_rule.general_symbals_are_pascal_case.symbols  = general_symbols
dotnet_naming_rule.general_symbals_are_pascal_case.style    = pascal_case
dotnet_naming_rule.general_symbals_are_pascal_case.severity = warning

# Defining the 'public_properties_fields_are_pascal_case' naming rule
dotnet_naming_rule.public_properties_fields_are_pascal_case.symbols  = public_properties_fields
dotnet_naming_rule.public_properties_fields_are_pascal_case.style    = pascal_case
dotnet_naming_rule.public_properties_fields_are_pascal_case.severity = warning

####################################################################################################
# Names of local variables, parameters: camelCase
####################################################################################################

# Define the 'local_variables_parameters' symbol group:
dotnet_naming_symbols.local_variables_parameters.applicable_kinds = local,parameter

# Define the 'camel_case' naming style
dotnet_naming_style.camel_case.capitalization = camel_case

# Define the 'local_variables_parameters_are_camel_case' naming rule
dotnet_naming_rule.local_variables_parameters_are_camel_case.symbols = local_variables_parameters
dotnet_naming_rule.local_variables_parameters_are_camel_case.style = camel_case
dotnet_naming_rule.local_variables_parameters_are_camel_case.severity = warning

####################################################################################################
# Names of private, protected, internal and protected internal fields and properties: _camelCase.
# Naming convention is unaffected by modifiers such as const, static, readonly, etc
####################################################################################################

# Define the 'non_public_property_field' symbol group:
dotnet_naming_symbols.non_public_property_field.applicable_kinds = property,field
dotnet_naming_symbols.non_public_property_field.applicable_accessibilities = private,protected,internal,protected_internal

# Define the 'underscored_camel_case' naming style
dotnet_naming_style.underscored_camel_case.required_prefix = _
dotnet_naming_style.underscored_camel_case.capitalization = camel_case

# Define the 'non_public_property_field_underscored_camel_case' naming rule
dotnet_naming_rule.non_public_property_field_underscored_camel_case.symbols = non_public_property_field
dotnet_naming_rule.non_public_property_field_underscored_camel_case.style = underscored_camel_case
dotnet_naming_rule.non_public_property_field_underscored_camel_case.severity = warning


####################################################################################################
# Names of interfaces start with I, e.g. IInterface
####################################################################################################

# Define the 'interface' symbol group
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *

# Define the 'interface_with_prefix' naming style
dotnet_naming_style.interface_with_prefix.capitalization = pascal_case
dotnet_naming_style.interface_with_prefix.required_prefix = I

# Define the 'interface_prefixed' naming rule
dotnet_naming_rule.interface_prefixed.symbols = interface
dotnet_naming_rule.interface_prefixed.style = interface_with_prefix
dotnet_naming_rule.interface_prefixed.severity = warning


# C# Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#c-style-rules
# 'var' preferences
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning
# Expression-bodied members
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_local_functions = when_on_single_line:warning
# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_cast_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_extended_property_pattern = true:warning
# Expression-level preferences
csharp_style_inlined_variable_declaration = true:warning
csharp_prefer_simple_default_expression = true:warning
# "Null" checking preferences
csharp_style_conditional_delegate_call = true:warning
# Code block preferences
csharp_prefer_braces = true:warning

# .NET Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#net-style-rules
# "this." and "Me." qualifiers
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning
dotnet_style_readonly_field = true:warning
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
# Expression-level preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
# Null-checking preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
# Namespace naming preferences
dotnet_style_namespace_match_folder = true:warning

# .NET Unnecessary code rules
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules
dotnet_code_quality_unused_parameters = all:warning
dotnet_diagnostic.IDE0001.severity = warning
