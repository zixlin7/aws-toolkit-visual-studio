<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:components="clr-namespace:Amazon.AWSToolkit.CommonUI.Components"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AWSToolkit;component/Themes/DefaultTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- 
        ********************************************************************************
        * Templates for a control that presents a standard read-only ComboBox control 
        * and places a gid view of customizable columns into the dropdown.
        ********************************************************************************
    -->
    <ControlTemplate x:Key="awsListViewComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Popup Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="DropDownBorder"
                           BorderThickness="1"
                           BorderBrush="{DynamicResource awsComboBoxBorderBrushKey}"
                           Background="{DynamicResource awsComboBoxDropPanelBackgroundBrushKey}">
                    <ListView x:Name="PART_PopupListView"
                                 KeyboardNavigation.DirectionalNavigation="Contained"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 ItemsSource="{TemplateBinding ItemsSource}"
                                 AlternationCount="{TemplateBinding AlternationCount}"
                                 Style="{DynamicResource awsListViewStyle}"
                                 ItemContainerStyle="{DynamicResource awsListViewItemContainerStyle}"
                                 MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                 >
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{DynamicResource awsListViewGridHeaderStyle}"/>
                        </ListView.View>

                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="SemiBold" FontSize="14" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>

                    </ListView>
                </Border>
            </Popup>

            <mwt:ListBoxChrome x:Name="Border"
                               Grid.ColumnSpan="2"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               Background="{TemplateBinding Background}"
                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                               RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
            <TextBox Name="PART_EditableTextBox"
                     Margin="{TemplateBinding Padding}"
                     Style="{DynamicResource awsComboBoxEditableTextBox}"
                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <ToggleButton Grid.Column="1"
                          Style="{DynamicResource awsComboBoxToggleButton}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource awsWindowTextBrushKey}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter TargetName="Border" Property="RenderFocused" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxEditableDisabledBackgroundBrushKey}"/>
                <Setter Property="Background" TargetName="PART_EditableTextBox" Value="{DynamicResource awsComboBoxEditableDisabledBackgroundBrushKey}"/>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditableDisabledBorderBrushKey}"/>
            </Trigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                    <Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBorderBrushKey}"/>
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBackgroundBrushKey}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBorderBrushKey}"/>
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBackgroundBrushKey}"/>
            </MultiDataTrigger>

            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type components:ListViewComboBox}" TargetType="{x:Type components:ListViewComboBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource awsComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource awsWindowTextBrushKey}"/>
        <Setter Property="Background" Value="{DynamicResource awsComboBoxBackgroundBrushKey}"/>
        <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxBackgroundBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource awsComboBoxBorderBrushKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
	                           IsOpen="{Binding IsDropDownOpen, 
	                           RelativeSource={RelativeSource TemplatedParent}}" 
	                           Placement="Bottom" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
		                       Grid.ColumnSpan="2">
                            <Border x:Name="DropDownBorder"
                                       BorderThickness="1"
                                       BorderBrush="{TemplateBinding Border.BorderBrush}"
                                       Background="{DynamicResource awsComboBoxDropPanelBackgroundBrushKey}">
                                <ListView x:Name="PART_PopupListView"
                                             KeyboardNavigation.DirectionalNavigation="Contained"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                             ItemsSource="{TemplateBinding ItemsSource}"
                                             AlternationCount="{TemplateBinding AlternationCount}"
                                             Style="{DynamicResource awsListViewStyle}"
                                             ItemContainerStyle="{DynamicResource awsListViewItemContainerStyle}"
                                             MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                             >
                                    <ListView.View>
                                        <GridView ColumnHeaderContainerStyle="{DynamicResource awsListViewGridHeaderStyle}"/>
                                    </ListView.View>

                                    <ListView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontWeight="SemiBold" FontSize="14" Text="{Binding Name}"/>
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ListView.GroupStyle>

                                </ListView>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding Border.BorderThickness}"
                                      Style="{StaticResource awsComboBoxToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxEditableBorderBrushKey}"/>
                <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxEditableBackgroundBrushKey}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource awsListViewComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
        ********************************************************************************
        * Templates for a custom control based on a ToggleButton that presents a drop-
        * down popup (like a combobox) that can contain a custom user control. The user
        * control is placed between header and footer panels.
        ********************************************************************************
    -->

    <Style x:Key="HeaderedDropPanelFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4" 
                               SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource awsComboBoxPressedBorderBrushKey}" 
                               StrokeThickness="1" 
                               StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- button styling set to match a combobox/togglebutton on a toolbar rather than standard button-->
    <Style x:Key="{x:Type components:HeaderedDropPanel}" TargetType="{x:Type components:HeaderedDropPanel}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Foreground" Value="{DynamicResource awsToolBarTextBrushKey}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:HeaderedDropPanel}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true"
                            Name="Bd">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" 
                                   AllowsTransparency="False"
                                   Margin="1" 
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                                   Placement="Bottom"
                                   StaysOpen="False">
                                <Border x:Name="DropDownBorder" 
                                            BorderBrush="{DynamicResource awsHeaderedDropPanelPopupBorderBrushKey}" 
                                            BorderThickness="1" 
                                            Background="{DynamicResource awsComboBoxDropPanelBackgroundBrushKey}">
                                    <Grid x:Name="PART_PopupInner">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Cross-control header -->
                                        <Grid x:Name="PART_HeaderPanel" Background="{DynamicResource awsHeaderedDropPanelHeaderBackgroundBrushKey}">

                                            <StackPanel Margin="4,0">
                                                <TextBlock Margin="4,8" 
                                                                HorizontalAlignment="Left" 
                                                                VerticalAlignment="Center" 
                                                                FontWeight="Bold"
                                                                Text="{TemplateBinding PanelHeaderLabel}"
                                                                Foreground="{DynamicResource awsHeaderedDropPanelHeaderTextBrushKey}"
                                                                />
                                            </StackPanel>
                                            <Border BorderThickness="1" BorderBrush="{DynamicResource awsDividerRuleBrushKey}" />
                                        </Grid>

                                        <!-- inner row holds the bound child panel -->
                                        <ContentPresenter x:Name="PART_ContentPanel" 
                                                                Grid.Row="1"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                IsHitTestVisible="true" 
                                                                Margin="4" 
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            />

                                        <!-- Base row holds cancel/apply -->
                                        <Grid x:Name="PART_ControlButtonsPanel" Grid.Row="2" Margin="0,0,0,4">
                                            <StackPanel>
                                                <Border BorderThickness="1" BorderBrush="{DynamicResource awsDividerRuleBrushKey}" 
                                                            Background="{DynamicResource awsHeaderedDropPanelFooterBackgroundBrushKey}"/>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,4,0,0"
                                                                >
                                                    <Button x:Name="PART_ApplyButton" 
                                                                Style="{StaticResource awsButtonBaseStyle}"
                                                                Padding="4,2">
                                                        Apply
                                                    </Button>
                                                    <Button x:Name="PART_CancelButton" 
                                                                Margin="4,0" 
                                                                Style="{StaticResource awsButtonBaseStyle}"
                                                                Padding="4,2">
                                                        Cancel
                                                    </Button>
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Popup>

                            <WrapPanel Background="{TemplateBinding Background}">
                                <Image Width="16" Height="16" Source="{TemplateBinding DropDownImage}"/>
                                <TextBlock Text="{TemplateBinding DropDownLabel}" 
                                           VerticalAlignment="Center"
                                           Name="buttonLabel"/>
                                <Path x:Name="Arrow" 
                                      Data="{DynamicResource awsDownArrowGeometry}" 
                                      Fill="{DynamicResource awsComboBoxArrowBrushKey}" 
                                      HorizontalAlignment="Center" 
                                      Margin="3,1,4,0" 
                                      VerticalAlignment="Center"/>
                            </WrapPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource awsToolBarButtonPressedBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource awsToolBarButtonPressedBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource awsToolBarButtonHoverBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource awsToolBarButtonHoverBrushKey}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource awsToolBarButtonPressedBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource awsToolBarButtonPressedBrushKey}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource awsToolBarButtonPressedBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource awsToolBarButtonPressedBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" TargetName="buttonLabel" Value="{DynamicResource awsToolBarDisabledTextBrushKey}"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource awsComboBoxArrowDisabledBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
