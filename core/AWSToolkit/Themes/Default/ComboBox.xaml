<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <Style x:Key="awsComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="{DynamicResource awsComboBoxPressedBorderBrushKey}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="awsComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="awsComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Name="Border"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Border BorderThickness="1,0,0,0" 
                                BorderBrush="#00FFFFFF" 
                                Name="SplitBorder" 
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" 
                                Margin="0,0,0,0" 
                                HorizontalAlignment="Right" 
                                SnapsToDevicePixels="True">
                            <Path Name="Arrow"
                                  Margin="3,1,2,0"
                                  Fill="{DynamicResource awsComboBoxArrowBrushKey}"
                                  Data="{DynamicResource awsDownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxDisabledBorderBrushKey}"/>
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxDisabledBackgroundBrushKey}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource awsComboBoxArrowDisabledBrushKey}"/>
                        </Trigger>

                        <!-- enabled, editable mode combo box triggers -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBorderBrushKey}"/>
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBackgroundBrushKey}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource awsComboBoxEditableArrowMouseOverBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Panel.Background" Value="{DynamicResource awsComboBoxEditableMouseOverSplitBorderBackgroundBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxEditableMouseOverSplitBorderBorderBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="BorderThickness" Value="1"/>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBorderBrushKey}"/>
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBackgroundBrushKey}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource awsComboBoxEditableArrowPressedBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Panel.Background" Value="{DynamicResource awsComboBoxEditablePressedSplitBorderBackgroundBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxEditablePressedSplitBorderBorderBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="BorderThickness" Value="1"/>
                        </MultiDataTrigger>

                        <!-- enabled, readonly mode combo box triggers -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxMouseOverBorderBrushKey}"/>
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxMouseOverBackgroundBrushKey}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource awsComboBoxArrowMouseOverBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Panel.Background" Value="{DynamicResource awsComboBoxMouseOverSplitBorderBackgroundBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxMouseOverSplitBorderBorderBrushKey}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxPressedBorderBrushKey}"/>
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxPressedBackgroundBrushKey}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource awsComboBoxArrowPressedBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Panel.Background" Value="{DynamicResource awsComboBoxPressedSplitBorderBackgroundBrushKey}"/>
                            <Setter TargetName="SplitBorder" Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxPressedSplitBorderBorderBrushKey}"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="awsComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Popup Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <mwt:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent"
                                              MinWidth="{Binding ElementName=Placement,Path=ActualWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource awsComboBoxBorderBrushKey}"
                            Background="{DynamicResource awsComboBoxDropPanelBackgroundBrushKey}">
                        <ScrollViewer Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle Name="OpaqueRect"
                                               Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                               Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                               Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </mwt:SystemDropShadowChrome>
            </Popup>

            <mwt:ListBoxChrome x:Name="Border"
                               Grid.ColumnSpan="2"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               Background="{TemplateBinding Background}"
                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                               RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
            <TextBox Name="PART_EditableTextBox"
                     Margin="{TemplateBinding Padding}"
                     Style="{StaticResource awsComboBoxEditableTextBox}"
                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <ToggleButton Grid.Column="1"
                          Style="{StaticResource awsComboBoxToggleButton}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource awsWindowTextBrushKey}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter TargetName="Border" Property="RenderFocused" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxEditableDisabledBackgroundBrushKey}"/>
                <Setter Property="Background" TargetName="PART_EditableTextBox" Value="{DynamicResource awsComboBoxEditableDisabledBackgroundBrushKey}"/>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditableDisabledBorderBrushKey}"/>
            </Trigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                    <Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBorderBrushKey}"/>
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditableMouseOverBackgroundBrushKey}"/>
            </MultiDataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBorderBrushKey}"/>
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource awsComboBoxEditablePressedBackgroundBrushKey}"/>
            </MultiDataTrigger>

            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false" >
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="awsComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource awsComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource awsWindowTextBrushKey}"/>
        <Setter Property="TextBox.CaretBrush" Value="{DynamicResource awsWindowTextBrushKey}"/>
        <Setter Property="Background" Value="{DynamicResource awsComboBoxBackgroundBrushKey}"/>
        <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxBackgroundBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource awsComboBoxBorderBrushKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <mwt:SystemDropShadowChrome Name="Shdw"
                                                        Color="Transparent"
                                                        MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Background="{DynamicResource awsComboBoxDropPanelBackgroundBrushKey}">
                                    <ScrollViewer Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect"
                                                           Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                                           Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                                           Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </mwt:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding Border.BorderThickness}"
                                      Style="{StaticResource awsComboBoxToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false" >
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" 
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" 
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Border.BorderBrush" Value="{DynamicResource awsComboBoxEditableBorderBrushKey}"/>
                <Setter Property="Panel.Background" Value="{DynamicResource awsComboBoxEditableBackgroundBrushKey}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource awsComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>