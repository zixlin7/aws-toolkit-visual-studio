<UserControl x:Class="Amazon.AWSToolkit.Publish.Views.SelectTargetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Amazon.AWSToolkit.Publish.Views"
             xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
             xmlns:viewModels="clr-namespace:Amazon.AWSToolkit.Publish.ViewModels"
             xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             themes:ToolkitThemes.UseToolkitTheme="True"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>

            <!-- Render "New Publish" view -->
            <DataTemplate DataType="{x:Type viewModels:NewPublishTargetsViewModel}">
                <local:NewTargetDetailsView
                    DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=local:SelectTargetView}}"
                    />
            </DataTemplate>

            <!-- Render "Existing Publish" view -->
            <DataTemplate DataType="{x:Type viewModels:ExistingPublishTargetsViewModel}">
                <local:ExistingTargetDetailsView
                    DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=local:SelectTargetView}}"
                    />
            </DataTemplate>

            <!-- Render Tab Item labels -->
            <DataTemplate x:Key="TargetSelectionTabHeading" DataType="{x:Type viewModels:TargetSelectionViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock 
                        x:Name="tbTabName"
                        Grid.Row="0"
                        Text="{Binding DisplayName}" />
                    <Rectangle 
                        Margin="0 1 0 0"
                        Grid.Row="1"
                        StrokeThickness="0" 
                        Height="2"
                        Fill="{Binding ElementName=tbTabName, Path=Foreground}">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=tbTabName, Path=FontWeight}" Value="Bold">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </Grid>
            </DataTemplate>

            <!-- Style the TabControl (items) to look like heading labels instead of tabs -->
            <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontSizeKey}}" />
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontWeightKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUi:CommonControlsColors.TextBoxTextBrushKey}}" />

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate 
                            TargetType="{x:Type TabItem}">
                            <ContentPresenter 
                                Margin="0 8 16 8"
                                ContentTemplate="{DynamicResource TargetSelectionTabHeading}" 
                                ContentSource="Header" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUi:EnvironmentColors.ControlLinkTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TabControl 
            Grid.Row="0" Grid.Column="0"
            Background="Transparent"
            BorderThickness="0"

            ItemsSource="{Binding TargetSelectionViewModels}"
            SelectedItem="{Binding CurrentSelectionViewModel}"
            />
    </Grid>
</UserControl>
