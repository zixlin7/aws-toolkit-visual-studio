<UserControl x:Class="Amazon.AWSToolkit.Publish.Views.ConfigureTargetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Amazon.AWSToolkit.Publish.Views"
             xmlns:models="clr-namespace:Amazon.AWSToolkit.Publish.Models"
             xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
             xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
             xmlns:publishconverters="clr-namespace:Amazon.AWSToolkit.Publish.Converters"
             themes:ToolkitThemes.UseToolkitTheme="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source=".\Properties\PropertyEditors.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <publishconverters:ConfigurationDetailsToVisibilityConverter x:Key="ConfigurationDetailsToVisibilityConverter" />

            <Style x:Key="NoEditableSettingsStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=ConfigCheckbox}" Value="True">
                        <Setter Property="Text" Value="There are no editable settings."></Setter>
                        <Setter Property="Visibility" Value="{Binding ConfigurationDetails, Converter={StaticResource ConfigurationDetailsToVisibilityConverter}, ConverterParameter=False}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=ConfigCheckbox}" Value="False">
                        <Setter Property="Text" Value="There are no editable settings. Try toggling the advanced settings."></Setter>
                        <Setter Property="Visibility" Value="{Binding ConfigurationDetails, Converter={StaticResource ConfigurationDetailsToVisibilityConverter}, ConverterParameter=True}"></Setter>
                    </DataTrigger>
                    <DataTrigger></DataTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="CategoryGroup" TargetType="{x:Type GroupItem}">
                <StackPanel Orientation="Vertical">
                    <TextBlock 
                        Margin="0 9 0 0"
                        FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontSizeKey}}"
                        FontWeight="Bold"
                        Text="{Binding Name}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Name}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <ItemsPresenter />
                </StackPanel>
            </ControlTemplate>

            <DataTemplate x:Key="ConfigDetailDataTemplate" DataType="{x:Type models:ConfigurationDetail}">
                <!-- UI for a Configuration Detail and its children -->
                <Grid
                    Margin="0 12 0 6">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ConfigCheckbox}" Value="False">
                                    <Setter Property="Visibility" Value="{Binding Advanced, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Visible}" Value="false">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ReadOnly}" Value="true">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>                                
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <!-- Detail Name -->
                        <RowDefinition Height="Auto" />
                        <!-- Description -->
                        <RowDefinition Height="Auto" />
                        <!-- Value/Control -->
                        <RowDefinition Height="Auto" />
                        <!-- Child Details -->
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock 
                        Grid.Row="0" Grid.Column="0" 
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{Binding FullDisplayName}" />

                    <TextBlock
                        Grid.Row="1" 
                        Grid.Column="0"
                        Margin="0 6 10 3" 
                        TextWrapping="WrapWithOverflow"
                        Foreground="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}"
                        Text="{Binding Description}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <!-- If there is no Description, don't take up the vertical space with a blank -->
                                    <DataTrigger Binding="{Binding Description}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Description}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ContentControl 
                        Grid.Row="2" Grid.Column="0"
                        Margin="0 6 10 3" 
                        HorizontalContentAlignment="Stretch"
                        Content="{Binding .}" ContentTemplateSelector="{DynamicResource PropertyTemplateSelector}" />

                    <ItemsControl
                        Grid.Row="3" Grid.Column="0"
                        Grid.IsSharedSizeScope="True"
                        Margin="0 0 0 0"
                        ItemsSource="{Binding Children}"
                        ItemTemplate="{DynamicResource ConfigDetailDataTemplate}"
                        ItemContainerStyle="{DynamicResource ConfigDetailItemStyle}" />
                </Grid>
            </DataTemplate>

            <Style x:Key="ConfigDetailItemStyle">
                <!-- This line below gives the property the full width of the parent control to work with -->
                <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="6 0 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock 
            Grid.Row="0"
            Margin="0 6 0 0"
            FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading2FontSizeKey}}"
            FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading2FontWeightKey}}"
            Text="{Binding TargetRecipe}"
            />
        <CheckBox 
            Name="ConfigCheckbox" x:FieldModifier="private"
            Grid.Row="1" 
            Margin="0 9 0 0" 
            Content="Show advanced settings" 
            />

        <TextBlock
            Grid.Row="2"
            Margin="0  12 0 0"
            Style="{DynamicResource NoEditableSettingsStyle}"/>
        
        <ScrollViewer
            Grid.Row="3"
            Margin="0 9 0 0"
            VerticalScrollBarVisibility="Auto">
            <ItemsControl
                Grid.IsSharedSizeScope="True"
                Margin="0 9 0 0"
                ItemsSource="{Binding ConfigurationDetails}"
                ItemTemplate="{DynamicResource ConfigDetailDataTemplate}"
                ItemContainerStyle="{DynamicResource ConfigDetailItemStyle}"
                >
                <ItemsControl.GroupStyle>
                    <!-- Render the Category and properties associated with it -->
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template" Value="{StaticResource CategoryGroup}" />
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ItemsControl.GroupStyle>
            </ItemsControl>

        </ScrollViewer>
    </Grid>
</UserControl>
