<UserControl x:Class="Amazon.AWSToolkit.Publish.Views.CredentialsRegionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
             xmlns:viewModels="clr-namespace:Amazon.AWSToolkit.Publish.ViewModels"
             xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
             themes:ToolkitThemes.UseToolkitTheme="True"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type viewModels:DesignTimePublishConnectionViewModel}, IsDesignTimeCreatable=True}"
             d:DesignHeight="80" d:DesignWidth="400">

    <UserControl.Resources>
        <ResourceDictionary>
            <commonUi:VsImages x:Key="VsImages" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel
            Grid.Row="0" Grid.Column="0"
            Orientation="Horizontal"
            >
            <TextBlock 
                FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontSizeKey}}"
                FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontWeightKey}}"
                Margin="1 0 0 0">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Credentials: {0}   Region: {1}">
                        <Binding Path="CredentialsIdDisplayName" FallbackValue="(not available)" />
                        <Binding Path="RegionDisplayName" FallbackValue="(not available)" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock 
                FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading3FontSizeKey}}"
                Margin="6 0 0 0">
                <Hyperlink Command="{Binding SelectCredentialsCommand}">Edit</Hyperlink>
            </TextBlock>
        </StackPanel>

        <!-- The Connection Status will only be shown when the connection is not valid.  -->
        <Border
            Margin="0 6 0 0"
            Grid.Row="1" Grid.Column="0"
            BorderThickness="1"
            Background="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipBackgroundBrushKey}}"
            >
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipBorderBrushKey}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Ok}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Validating}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Bad}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ToolkitThemes.ErrorBorderBrushKey}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid Margin="6">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image
                    Grid.Row="0" Grid.Column="0"
                    Height="16"
                    Width="16"
                    VerticalAlignment="Center"
                    >
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="{Binding Source={StaticResource VsImages}, Path=StatusInformation}" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Bad}">
                                    <Setter Property="Source" Value="{Binding Source={StaticResource VsImages}, Path=StatusError}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Ok}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Source" Value="{Binding Source={StaticResource VsImages}, Path=StatusOK}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock 
                    Margin="6 0 0 0"
                    Grid.Row="0" Grid.Column="1"
                    VerticalAlignment="Center"
                    TextWrapping="Wrap"
                    Text="{Binding StatusMessage}" 
                    />

                <!-- The Retry button is only shown when the connection is bad -->
                <Button 
                    Margin="6 0 0 0"
                    Grid.Row="0" Grid.Column="2"
                    VerticalAlignment="Center"
                    Content="Retry"
                    Command="{Binding RetryConnection}"
                    >
                    <Button.Style>
                        <Style 
                            BasedOn="{StaticResource {x:Static themes:ToolkitThemeResourceKeys.ButtonStyle}}"
                            TargetType="{x:Type Button}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static viewModels:ConnectionStatus.Bad}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
