<UserControl x:Class="Amazon.AwsToolkit.CodeWhisperer.Margins.CodeWhispererMarginControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
             xmlns:local="clr-namespace:Amazon.AwsToolkit.CodeWhisperer.Margins"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             themes:ToolkitThemes.UseToolkitTheme="False"
             mc:Ignorable="d" 
             d:DesignHeight="26" d:DesignWidth="64">

    <UserControl.Resources>
        <ResourceDictionary>
            <local:MarginStatusToImageSourceConverter x:Key="MarginStatusToImageSourceConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel 
        x:Name="ParentPanel" x:FieldModifier="private"
        Orientation="Horizontal" 
        VerticalAlignment="Center"
        Background="{DynamicResource {x:Static platformUi:EnvironmentColors.ScrollBarBackgroundBrushKey}}">
        <Button 
            Height="19" MinWidth="50"
            Margin="0" Padding="0"
            PreviewMouseDown="OnPreviewMouseDown">
            <Button.Style>
                <!-- Ideally we'd use themes:ToolkitThemeResourceKeys.ButtonStyle here, but 
                that is initialized when the Toolkit activates, and this control can be 
                displayed before that happens. So we use the same underlying VS Button style
                
                (as seen in vspackages\AwsToolkitPackage.Shared\Themes\BaseToolkitStyles.xaml)

                We're really only interested in the coloring for things like mouseover.
                Otherwise, we want make sure we don't let the button inflate the lower margin height.
                -->
                <Style 
                    BasedOn="{StaticResource {x:Static vsShell:VsResourceKeys.ButtonStyleKey}}"
                    TargetType="{x:Type Button}">
                    <Setter Property="MinHeight" Value="8" />
                </Style>
            </Button.Style>

            <Button.ContextMenu>
                <ContextMenu themes:ToolkitThemes.UseToolkitTheme="True">
                    <MenuItem Header="Sign In" Command="{Binding SignIn}" />
                    <Separator />
                    <MenuItem Header="Generate Code Suggestions" InputGestureText="{Binding GenerateSuggestionsKeyBinding}" Command="{Binding GenerateSuggestions}" />
                    <Separator />
                    <MenuItem Header="Pause CodeWhisperer Suggestions" Command="{Binding Pause}" />
                    <MenuItem Header="Resume CodeWhisperer Suggestions" Command="{Binding Resume}" />
                    <MenuItem Header="Open Code Reference Log" Command="{Binding ViewCodeReferences}" />
                    <MenuItem Header="Perform Security Scan" Command="{Binding SecurityScan}" />
                    <Separator />
                    <MenuItem Header="View User Guide" Command="{Binding ViewUserGuide}" />
                    <MenuItem Header="Getting Started" Command="{Binding GettingStarted}" />
                    <MenuItem Header="View Options" Command="{Binding ViewOptions}" />
                    <Separator />
                    <MenuItem Header="Sign Out" Command="{Binding SignOut}" />
                </ContextMenu>
            </Button.ContextMenu>
            <imaging:CrispImage
                Height="14"
                Width="14"
                VerticalAlignment="Center"
                >
                <imaging:CrispImage.Source>
                    <MultiBinding Converter="{StaticResource MarginStatusToImageSourceConverter}">
                        <Binding Path="MarginStatus" />
                        <Binding ElementName="ParentPanel" Path="Background" />
                    </MultiBinding>
                </imaging:CrispImage.Source>
            </imaging:CrispImage>
        </Button>
    </StackPanel>
</UserControl>
