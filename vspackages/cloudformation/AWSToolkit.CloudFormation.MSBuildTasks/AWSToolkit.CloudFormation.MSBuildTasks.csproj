<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <BuildRoot Condition="'$(BuildRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), root))</BuildRoot>
  </PropertyGroup>
  <Import Project="$(BuildRoot)\buildtools\Common.Build.targets" Condition=" '$(CommonBuildTargetsImported)' == '' " />
  <PropertyGroup>
    <CfMsBuildTargetsOutputPath>$(BuildRoot)\Deployment\cf-msbuild-targets</CfMsBuildTargetsOutputPath>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FE98588C-7FEE-414E-9EAB-F36BF64C88C0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AWSToolkit.CloudFormation.MSBuildTasks</RootNamespace>
    <AssemblyName>AWSToolkit.CloudFormation.MSBuildTasks</AssemblyName>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(OutputRoot)</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(OutputRoot)</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="TemplateCompileTask.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="cloudformation.targets">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <!-- Additional dependency content for the tasks, which we handle in the package project 
       right now, as this triggers the content to also be placed at the vsix root, causing 
       load errors due to multiple copies of awssdk.core. When we figure out output groups, 
       we should be able to do this bundling work here and have it be picked up automatically
       when the package builds.
  <ItemGroup Condition="'$(VisualStudioVersion)' == '15.0'">
    <Content Include="$(BuildRoot)\vspackages\AWSToolkitPackage\Resources\AWSCloudFormationProject.ico">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Link>AWSCloudFormationProject.ico</Link>
    </Content>
    <Content Include="$(BuildRoot)\vspackages\AWSToolkitPackage\Resources\AWSCloudFormationTemplate.ico">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Link>AWSCloudFormationTemplate.ico</Link>
    </Content>
    <Content Include="$(CfMsBuildTargetsOutputPath)\log4net.dll">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Link>log4net.dll</Link>
    </Content>
    <Content Include="$(CfMsBuildTargetsOutputPath)\AWSSDK.Core.dll">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Link>AWSSDK.Core.dll</Link>
    </Content>
    <Content Include="$(CfMsBuildTargetsOutputPath)\AWSToolkit.Util.dll">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Link>AWSToolkit.Util.dll</Link>
    </Content>
  </ItemGroup>
  -->
  <ItemGroup>
    <ProjectReference Include="$(BuildRoot)\vspackages\cloudformation\AWSToolkit.CloudFormation.Parser\AWSToolkit.CloudFormation.Parser.csproj">
      <Project>{4CEE1A45-E01E-4BCC-8145-5C593ADF28BC}</Project>
      <Name>AWSToolkit.CloudFormation.Parser</Name>
      <Private>True</Private>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
</Project>