<platformUi:DialogWindow
    x:Class="AwsToolkit.VsSdk.Common.CommonUI.CloneCodeCatalystRepositoryDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:components="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
    xmlns:images="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:imageTheming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:models="clr-namespace:AwsToolkit.VsSdk.Common.CommonUI.Models"
    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shell15="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shellPf="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    themes:ToolkitThemes.UseToolkitTheme="True"
    Height="700"
    Width="850"
    MinHeight="700"
    MinWidth="850"
    Title="{Binding Heading}"
    ShowInTaskbar="False"
    ResizeMode="CanResizeWithGrip">

    <platformUi:DialogWindow.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter
                x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter
                x:Key="InverseBooleanToVisibilityConverter" />
            <converters:HasValueVisibilityConverter x:Key="HasValueVisibilityConverter"/>
            <commonUi:VsImages
                x:Key="VsImages" />
            <!-- Only show an icon for warning or error states -->
            <Style
                x:Key="ConnectionImage"
                TargetType="Image">
                <Setter
                    Property="Visibility"
                    Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Connection.ConnectionStatus}"
                        Value="{x:Static models:CredentialConnectionStatus.Warning}">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                        <Setter
                            Property="Source"
                            Value="{Binding Source={StaticResource VsImages}, Path=StatusWarning}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Connection.ConnectionStatus}"
                        Value="{x:Static models:CredentialConnectionStatus.Error}">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                        <Setter
                            Property="Source"
                            Value="{Binding Source={StaticResource VsImages}, Path=StatusError}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Connection.IsConnectionValid}"
                        Value="True">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                        <Setter
                            Property="Source"
                            Value="{Binding Source={StaticResource VsImages}, Path=StatusOK}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <commonUi:ToolkitImages
                x:Key="ToolkitImages" />
            <Style
                x:Key="CloseDialogButtonStyle"
                TargetType="{x:Type Button}"
                BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipTextBrushKey}}" />
            </Style>
            <Style
                x:Key="ValidationBorderStyle"
                TargetType="{x:Type Border}">
                <Setter
                    Property="BorderThickness"
                    Value="0" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Connection.IsConnectionBad}"
                        Value="True">
                        <Setter
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static themes:ToolkitThemes.ErrorBorderBrushKey}}" />
                        <Setter
                            Property="BorderThickness"
                            Value="1" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <imaging:CrispImage
                x:Key="ErrorIcon"
                x:Shared="False"
                Height="16"
                Moniker="{x:Static images:KnownMonikers.StatusInvalid}"
                VerticalAlignment="Center"
                Width="16" />
            <Style
                TargetType="{x:Type components:ValidationErrorsBox}">
                <Setter
                    Property="Margin"
                    Value="0 6 0 0" />
                <Setter
                    Property="Icon"
                    Value="{StaticResource ErrorIcon}" />
            </Style>
        </ResourceDictionary>
    </platformUi:DialogWindow.Resources>

    <!-- https://learn.microsoft.com/en-us/dotnet/api/system.windows.shell.windowchrome?view=netframework-4.7.2 -->
    <shellPf:WindowChrome.WindowChrome>
        <!-- CornerRadius requires GlassFrameThickness="0" -->
        <shellPf:WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="5"
            UseAeroCaptionButtons="False" />
    </shellPf:WindowChrome.WindowChrome>

    <platformUi:DialogWindow.ContentTemplate>
        <DataTemplate>
            <Grid
                imageTheming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
                <Border
                    Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowBorderBrushKey}}">
                    <DockPanel
                        LastChildFill="True">
                        <Button
                            DockPanel.Dock="Top"
                            Content="&#x2715;"
                            Style="{StaticResource CloseDialogButtonStyle}"
                            Margin="0 0 6 0"
                            HorizontalAlignment="Right"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CancelDialogCommand}" />
                        <!-- https://github.com/github/VisualStudio/blob/master/src/GitHub.VisualStudio.UI/Views/Dialog/GitHubDialogWindow.xaml -->
                        <!-- DO THIS BEFORE MERGING TO MAIN
                        TOOD Microsoft.VisualStudio.Shell.ViewManager is part of VS, but not available in NuGet.  We don't want to maintain this
                        assembly in the thirdparty folder and not even sure if we can use it (i.e. does VS license allow for this?)  Do a little 
                        research to determine how others are using GlyphButton and getting access to this deal.  The GitHub extension above does 
                        embed the DLL in the repo, but GitHub is also owned by MS.  If using that assembly is not an option, consider if creating
                        a similar GlyphButton of our own is low work, high value enough to do.  Otherwise, find another way to make the close button.
                        If GlyphButton cannot be used, remove this comment before releasing to main.
                        <shellControls:GlyphButton 
                            x:Name="CloseButton"
                            shellPf:WindowChrome.IsHitTestVisibleInChrome="True"
                            Width="46"
                            Height="33"
                            DockPanel.Dock="Top"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Background="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonBrushKey}}"
                            GlyphForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonGlyphBrushKey}}"
                            HoverBackground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverBrushKey}}"
                            HoverForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverGlyphBrushKey}}"
                            HoverBorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverBorderBrushKey}}"
                            PressedBackground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownBrushKey}}"
                            PressedForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownGlyphBrushKey}}"
                            PressedBorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownBorderBrushKey}}"
                            IsCancel="True">
                            <Path 
                                Width="16"
                                Height="16"
                                Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                Data="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z"/>
                        </shellControls:GlyphButton>
                        -->
                        <ContentControl
                            Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </DockPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </platformUi:DialogWindow.ContentTemplate>

    <DockPanel
        Margin="24 0 24 24">
        <Grid
            DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel
                Orientation="Horizontal"
                Grid.Row="0">

                <Image
                    Source="{Binding Source={StaticResource ToolkitImages}, Path=CodeCatalyst}"
                    Margin="0 0 6 0"
                    VerticalAlignment="Center" />
                <!-- 
                    TODO Maintain this comment in the ThemedDialog class when it is written. The ThemedDialog.HeaderText will be a DepedencyProperty
                    and this TextBlock will no longer be defined in XAML for types deriving from ThemedDialog.  
            
                    Per https://learn.microsoft.com/en-us/visualstudio/extensibility/ux-guidelines/layout-for-visual-studio?view=vs-2022
                    Themed dialogs must have the 200% header size VsFonts.Environment200PercentFontSizeKey  The ToolkitThemes.Heading1FontSizeKey
                    is set to this size, so it is safe to use here.  Should it change from 200%, FontSize here will need to be refactored.
                -->
                <TextBlock
                    FontFamily="{DynamicResource {x:Static shell15:VsFonts.EnvironmentFontFamilyKey}}"
                    FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontSizeKey}}"
                    FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontWeightKey}}"
                    Text="{Binding Heading}"
                    d:Text="Clone an Amazon CodeCatalyst repository"
                    RenderOptions.ClearTypeHint="Enabled"
                    VerticalAlignment="Center" />
            </StackPanel>

            <TextBlock
                Grid.Row="1"
                Margin="0 12 0 0">
            <!-- TODO IDE-8974 Update this when we have the marketing page link -->
            <commonUi:BrowserHyperLink
                    NavigateUri="https://aws.amazon.com/codecatalyst/">
                <Run
                        Text="Learn more about Amazon CodeCatalyst" />
            </commonUi:BrowserHyperLink>
            </TextBlock>
        </Grid>

        <Grid
            DockPanel.Dock="Bottom"
            Margin="0 16 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                HorizontalAlignment="Left"
                Command="{Binding HelpCommand}">
                Help
            </Button>

            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    IsDefault="True"
                    Command="{Binding SubmitDialogCommand}">
                    Clone
                </Button>
                <Button
                    IsCancel="True"
                    Margin="6 0 0 0"
                    Command="{Binding CancelDialogCommand}">
                    Cancel
                </Button>
            </StackPanel>
        </Grid>

        <ScrollViewer
            VerticalScrollBarVisibility="Auto">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0 24 0 0">
                    Credential:
                </TextBlock>


                <Grid
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Margin="0 9 0 0">

                    <Button
                        Visibility="{Binding IsConnected, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                        Command="{Binding LoginCommand}"
                        Content="Connect with AWS Builder ID" />

                    <StackPanel
                        HorizontalAlignment="Left"
                        themes:ToolkitThemes.UseToolkitTheme="True"
                        Orientation="Horizontal"
                        Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image
                            Margin="0 0 6 0 "
                            Height="16"
                            Width="16"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Style="{StaticResource ConnectionImage}" />

                        <TextBlock
                            Text="{Binding ConnectedUser}" />
                        <TextBlock
                            Margin="12 0 0 0"
                            Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Hyperlink
                                Command="{Binding LogoutCommand}">
                                Logout
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </Grid>

                <!--This is intentionally left space between the connection settings and any validation error messages-->
                <Separator
                    Background="Transparent"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"
                    Height="6"
                    Visibility="{Binding Connection.IsConnectionBad, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <Grid
                    Grid.Row="3"
                    Grid.ColumnSpan="3"
                    themes:ToolkitThemes.UseToolkitTheme="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto" />
                        <ColumnDefinition
                            Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style
                            TargetType="Grid">
                            <Setter Property="Visibility"
                                    Value="{Binding Connection.IsConnectionValid, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                            <Style.Triggers>
                                <!--Do not show validation failures for when a identifier selection has not been made or a message is not present-->
                                <DataTrigger
                                    Binding="{Binding Connection.ConnectionMessage, Converter={StaticResource HasValueVisibilityConverter}}"
                                    Value="Collapsed">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding Connection.CredentialIdentifier}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <!-- Give the whole grid a "info" background color if the Connection is not valid. -->
                                <DataTrigger
                                    Binding="{Binding Connection.IsConnectionBad}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="{DynamicResource {x:Static themes:ToolkitThemes.InfoBackgroundKey}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Image
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="6 0 6 0 "
                        Height="16"
                        Width="16"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Style="{StaticResource ConnectionImage}" />

                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="0 6 0 6"
                        HorizontalAlignment="Left"
                        themes:ToolkitThemes.UseToolkitTheme="True"
                        Orientation="Vertical">
                        <TextBlock
                            d:Text="Validation Failure Messages go here"
                            themes:ToolkitThemes.UseToolkitTheme="True"
                            Text="{Binding Connection.ConnectionMessage}"
                            TextWrapping="WrapWithOverflow">
                            <TextBlock.Style>
                                <Style
                                    TargetType="{x:Type TextBlock}">
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Connection.IsConnectionBad}"
                                            Value="True">
                                            <Setter
                                                Property="Foreground"
                                                Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipTextBrushKey}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock
                            Text="Reconnect to continue."
                            Visibility="{Binding Connection.IsConnectionBad, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>
                </Grid>

                <TextBlock
                    Grid.Row="4"
                    Grid.ColumnSpan="3"
                    Margin="0 24 0 0">
                    Space:
                </TextBlock>

                <Grid
                    Grid.Row="5"
                    Grid.ColumnSpan="2">
                    <ComboBox
                        x:Name="SpacesComboBox"
                        IsEnabled="{Binding IsSpacesEnabled}"
                        ItemsSource="{Binding Spaces}"
                        Margin="0 6 0 0"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedSpace}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Center">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding DisplayName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock
                        Margin="6 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsSpacesEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No spaces found.
                    </TextBlock>
                </Grid>

                <components:ValidationErrorsBox
                    Grid.Row="6"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetrySpacesCommand}"
                    SourceElement="{x:Reference SpacesComboBox}" />

                <TextBlock
                    Grid.Row="7"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    Project:
                </TextBlock>

                <Grid
                    Grid.Row="8"
                    Grid.ColumnSpan="2">
                    <ComboBox
                        x:Name="ProjectsComboBox"
                        IsEnabled="{Binding IsProjectsEnabled}"
                        ItemsSource="{Binding Projects}"
                        Margin="0 6 0 0"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedProject}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Center">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding DisplayName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock
                        Margin="6 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsProjectsEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No projects found.
                    </TextBlock>
                </Grid>

                <components:ValidationErrorsBox
                    Grid.Row="9"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetryProjectsCommand}"
                    SourceElement="{x:Reference ProjectsComboBox}" />

                <TextBlock
                    Grid.Row="10"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    Repository:
                </TextBlock>

                <Grid
                    Grid.Row="11"
                    Grid.ColumnSpan="3">
                    <ListBox
                        x:Name="RepositoriesListBox"
                        IsEnabled="{Binding IsRepositoriesEnabled}"
                        ItemsSource="{Binding Repositories}"
                        Margin="0 6 0 0"
                        MinHeight="{Binding Height, ElementName=ProjectsComboBox}"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedRepository}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition
                                            Height="Auto" />
                                        <RowDefinition
                                            Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="0" />

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        FontWeight="{DynamicResource {x:Static shell15:VsFonts.EnvironmentBoldFontWeightKey}}"
                                        Text="{Binding Name}" />

                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Text="{Binding Description}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Margin="0 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsRepositoriesEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No repositories found.
                    </TextBlock>
                </Grid>

                <components:ValidationErrorsBox
                    Grid.Row="12"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetryRepositoriesCommand}"
                    SourceElement="{x:Reference RepositoriesListBox}" />

                <TextBlock
                    Grid.Row="13"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    Path:
                </TextBlock>

                <Grid
                    Grid.Row="14"
                    Grid.ColumnSpan="3"
                    IsEnabled="{Binding Connection.IsConnectionValid}"
                    Margin="0 6 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        x:Name="LocalPathTextBox"
                        Grid.Column="0"
                        Text="{Binding LocalPath}"
                        Validation.ErrorTemplate="{x:Null}" />
                    <Button
                        Grid.Column="1"
                        Command="{Binding BrowseForRepositoryPathCommand}"
                        Height="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}"
                        Margin="6 0 0 0"
                        VerticalAlignment="Center"
                        MinWidth="23"
                        Width="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}">
                        ...
                    </Button>
                </Grid>

                <components:ValidationErrorsBox
                    Grid.Row="15"
                    Grid.ColumnSpan="3"
                    SourceElement="{x:Reference LocalPathTextBox}" />

            </Grid>
        </ScrollViewer>
    </DockPanel>
</platformUi:DialogWindow>
