<local:ThemedDialogWindow
    x:Class="AwsToolkit.VsSdk.Common.CommonUI.CloneCodeCatalystRepositoryDialog"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:behaviors="clr-namespace:AwsToolkit.VsSdk.Common.CommonUI.Behaviors"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
    xmlns:images="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:imageTheming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:local="clr-namespace:AwsToolkit.VsSdk.Common.CommonUI"
    xmlns:models="clr-namespace:CodeCatalyst.ViewModels"
    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shell15="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    themes:ToolkitThemes.UseToolkitTheme="True"
    behaviors:WindowBehavior.BindDialogResult="{Binding DialogResult}"
    Height="700"
    Width="850"
    MinHeight="700"
    MinWidth="850"
    Title="{Binding Heading}">

    <local:ThemedDialogWindow.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanToVisibilityConverter
                x:Key="InverseBooleanToVisibilityConverter" />
            <converters:HasValueVisibilityConverter x:Key="HasValueVisibilityConverter"/>
            <commonUi:VsImages
                x:Key="VsImages" />
            <commonUi:ToolkitImages
                x:Key="ToolkitImages" />
            <Style
                x:Key="ValidationBorderStyle"
                TargetType="{x:Type Border}">
                <Setter
                    Property="BorderThickness"
                    Value="0" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Connection.IsConnectionBad}"
                        Value="True">
                        <Setter
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static themes:ToolkitThemes.ErrorBorderBrushKey}}" />
                        <Setter
                            Property="BorderThickness"
                            Value="1" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <imaging:CrispImage
                x:Key="ErrorIcon"
                x:Shared="False"
                Height="16"
                Moniker="{x:Static images:KnownMonikers.StatusInvalid}"
                VerticalAlignment="Center"
                Width="16" />
            <Style
                TargetType="{x:Type local:ValidationErrorsBox}">
                <Setter
                    Property="Margin"
                    Value="0 6 0 0" />
                <Setter
                    Property="Icon"
                    Value="{StaticResource ErrorIcon}" />
            </Style>
            <DataTemplate DataType="{x:Type models:CodeCatalystConnectionStatus}">
                <Grid themes:ToolkitThemes.UseToolkitTheme="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="9" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="12" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Image
                        Grid.Row="0" Grid.Column="0" 
                        Height="16"
                        Width="16"
                        Source="{Binding Image}"
                        />
                    <TextBlock 
                        Grid.Row="0" Grid.Column="2" 
                        Text="{Binding Text}" 
                        d:Text="Status text"
                        />
                    <TextBlock 
                        Grid.Row="0" Grid.Column="4" 
                        >
                        <Hyperlink Command="{Binding Command}">
                            <TextBlock
                                Text="{Binding CommandText}" 
                                d:Text="Command Text"
                                />
                        </Hyperlink>
                    </TextBlock>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </local:ThemedDialogWindow.Resources>

    <DockPanel
        imageTheming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, ElementName=Root}"
        Margin="24 0 24 24">
        <Grid
            DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel
                Orientation="Horizontal"
                Grid.Row="0">

                <Image
                    Source="{Binding Source={StaticResource ToolkitImages}, Path=CodeCatalyst}"
                    Margin="0 0 6 0"
                    VerticalAlignment="Center" />
                <!-- 
                    TODO Maintain this comment in the ThemedDialog class when it is written. The ThemedDialog.HeaderText will be a DepedencyProperty
                    and this TextBlock will no longer be defined in XAML for types deriving from ThemedDialog.  
            
                    Per https://learn.microsoft.com/en-us/visualstudio/extensibility/ux-guidelines/layout-for-visual-studio?view=vs-2022
                    Themed dialogs must have the 200% header size VsFonts.Environment200PercentFontSizeKey  The ToolkitThemes.Heading1FontSizeKey
                    is set to this size, so it is safe to use here.  Should it change from 200%, FontSize here will need to be refactored.
                -->
                <TextBlock
                    FontFamily="{DynamicResource {x:Static shell15:VsFonts.EnvironmentFontFamilyKey}}"
                    FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontSizeKey}}"
                    FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontWeightKey}}"
                    Text="{Binding Heading}"
                    d:Text="Clone an Amazon CodeCatalyst repository"
                    RenderOptions.ClearTypeHint="Enabled"
                    VerticalAlignment="Center" />
            </StackPanel>

            <TextBlock
                Grid.Row="1"
                Margin="0 12 0 0">
            <commonUi:BrowserHyperLink
                    NavigateUri="https://codecatalyst.aws/explore">
                <Run
                        Text="Learn more about Amazon CodeCatalyst" />
            </commonUi:BrowserHyperLink>
            </TextBlock>
        </Grid>

        <Grid
            DockPanel.Dock="Bottom"
            Margin="0 16 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                HorizontalAlignment="Left"
                Command="{Binding HelpCommand}">
                Help
            </Button>

            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    IsDefault="True"
                    Command="{Binding SubmitDialogCommand}">
                    Clone
                </Button>
                <Button
                    IsCancel="True"
                    Margin="6 0 0 0"
                    Command="{Binding CancelDialogCommand}">
                    Cancel
                </Button>
            </StackPanel>
        </Grid>

        <ScrollViewer
            VerticalScrollBarVisibility="Auto">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0 24 0 0">
                    Connection:
                </TextBlock>

                <!-- Display the Connection status and associated command -->
                <!-- Uses a DataTemplate for objects of type CodeCatalystConnectionStatus -->
                <ContentControl
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0 6 0 0"
                    Content="{Binding ConnectionStatus}"
                    />

                <!-- Display connection validation failures -->
                <Grid
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0 6 0 0"
                    Background="{DynamicResource {x:Static themes:ToolkitThemes.InfoBackgroundKey}}"
                    Visibility="{Binding ConnectionFailure, Converter={StaticResource HasValueVisibilityConverter}}"
                    >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto" />
                        <ColumnDefinition
                            Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="9 0 0 0"
                        Height="16"
                        Width="16"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="{Binding Source={StaticResource VsImages}, Path=StatusError}"
                        />

                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="9"
                        HorizontalAlignment="Left"
                        themes:ToolkitThemes.UseToolkitTheme="True"
                        Orientation="Vertical">

                        <!-- CAUTION 
                        
                        ToolkitThemes.InfoTextBrushKey does not compute correctly in VS 2022, resulting in an always black brush.
                        It renders properly in VS 2019.
                        
                        The workaround here is to directly use EnvironmentColors.SystemInfoTextBrushKey, since 
                        we are in a project that has access to the VS SDK.
                        -->
                        <TextBlock
                            Foreground="{DynamicResource {x:Static platformUi:EnvironmentColors.SystemInfoTextBrushKey}}"
                            d:Text="Validation Failure Messages go here"
                            Text="{Binding ConnectionFailure}"
                            TextWrapping="WrapWithOverflow"
                            />
                    </StackPanel>
                </Grid>

                <TextBlock
                    Grid.Row="4"
                    Grid.ColumnSpan="3"
                    Margin="0 24 0 0">
                    Space:
                </TextBlock>

                <Grid
                    Grid.Row="5"
                    Grid.ColumnSpan="2">
                    <ComboBox
                        x:Name="SpacesComboBox"
                        IsEnabled="{Binding IsSpacesEnabled}"
                        ItemsSource="{Binding Spaces}"
                        Margin="0 6 0 0"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedSpace}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Center">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding DisplayName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock
                        Margin="6 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource {x:Static platformUi:CommonControlsColors.TextBoxTextDisabledBrushKey}}"
                        Visibility="{Binding IsSpacesEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No spaces found.
                    </TextBlock>
                </Grid>

                <local:ValidationErrorsBox
                    Grid.Row="6"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetrySpacesCommand}"
                    SourceElement="{x:Reference SpacesComboBox}" />

                <TextBlock
                    Grid.Row="7"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    Project:
                </TextBlock>

                <Grid
                    Grid.Row="8"
                    Grid.ColumnSpan="2">
                    <ComboBox
                        x:Name="ProjectsComboBox"
                        IsEnabled="{Binding IsProjectsEnabled}"
                        ItemsSource="{Binding Projects}"
                        Margin="0 6 0 0"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedProject}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Center">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding DisplayName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock
                        Margin="6 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource {x:Static platformUi:CommonControlsColors.TextBoxTextDisabledBrushKey}}"
                        Visibility="{Binding IsProjectsEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No projects found.
                    </TextBlock>
                </Grid>

                <local:ValidationErrorsBox
                    Grid.Row="9"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetryProjectsCommand}"
                    SourceElement="{x:Reference ProjectsComboBox}" />

                <TextBlock
                    Grid.Row="10"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    CodeCatalyst Repository:
                </TextBlock>

                <Grid
                    Grid.Row="11"
                    Grid.ColumnSpan="3">
                    <ListBox
                        x:Name="RepositoriesListBox"
                        IsEnabled="{Binding IsRepositoriesEnabled}"
                        ItemsSource="{Binding Repositories}"
                        Margin="0 6 0 0"
                        MinHeight="{Binding Height, ElementName=ProjectsComboBox}"
                        Panel.ZIndex="0"
                        SelectedItem="{Binding SelectedRepository}"
                        Validation.ErrorTemplate="{x:Null}"
                        VerticalAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition
                                            Height="Auto" />
                                        <RowDefinition
                                            Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="0" />

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        FontWeight="{DynamicResource {x:Static shell15:VsFonts.EnvironmentBoldFontWeightKey}}"
                                        Text="{Binding Name}" />

                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Text="{Binding Description}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Margin="0 6 0 0"
                        Panel.ZIndex="1"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource {x:Static platformUi:CommonControlsColors.ComboBoxGlyphDisabledBrushKey}}"
                        Visibility="{Binding IsRepositoriesEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        No repositories found.
                    </TextBlock>
                </Grid>

                <local:ValidationErrorsBox
                    Grid.Row="12"
                    Grid.ColumnSpan="3"
                    RetryCommand="{Binding RetryRepositoriesCommand}"
                    SourceElement="{x:Reference RepositoriesListBox}" />

                <TextBlock
                    Grid.Row="13"
                    Grid.ColumnSpan="3"
                    Margin="0 16 0 0">
                    Path:
                </TextBlock>

                <Grid
                    Grid.Row="14"
                    Grid.ColumnSpan="3"
                    IsEnabled="{Binding IsLocalPathEnabled}"
                    Margin="0 6 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        x:Name="LocalPathTextBox"
                        Grid.Column="0"
                        Text="{Binding LocalPath, Delay=500, UpdateSourceTrigger=PropertyChanged}"
                        Validation.ErrorTemplate="{x:Null}" />
                    <Button
                        Grid.Column="1"
                        Command="{Binding BrowseForRepositoryPathCommand}"
                        Height="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}"
                        Margin="6 0 0 0"
                        VerticalAlignment="Center"
                        MinWidth="23"
                        Width="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}">
                        ...
                    </Button>
                </Grid>

                <local:ValidationErrorsBox
                    Grid.Row="15"
                    Grid.ColumnSpan="3"
                    SourceElement="{x:Reference LocalPathTextBox}" />

            </Grid>
        </ScrollViewer>
    </DockPanel>
</local:ThemedDialogWindow>
