<platformUi:DialogWindow
    x:Class="AwsToolkit.VsSdk.Common.CommonUI.CloneCodeCommitRepositoryDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:components="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shell15="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shellPf="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    themes:ToolkitThemes.UseToolkitTheme="True"
    Height="600"
    Width="800"
    MinHeight="600"
    MinWidth="800"
    ResizeMode="CanResizeWithGrip">

    <platformUi:DialogWindow.Resources>
        <ResourceDictionary>
            <commonUi:ToolkitImages x:Key="ToolkitImages" />
            <Style x:Key="CloseDialogButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  >
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipTextBrushKey}}" />
            </Style>
        </ResourceDictionary>
    </platformUi:DialogWindow.Resources>

    <!-- https://learn.microsoft.com/en-us/dotnet/api/system.windows.shell.windowchrome?view=netframework-4.7.2 -->
    <shellPf:WindowChrome.WindowChrome>
        <!-- CornerRadius requires GlassFrameThickness="0" -->
        <shellPf:WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="5"
            UseAeroCaptionButtons="False" />
    </shellPf:WindowChrome.WindowChrome>
    
    <platformUi:DialogWindow.ContentTemplate>
        <DataTemplate>
            <Grid>
                <Border
                    Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowBorderBrushKey}}">
                    <DockPanel LastChildFill="True">
                        <Button 
                            DockPanel.Dock="Top"
                            Content="&#x2715;"
                            Style="{StaticResource CloseDialogButtonStyle}"
                            IsCancel="True"
                            Margin="0 0 6 0"
                            HorizontalAlignment="Right"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center" />
                        <!-- https://github.com/github/VisualStudio/blob/master/src/GitHub.VisualStudio.UI/Views/Dialog/GitHubDialogWindow.xaml -->
                        <!-- DO THIS BEFORE MERGING TO MAIN
                        TOOD Microsoft.VisualStudio.Shell.ViewManager is part of VS, but not available in NuGet.  We don't want to maintain this
                        assembly in the thirdparty folder and not even sure if we can use it (i.e. does VS license allow for this?)  Do a little 
                        research to determine how others are using GlyphButton and getting access to this deal.  The GitHub extension above does 
                        embed the DLL in the repo, but GitHub is also owned by MS.  If using that assembly is not an option, consider if creating
                        a similar GlyphButton of our own is low work, high value enough to do.  Otherwise, find another way to make the close button.
                        If GlyphButton cannot be used, remove this comment before releasing to main.
                        <shellControls:GlyphButton 
                            x:Name="CloseButton"
                            shellPf:WindowChrome.IsHitTestVisibleInChrome="True"
                            Width="46"
                            Height="33"
                            DockPanel.Dock="Top"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Background="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonBrushKey}}"
                            GlyphForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonGlyphBrushKey}}"
                            HoverBackground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverBrushKey}}"
                            HoverForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverGlyphBrushKey}}"
                            HoverBorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonHoverBorderBrushKey}}"
                            PressedBackground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownBrushKey}}"
                            PressedForeground="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownGlyphBrushKey}}"
                            PressedBorderBrush="{DynamicResource {x:Static platformUi:ThemedDialogColors.WindowButtonDownBorderBrushKey}}"
                            IsCancel="True">
                            <Path 
                                Width="16"
                                Height="16"
                                Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                Data="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z"/>
                        </shellControls:GlyphButton>
                        -->
                        <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </DockPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </platformUi:DialogWindow.ContentTemplate>

    <Grid Margin="24 0 24 24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel 
            Orientation="Horizontal"
            Grid.Row="0"
            Grid.ColumnSpan="3">
            <Image
               Source="{Binding Source={StaticResource ToolkitImages}, Path=CodeCommit}"
               Width="24"
               Height="24"
               Margin="0 0 6 0"
               VerticalAlignment="Center" />
            <!-- 
            TODO Maintain this comment in the ThemedDialog class when it is written. The ThemedDialog.HeaderText will be a DepedencyProperty
            and this TextBlock will no longer be defined in XAML for types deriving from ThemedDialog.  
            
            Per https://learn.microsoft.com/en-us/visualstudio/extensibility/ux-guidelines/layout-for-visual-studio?view=vs-2022
            Themed dialogs must have the 200% header size VsFonts.Environment200PercentFontSizeKey  The ToolkitThemes.Heading1FontSizeKey
            is set to this size, so it is safe to use here.  Should it change from 200%, FontSize here will need to be refactored.
            -->
            <TextBlock 
                FontFamily="{DynamicResource {x:Static shell15:VsFonts.EnvironmentFontFamilyKey}}"
                FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontSizeKey}}"
                FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontWeightKey}}"
                RenderOptions.ClearTypeHint="Enabled"
                VerticalAlignment="Center">
                Clone an AWS CodeCommit repository
            </TextBlock>
        </StackPanel>

        <TextBlock 
            Grid.Row="1" 
            Grid.ColumnSpan="3"
            Margin="0 12 0 0">
            <commonUi:BrowserHyperLink
                NavigateUri="https://aws.amazon.com/codecommit/">
                <Run Text="Learn more about AWS CodeCommit" />
            </commonUi:BrowserHyperLink>
        </TextBlock>

        <TextBlock
            Grid.Row="2"
            Grid.ColumnSpan="3"
            Margin="0 24 0 0">
            Profile:
        </TextBlock>

        <components:CredentialsSelector 
            Grid.Row="3"
            Grid.ColumnSpan="2" 
            Account="{Binding SelectedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Accounts="{Binding Accounts}"
            Margin="0 6 0 0"
            Height="{Binding ElementName=RegionsComboBox, Path=ActualHeight}" />

        <TextBlock
            Grid.Row="4"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            Region:
        </TextBlock>

        <ComboBox 
            x:Name="RegionsComboBox"            
            Grid.Row="5"
            Grid.ColumnSpan="2"
            Margin="0 6 0 0"
            VerticalAlignment="Center"
            ItemsSource="{Binding Regions}"
            SelectedItem="{Binding SelectedRegion}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock 
                            Text="{Binding DisplayName}" />
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <TextBlock
            Grid.Row="6"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            Repository:
        </TextBlock>

        <ListBox
            Grid.Row="7"
            Grid.ColumnSpan="3"
            ItemsSource="{Binding Repositories}"
            Margin="0 6 0 0"
            SelectedItem="{Binding SelectedRepository}"
            VerticalAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Rectangle 
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="0" />

                        <TextBlock 
                            Grid.Row="0"
                            Grid.Column="1"
                            FontWeight="{DynamicResource {x:Static shell15:VsFonts.EnvironmentBoldFontWeightKey}}"
                            Text="{Binding Name}"/>

                        <TextBlock 
                            Grid.Row="1"
                            Grid.Column="1"
                            Text="{Binding Description}"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBlock
            Grid.Row="8"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            Path:
        </TextBlock>

        <Grid
            Grid.Row="9"
            Grid.ColumnSpan="3"
            Margin="0 6 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                x:Name="LocalPathTextBox"
                Grid.Column="0"
                Text="{Binding LocalPath}" />
            <Button 
                Grid.Column="1"
                Command="{Binding BrowseForRepositoryPathCommand}"
                Height="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}"
                Margin="6 0 0 0"
                VerticalAlignment="Center"
                MinWidth="23"
                Width="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}">
                ...
            </Button>
        </Grid>

        <Grid
            Grid.Row="10"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                HorizontalAlignment="Left"
                Command="{Binding HelpCommand}">
                Help
            </Button>

            <StackPanel 
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    IsDefault="True"
                    Command="{Binding SubmitDialogCommand}">
                    Clone
                </Button>
                <Button 
                    IsCancel="True"
                    Margin="6 0 0 0">
                    Cancel
                </Button>
            </StackPanel>
        </Grid>

    </Grid>
</platformUi:DialogWindow>
