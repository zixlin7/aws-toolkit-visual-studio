<local:ThemedDialogWindow
    x:Class="AwsToolkit.VsSdk.Common.CommonUI.CloneCodeCommitRepositoryDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:commonUi="clr-namespace:Amazon.AWSToolkit.CommonUI;assembly=AWSToolkit"
    xmlns:components="clr-namespace:Amazon.AWSToolkit.CommonUI.Components;assembly=AWSToolkit"
    xmlns:local="clr-namespace:AwsToolkit.VsSdk.Common.CommonUI"
    xmlns:shell15="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit"
    xmlns:models="clr-namespace:AwsToolkit.VsSdk.Common.CommonUI.Models"
    xmlns:converters="clr-namespace:Amazon.AWSToolkit.CommonUI.Converters;assembly=AWSToolkit"
    themes:ToolkitThemes.UseToolkitTheme="True"
    CloseCommand="{Binding CancelDialogCommand}"
    Height="600"
    Width="800"
    MinHeight="600"
    MinWidth="800"
    Title="{Binding Heading}">

    <local:ThemedDialogWindow.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <commonUi:VsImages x:Key="VsImages" />
            <!-- Only show an icon for warning or error states -->
            <Style x:Key="ConnectionImage" TargetType="Image">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Connection.ConnectionStatus}"
                                 Value="{x:Static models:CredentialConnectionStatus.Warning}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Source"
                                Value="{Binding Source={StaticResource VsImages}, Path=StatusWarning}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Connection.ConnectionStatus}"
                                 Value="{x:Static models:CredentialConnectionStatus.Error}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Source"
                                Value="{Binding Source={StaticResource VsImages}, Path=StatusError}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Connection.IsConnectionValid}"
                                 Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Source"
                                Value="{Binding Source={StaticResource VsImages}, Path=StatusOK}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <commonUi:ToolkitImages x:Key="ToolkitImages" />
            <Style x:Key="ValidationBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Connection.IsConnectionBad}" Value="True">
                        <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ToolkitThemes.ErrorBorderBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </local:ThemedDialogWindow.Resources>

    <Grid Margin="24 0 24 24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Orientation="Horizontal"
            Grid.Row="0"
            Grid.ColumnSpan="3">
            <Image
                Source="{Binding Source={StaticResource ToolkitImages}, Path=CodeCommit}"
                Width="24"
                Height="24"
                Margin="0 0 6 0"
                VerticalAlignment="Center" />
            <!-- 
            TODO Maintain this comment in the ThemedDialog class when it is written. The ThemedDialog.HeaderText will be a DepedencyProperty
            and this TextBlock will no longer be defined in XAML for types deriving from ThemedDialog.  
            
            Per https://learn.microsoft.com/en-us/visualstudio/extensibility/ux-guidelines/layout-for-visual-studio?view=vs-2022
            Themed dialogs must have the 200% header size VsFonts.Environment200PercentFontSizeKey  The ToolkitThemes.Heading1FontSizeKey
            is set to this size, so it is safe to use here.  Should it change from 200%, FontSize here will need to be refactored.
            -->
            <TextBlock
                FontFamily="{DynamicResource {x:Static shell15:VsFonts.EnvironmentFontFamilyKey}}"
                FontSize="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontSizeKey}}"
                FontWeight="{DynamicResource {x:Static themes:ToolkitThemes.Heading1FontWeightKey}}"
                Text="{Binding Heading}"
                d:Text="Clone an AWS CodeCommit repository"
                RenderOptions.ClearTypeHint="Enabled"
                VerticalAlignment="Center" />
        </StackPanel>

        <TextBlock
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Margin="0 12 0 0">
            <commonUi:BrowserHyperLink
                NavigateUri="https://aws.amazon.com/codecommit/">
                <Run Text="Learn more about AWS CodeCommit" />
            </commonUi:BrowserHyperLink>
        </TextBlock>
 
        <TextBlock
            Grid.Row="2"
            Grid.Column="0"
            VerticalAlignment="Center"
            Margin="0 24 0 0"
            Text="Credentials:" />

        <Border
            Grid.Row="3" 
            Grid.ColumnSpan="2"  
            Margin="0 6 0 0"
            Style="{StaticResource ValidationBorderStyle}">
            <components:CredentialIdentitySelector
                Identifier="{Binding Connection.CredentialIdentifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Identifiers="{Binding Connection.Credentials, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
        </Border>

        <TextBlock
            Grid.Row="4"
            Grid.Column="0"
            VerticalAlignment="Center"
            Margin="0 16 0 0"
            Text="Region:" />

        <Border 
            Grid.Row="5"
            Grid.ColumnSpan="2" 
            Margin="0 6 0 0"
            Style="{StaticResource ValidationBorderStyle}">
            <ComboBox
                VerticalAlignment="Center"
                MinWidth="100"
                SelectedItem="{Binding Connection.Region}"
                ItemsSource="{Binding Connection.Regions}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding DisplayName}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Border>

        <!--This is intentionally left space between the connection settings and any validation error messages-->
        <Separator 
            Background="Transparent"  
            Grid.Row="6" 
            Grid.ColumnSpan="3" 
            Height="6" 
            Visibility="{Binding Connection.IsConnectionBad, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Grid Grid.Row="7" Grid.ColumnSpan="3"
              themes:ToolkitThemes.UseToolkitTheme="True"
              Visibility="{Binding Connection.IsConnectionValid, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <!-- Give the whole grid a "info" background color if the Connection is not valid. -->
                        <DataTrigger Binding="{Binding Connection.IsConnectionBad}" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static themes:ToolkitThemes.InfoBackgroundKey}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Image
                Grid.Row="0"
                Grid.Column="0"
                Margin="6 9 6 0 "
                Height="16" Width="16"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Style="{StaticResource ConnectionImage}" />

            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="0 9 0 9"
                HorizontalAlignment="Left"
                Orientation="Vertical">
                <TextBlock
                    d:Text="Validation Failure Messages go here"
                    themes:ToolkitThemes.UseToolkitTheme="True"
                    Text="{Binding Connection.ConnectionMessage}" >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ToolkitThemes.HintTextBrushKey}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Connection.IsConnectionBad}" Value="True">
                                    <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static themes:ToolkitThemes.ToolTipTextBrushKey}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock
                    Margin="0 3 0 0"
                    Visibility="{Binding Connection.IsConnectionBad, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Hyperlink Command="{Binding Connection.RetryCommand}">
                        Retry
                    </Hyperlink>
                </TextBlock>
            </StackPanel>
        </Grid>

        <TextBlock
            Grid.Row="8"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            Repository:
        </TextBlock>

        <ListBox
            Grid.Row="9"
            Grid.ColumnSpan="3"
            IsEnabled="{Binding Connection.IsConnectionValid}"
            ItemsSource="{Binding Repositories}"
            Margin="0 6 0 0"
            SelectedItem="{Binding SelectedRepository}"
            VerticalAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Rectangle
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="0" />

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="1"
                            FontWeight="{DynamicResource {x:Static shell15:VsFonts.EnvironmentBoldFontWeightKey}}"
                            Text="{Binding Name}" />

                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            Text="{Binding Description}" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBlock
            Grid.Row="10"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            Path:
        </TextBlock>

        <Grid
            Grid.Row="11"
            Grid.ColumnSpan="3"
            IsEnabled="{Binding Connection.IsConnectionValid}"
            Margin="0 6 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                x:Name="LocalPathTextBox"
                Grid.Column="0"
                Text="{Binding LocalPath}" />
            <Button
                Grid.Column="1"
                Command="{Binding BrowseForRepositoryPathCommand}"
                Height="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}"
                Margin="6 0 0 0"
                VerticalAlignment="Center"
                MinWidth="23"
                Width="{Binding ElementName=LocalPathTextBox, Path=ActualHeight}">
                ...
            </Button>
        </Grid>

        <Grid
            Grid.Row="12"
            Grid.ColumnSpan="3"
            Margin="0 16 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                HorizontalAlignment="Left"
                Command="{Binding HelpCommand}">
                Help
            </Button>

            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    IsDefault="True"
                    Command="{Binding SubmitDialogCommand}">
                    Clone
                </Button>
                <Button
                    IsCancel="True"
                    Margin="6 0 0 0"
                    Command="{Binding CancelDialogCommand}">
                    Cancel
                </Button>
            </StackPanel>
        </Grid>

    </Grid>
</local:ThemedDialogWindow>
