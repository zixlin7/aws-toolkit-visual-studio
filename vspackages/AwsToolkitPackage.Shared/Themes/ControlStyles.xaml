<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:toolkit="clr-namespace:Amazon.AWSToolkit.VisualStudio"
                    xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseToolkitStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Static themes:ToolkitThemeResourceKeys.ButtonStyle}}">
    </Style>

    <!-- Apply the VS ProgressBar Theme as the default ProgressBar theme -->
    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Static vsShell:VsResourceKeys.ProgressBarStyleKey}}">
    </Style>

    <!-- TODO : TEMP : When a version of Community.VisualStudio.Toolkit is available with PasswordBox style, remove this style.
        Community.VisualStudio.Toolkit version 15.0.75.103 does not contain PasswordBox style, and a new version hasn't been released yet. -->
    <Style TargetType="PasswordBox">
        <Setter Property="Padding" Value="{StaticResource {x:Static toolkit:ThemeResourceKeys.InputPaddingKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBorderBrushKey}}" />

        <Setter Property="Template">
            <Setter.Value>
                <!-- 
                The default template defines a trigger for IsMouseOver that changes the border
                brush. To get our style triggers to apply, we need to override the template.
                -->
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border 
                        x:Name="border" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        >

                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBackgroundBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBorderBrushKey}}" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBackgroundFocusedBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxTextFocusedBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBorderFocusedBrushKey}}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBackgroundDisabledBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxTextDisabledBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platform:CommonControlsColors.TextBoxBorderDisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
