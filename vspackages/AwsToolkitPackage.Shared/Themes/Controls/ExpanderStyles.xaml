<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:toolkit="clr-namespace:Amazon.AWSToolkit.VisualStudio"
    xmlns:themes="clr-namespace:Amazon.AWSToolkit.Themes;assembly=AWSToolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../BaseToolkitStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- There is no VS Theme for the Expander. Define a Toolkit Theme for the Expander that matches the VS styling in this file. -->

    <!-- ExpanderHeaderFocusVisual - renders the "selection" around the control when it has focus -->
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            StrokeDashArray="1 2"
                            Stroke="{DynamicResource {x:Static platform:CommonControlsColors.FocusVisualBrushKey}}"
                            SnapsToDevicePixels="true"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ExpanderHeaderStyle - the Expander header (contains the collapse/expand button and header contents) -->
    <Style x:Key="ExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{DynamicResource {x:Static toolkit:ThemeResourceKeys.InputPaddingKey}}"
                        Background="{DynamicResource {x:Static platform:EnvironmentColors.GridHeadingBackgroundBrushKey}}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!-- Renders a right-facing arrow -->
                            <Path
                                Grid.Column="0"
                                x:Name="expanderArrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 1,1  L 1,8  L 4.5,4.5 Z"
                                StrokeThickness="1"
                                Stroke="{DynamicResource {x:Static platform:CommonControlsColors.ButtonTextBrushKey}}"
                                Fill="Transparent"
                                SnapsToDevicePixels="false" />
                            <ContentPresenter
                                Grid.Column="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!-- Renders a "south-east" facing arrow -->
                            <Setter Property="Data" TargetName="expanderArrow" Value="M 1,6 L 6,6 L 6,1 Z" />
                            <Setter Property="Fill" TargetName="expanderArrow"
                                    Value="{Binding ElementName=expanderArrow, Path=Stroke}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="expanderArrow"
                                    Value="{DynamicResource {x:Static platform:CommonControlsColors.ButtonHoverTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="expanderArrow"
                                    Value="{DynamicResource {x:Static platform:CommonControlsColors.ButtonPressedTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="expanderArrow"
                                    Value="{DynamicResource {x:Static platform:CommonControlsColors.ButtonDisabledTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The Toolkit's style for Expander controls -->
    <Style x:Key="{x:Static themes:ToolkitThemeResourceKeys.ExpanderStyle}" TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static platform:EnvironmentColors.GridHeadingTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <!-- The expand/collapse button, and heading contents -->
                            <ToggleButton
                                x:Name="HeaderSite"
                                DockPanel.Dock="Top"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Content="{TemplateBinding Header}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                FontStretch="{TemplateBinding FontStretch}"
                                Foreground="{TemplateBinding Foreground}"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontWeight="{TemplateBinding FontWeight}"
                                FontSize="{TemplateBinding FontSize}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}"
                                Style="{StaticResource ExpanderHeaderStyle}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <!-- The contents that are expanded or collapsed -->
                            <ContentPresenter
                                x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- ExpandDirection is not supported in this template. If you need to change ExpandDirection, you'll need to alter the template 
                        in a manner similar to the base WPF Expander control style. -->
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Apply the Toolkit Expander Theme as the default Expander theme -->
    <Style TargetType="Expander" BasedOn="{StaticResource {x:Static themes:ToolkitThemeResourceKeys.ExpanderStyle}}" />

</ResourceDictionary>
