using Microsoft.VisualStudio.Shell;

// Avoid loading AWS SDK dlls from the GAC, and use the DLLs bundled with this extension.
// This writes to the .pkgdef that will be produced at compile time at the root of the VSIX, 
// and instructs Visual Studio knows where to load DLLs from.
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.AutoScaling.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CloudFormation.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CloudFront.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CloudWatch.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CloudWatchEvents.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CloudWatchLogs.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CodeArtifact.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CodeCatalyst.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CodeCommit.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CognitoIdentity.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.CognitoSync.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.Core.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.DynamoDBv2.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.EC2.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.ECR.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.ECS.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.ElasticBeanstalk.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.ElasticLoadBalancing.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.ElasticLoadBalancingV2.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.IdentityManagement.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.KeyManagementService.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.Kinesis.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.Lambda.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.RDS.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.S3.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SecurityToken.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SimpleDB.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SimpleNotificationService.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SQS.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SSO.dll")]
[assembly: ProvideCodeBase(CodeBase = "$PackageFolder$\\AWSSDK.SSOOIDC.dll")]
